                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.4.0 Thu Feb 10 12:42:19 2011
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module src/rtc
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _monthDays
                             13 	.globl _day_full
                             14 	.globl _day
                             15 	.globl _month
                             16 	.globl _check_time
                             17 	.globl _rbyte_3w
                             18 	.globl _wbyte_3w
                             19 	.globl _reset_3w
                             20 	.globl _clear_time_struct
                             21 	.globl _ds1302_read_rtc
                             22 	.globl _ds1302_read_rtc_bcd
                             23 	.globl _ds1302_write_rtc
                             24 	.globl _bcd2bin
                             25 	.globl _local_gmtime
                             26 	.globl _local_mktime
                             27 	.globl _printf_asctime
                             28 	.globl _printf_short_asctime
                             29 	.globl _printf_date
                             30 	.globl _printf_weekday_short
                             31 	.globl _printf_day
                             32 	.globl _printf_time
                             33 	.globl _ds1302_write_memory
                             34 	.globl _ds1302_read_memory
                             35 ;--------------------------------------------------------
                             36 ; special function registers
                             37 ;--------------------------------------------------------
                    0080     38 _P0	=	0x0080
                    0081     39 _SP	=	0x0081
                    0082     40 _DPL	=	0x0082
                    0083     41 _DPH	=	0x0083
                    0087     42 _PCON	=	0x0087
                    0088     43 _TCON	=	0x0088
                    0089     44 _TMOD	=	0x0089
                    008A     45 _TL0	=	0x008a
                    008B     46 _TL1	=	0x008b
                    008C     47 _TH0	=	0x008c
                    008D     48 _TH1	=	0x008d
                    0090     49 _P1	=	0x0090
                    0098     50 _SCON	=	0x0098
                    0099     51 _SBUF	=	0x0099
                    00A0     52 _P2	=	0x00a0
                    00B0     53 _P3	=	0x00b0
                    00B8     54 _IP	=	0x00b8
                    00C8     55 _T2CON	=	0x00c8
                    00C9     56 _T2MOD	=	0x00c9
                    00CA     57 _RCAP2L	=	0x00ca
                    00CB     58 _RCAP2H	=	0x00cb
                    00CC     59 _TL2	=	0x00cc
                    00CD     60 _TH2	=	0x00cd
                    00D0     61 _PSW	=	0x00d0
                    00E0     62 _A	=	0x00e0
                    00A6     63 _WDTRST	=	0x00a6
                    00A7     64 _WDTPRG	=	0x00a7
                    00A2     65 _AUXR1	=	0x00a2
                    008E     66 _AUXR	=	0x008e
                    00B9     67 _SADEN	=	0x00b9
                    00BA     68 _SADEN_1	=	0x00ba
                    00B7     69 _IPH	=	0x00b7
                    00B7     70 _IPH0	=	0x00b7
                    00B8     71 _IPL	=	0x00b8
                    00B8     72 _IPL0	=	0x00b8
                    00A8     73 _IE	=	0x00a8
                    00A9     74 _SADDR	=	0x00a9
                    00AA     75 _SADDR_1	=	0x00aa
                    00D8     76 _CCON	=	0x00d8
                    00D9     77 _CMOD	=	0x00d9
                    00DA     78 _CCAPM0	=	0x00da
                    00DB     79 _CCAPM1	=	0x00db
                    00DC     80 _CCAPM2	=	0x00dc
                    00DD     81 _CCAPM3	=	0x00dd
                    00DE     82 _CCAPM4	=	0x00de
                    00E9     83 _CL	=	0x00e9
                    00EA     84 _CCAP0L	=	0x00ea
                    00EB     85 _CCAP1L	=	0x00eb
                    00EC     86 _CCAP2L	=	0x00ec
                    00ED     87 _CCAP3L	=	0x00ed
                    00EE     88 _CCAP4L	=	0x00ee
                    00E0     89 _ACC	=	0x00e0
                    00F0     90 _B	=	0x00f0
                    00F9     91 _CH	=	0x00f9
                    00FA     92 _CCAP0H	=	0x00fa
                    00FB     93 _CCAP1H	=	0x00fb
                    00FC     94 _CCAP2H	=	0x00fc
                    00FD     95 _CCAP3H	=	0x00fd
                    00FE     96 _CCAP4H	=	0x00fe
                    00FF     97 _ICON	=	0x00ff
                    0085     98 _CKSEL	=	0x0085
                    0086     99 _OSCCON	=	0x0086
                    00D1    100 _FCON	=	0x00d1
                    00D2    101 _EECON	=	0x00d2
                    00D3    102 _EETIM	=	0x00d3
                            103 ;--------------------------------------------------------
                            104 ; special function bits 
                            105 ;--------------------------------------------------------
                    0080    106 _P0_0	=	0x0080
                    0081    107 _P0_1	=	0x0081
                    0082    108 _P0_2	=	0x0082
                    0083    109 _P0_3	=	0x0083
                    0084    110 _P0_4	=	0x0084
                    0085    111 _P0_5	=	0x0085
                    0086    112 _P0_6	=	0x0086
                    0087    113 _P0_7	=	0x0087
                    00A7    114 _ENBOOT	=	0x00a7
                    0088    115 _IT0	=	0x0088
                    0089    116 _IE0	=	0x0089
                    008A    117 _IT1	=	0x008a
                    008B    118 _IE1	=	0x008b
                    008C    119 _TR0	=	0x008c
                    008D    120 _TF0	=	0x008d
                    008E    121 _TR1	=	0x008e
                    008F    122 _TF1	=	0x008f
                    0090    123 _P1_0	=	0x0090
                    0091    124 _P1_1	=	0x0091
                    0092    125 _P1_2	=	0x0092
                    0093    126 _P1_3	=	0x0093
                    0094    127 _P1_4	=	0x0094
                    0095    128 _P1_5	=	0x0095
                    0096    129 _P1_6	=	0x0096
                    0097    130 _P1_7	=	0x0097
                    0090    131 _T2	=	0x0090
                    0091    132 _T2EX	=	0x0091
                    0098    133 _RI	=	0x0098
                    0099    134 _TI	=	0x0099
                    009A    135 _RB8	=	0x009a
                    009B    136 _TB8	=	0x009b
                    009C    137 _REN	=	0x009c
                    009D    138 _SM2	=	0x009d
                    009E    139 _SM1	=	0x009e
                    009F    140 _SM0	=	0x009f
                    00A0    141 _P2_0	=	0x00a0
                    00A1    142 _P2_1	=	0x00a1
                    00A2    143 _P2_2	=	0x00a2
                    00A3    144 _P2_3	=	0x00a3
                    00A4    145 _P2_4	=	0x00a4
                    00A5    146 _P2_5	=	0x00a5
                    00A6    147 _P2_6	=	0x00a6
                    00A7    148 _P2_7	=	0x00a7
                    00B0    149 _P3_0	=	0x00b0
                    00B1    150 _P3_1	=	0x00b1
                    00B2    151 _P3_2	=	0x00b2
                    00B3    152 _P3_3	=	0x00b3
                    00B4    153 _P3_4	=	0x00b4
                    00B5    154 _P3_5	=	0x00b5
                    00B6    155 _P3_6	=	0x00b6
                    00B7    156 _P3_7	=	0x00b7
                    00B0    157 _RXD	=	0x00b0
                    00B1    158 _TXD	=	0x00b1
                    00B2    159 _INT0	=	0x00b2
                    00B3    160 _INT1	=	0x00b3
                    00B4    161 _T0	=	0x00b4
                    00B5    162 _T1	=	0x00b5
                    00B6    163 _WR	=	0x00b6
                    00B7    164 _RD	=	0x00b7
                    00B8    165 _PX0	=	0x00b8
                    00B9    166 _PT0	=	0x00b9
                    00BA    167 _PX1	=	0x00ba
                    00BB    168 _PT1	=	0x00bb
                    00BC    169 _PS	=	0x00bc
                    00BD    170 _PT2	=	0x00bd
                    00C8    171 _T2CON_0	=	0x00c8
                    00C9    172 _T2CON_1	=	0x00c9
                    00CA    173 _T2CON_2	=	0x00ca
                    00CB    174 _T2CON_3	=	0x00cb
                    00CC    175 _T2CON_4	=	0x00cc
                    00CD    176 _T2CON_5	=	0x00cd
                    00CE    177 _T2CON_6	=	0x00ce
                    00CF    178 _T2CON_7	=	0x00cf
                    00C8    179 _CP_RL2	=	0x00c8
                    00C9    180 _C_T2	=	0x00c9
                    00CA    181 _TR2	=	0x00ca
                    00CB    182 _EXEN2	=	0x00cb
                    00CC    183 _TCLK	=	0x00cc
                    00CD    184 _RCLK	=	0x00cd
                    00CE    185 _EXF2	=	0x00ce
                    00CF    186 _TF2	=	0x00cf
                    00D0    187 _P	=	0x00d0
                    00D1    188 _FL	=	0x00d1
                    00D2    189 _OV	=	0x00d2
                    00D3    190 _RS0	=	0x00d3
                    00D4    191 _RS1	=	0x00d4
                    00D5    192 _F0	=	0x00d5
                    00D6    193 _AC	=	0x00d6
                    00D7    194 _CY	=	0x00d7
                    00AF    195 _EA	=	0x00af
                    00AE    196 _EC	=	0x00ae
                    00AD    197 _ET2	=	0x00ad
                    00AC    198 _ES	=	0x00ac
                    00AB    199 _ET1	=	0x00ab
                    00AA    200 _EX1	=	0x00aa
                    00A9    201 _ET0	=	0x00a9
                    00A8    202 _EX0	=	0x00a8
                    00DF    203 _CF	=	0x00df
                    00DE    204 _CR	=	0x00de
                    00DC    205 _CCF4	=	0x00dc
                    00DB    206 _CCF3	=	0x00db
                    00DA    207 _CCF2	=	0x00da
                    00D9    208 _CCF1	=	0x00d9
                    00D8    209 _CCF0	=	0x00d8
                            210 ;--------------------------------------------------------
                            211 ; overlayable register banks 
                            212 ;--------------------------------------------------------
                            213 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     214 	.ds 8
                            215 ;--------------------------------------------------------
                            216 ; internal ram data
                            217 ;--------------------------------------------------------
                            218 	.area DSEG    (DATA)
                            219 ;--------------------------------------------------------
                            220 ; overlayable items in internal ram 
                            221 ;--------------------------------------------------------
                            222 	.area OSEG    (OVR,DATA)
                            223 ;--------------------------------------------------------
                            224 ; indirectly addressable internal ram data
                            225 ;--------------------------------------------------------
                            226 	.area ISEG    (DATA)
                            227 ;--------------------------------------------------------
                            228 ; bit data
                            229 ;--------------------------------------------------------
                            230 	.area BSEG    (BIT)
                            231 ;--------------------------------------------------------
                            232 ; external ram data
                            233 ;--------------------------------------------------------
                            234 	.area XSEG    (XDATA)
                            235 ;--------------------------------------------------------
                            236 ; external initialized ram data
                            237 ;--------------------------------------------------------
                            238 	.area XISEG   (XDATA)
                            239 ;--------------------------------------------------------
                            240 ; global & static initialisations
                            241 ;--------------------------------------------------------
                            242 	.area GSINIT  (CODE)
                            243 	.area GSFINAL (CODE)
                            244 	.area GSINIT  (CODE)
                            245 ;--------------------------------------------------------
                            246 ; Home
                            247 ;--------------------------------------------------------
                            248 	.area HOME    (CODE)
                            249 	.area CSEG    (CODE)
                            250 ;--------------------------------------------------------
                            251 ; code
                            252 ;--------------------------------------------------------
                            253 	.area CSEG    (CODE)
                            254 ;------------------------------------------------------------
                            255 ;Allocation info for local variables in function 'reset_3w'
                            256 ;------------------------------------------------------------
                            257 ;------------------------------------------------------------
                            258 ;src/rtc.c:76: void reset_3w()
                            259 ;	-----------------------------------------
                            260 ;	 function reset_3w
                            261 ;	-----------------------------------------
   0000                     262 _reset_3w:
                    0002    263 	ar2 = 0x02
                    0003    264 	ar3 = 0x03
                    0004    265 	ar4 = 0x04
                    0005    266 	ar5 = 0x05
                    0006    267 	ar6 = 0x06
                    0007    268 	ar7 = 0x07
                    0000    269 	ar0 = 0x00
                    0001    270 	ar1 = 0x01
   0000 C0*00               271 	push	_bp
   0002 85 81*00            272 	mov	_bp,sp
                            273 ;src/rtc.c:78: SCLK = 0;
                            274 ;     genAssign
   0005 C2 96               275 	clr	_P1_6
                            276 ;src/rtc.c:79: RSTB = 0;
                            277 ;     genAssign
   0007 C2 97               278 	clr	_P1_7
                            279 ;src/rtc.c:80: RSTB = 1;
                            280 ;     genAssign
   0009 D2 97               281 	setb	_P1_7
   000B                     282 00101$:
   000B 85*00 81            283 	mov	sp,_bp
   000E D0*00               284 	pop	_bp
   0010 22                  285 	ret
                            286 ;------------------------------------------------------------
                            287 ;Allocation info for local variables in function 'wbyte_3w'
                            288 ;------------------------------------------------------------
                            289 ;W_Byte                    Allocated to registers r2 
                            290 ;i                         Allocated to registers 
                            291 ;temp                      Allocated to registers r2 
                            292 ;------------------------------------------------------------
                            293 ;src/rtc.c:83: void wbyte_3w(uchar W_Byte)
                            294 ;	-----------------------------------------
                            295 ;	 function wbyte_3w
                            296 ;	-----------------------------------------
   0011                     297 _wbyte_3w:
   0011 C0*00               298 	push	_bp
   0013 85 81*00            299 	mov	_bp,sp
                            300 ;     genReceive
   0016 AA 82               301 	mov	r2,dpl
                            302 ;src/rtc.c:88: temp = W_Byte;
                            303 ;     genAssign
                            304 ;src/rtc.c:90: for(i = 0; i < 8; ++i)
                            305 ;     genAssign
   0018 7B 00               306 	mov	r3,#0x00
   001A                     307 00103$:
                            308 ;     genCmpLt
                            309 ;     genCmp
   001A BB 08 00            310 	cjne	r3,#0x08,00112$
   001D                     311 00112$:
                            312 ;     genIfxJump
                            313 ;       Peephole 108    removed ljmp by inverse jump logic
   001D 50 13               314 	jnc     00107$
   001F                     315 00113$:
                            316 ;src/rtc.c:92: IO = 0;
                            317 ;     genAssign
   001F C2 95               318 	clr	_P1_5
                            319 ;src/rtc.c:93: if(temp & 0x01)
                            320 ;     genAnd
   0021 EA                  321 	mov	a,r2
                            322 ;     genIfxJump
                            323 ;       Peephole 111    removed ljmp by inverse jump logic
   0022 30 E0 02            324 	jnb     acc.0,00102$
   0025                     325 00114$:
                            326 ;src/rtc.c:95: IO = 1;	/* set port pin high to read data */
                            327 ;     genAssign
   0025 D2 95               328 	setb	_P1_5
   0027                     329 00102$:
                            330 ;src/rtc.c:97: SCLK = 0;
                            331 ;     genAssign
   0027 C2 96               332 	clr	_P1_6
                            333 ;src/rtc.c:98: SCLK = 1;
                            334 ;     genAssign
   0029 D2 96               335 	setb	_P1_6
                            336 ;src/rtc.c:99: temp >>= 1;
                            337 ;     genRightShift
                            338 ;     genRightShiftLiteral
                            339 ;     genrshOne
   002B EA                  340 	mov	a,r2
   002C C3                  341 	clr	c
   002D 13                  342 	rrc	a
   002E FA                  343 	mov	r2,a
                            344 ;src/rtc.c:90: for(i = 0; i < 8; ++i)
                            345 ;     genPlus
                            346 ;     genPlusIncr
   002F 0B                  347 	inc	r3
                            348 ;       Peephole 112.b  changed ljmp to sjmp
   0030 80 E8               349 	sjmp    00103$
   0032                     350 00107$:
   0032 85*00 81            351 	mov	sp,_bp
   0035 D0*00               352 	pop	_bp
   0037 22                  353 	ret
                            354 ;------------------------------------------------------------
                            355 ;Allocation info for local variables in function 'rbyte_3w'
                            356 ;------------------------------------------------------------
                            357 ;i                         Allocated to registers 
                            358 ;R_Byte                    Allocated to registers r2 
                            359 ;TmpByte                   Allocated to registers r4 
                            360 ;------------------------------------------------------------
                            361 ;src/rtc.c:103: uchar rbyte_3w()
                            362 ;	-----------------------------------------
                            363 ;	 function rbyte_3w
                            364 ;	-----------------------------------------
   0038                     365 _rbyte_3w:
   0038 C0*00               366 	push	_bp
   003A 85 81*00            367 	mov	_bp,sp
                            368 ;src/rtc.c:109: R_Byte = 0x00;
                            369 ;     genAssign
   003D 7A 00               370 	mov	r2,#0x00
                            371 ;src/rtc.c:110: IO = 1;
                            372 ;     genAssign
   003F D2 95               373 	setb	_P1_5
                            374 ;src/rtc.c:111: for(i=0; i<8; ++i)
                            375 ;     genAssign
   0041 7B 00               376 	mov	r3,#0x00
   0043                     377 00101$:
                            378 ;     genCmpLt
                            379 ;     genCmp
   0043 BB 08 00            380 	cjne	r3,#0x08,00109$
   0046                     381 00109$:
                            382 ;     genIfxJump
                            383 ;       Peephole 108    removed ljmp by inverse jump logic
   0046 50 17               384 	jnc     00104$
   0048                     385 00110$:
                            386 ;src/rtc.c:113: SCLK = 1;
                            387 ;     genAssign
   0048 D2 96               388 	setb	_P1_6
                            389 ;src/rtc.c:114: SCLK = 0;
                            390 ;     genAssign
   004A C2 96               391 	clr	_P1_6
                            392 ;src/rtc.c:115: TmpByte = (uchar)IO;
                            393 ;     genAssign
   004C E4                  394 	clr	a
   004D A2 95               395 	mov	c,_P1_5
   004F 33                  396 	rlc	a
                            397 ;src/rtc.c:116: TmpByte <<= 7;
                            398 ;     genLeftShift
                            399 ;     genLeftShiftLiteral
                            400 ;     genlshOne
                            401 ;       Peephole 105    removed redundant mov
   0050 FC                  402 	mov     r4,a
   0051 03                  403 	rr	a
   0052 54 80               404 	anl	a,#0x80
   0054 FC                  405 	mov	r4,a
                            406 ;src/rtc.c:117: R_Byte >>= 1;
                            407 ;     genRightShift
                            408 ;     genRightShiftLiteral
                            409 ;     genrshOne
   0055 EA                  410 	mov	a,r2
   0056 C3                  411 	clr	c
   0057 13                  412 	rrc	a
   0058 FA                  413 	mov	r2,a
                            414 ;src/rtc.c:118: R_Byte |= TmpByte; 
                            415 ;     genOr
   0059 EC                  416 	mov	a,r4
   005A 42 02               417 	orl	ar2,a
                            418 ;src/rtc.c:111: for(i=0; i<8; ++i)
                            419 ;     genPlus
                            420 ;     genPlusIncr
   005C 0B                  421 	inc	r3
                            422 ;       Peephole 112.b  changed ljmp to sjmp
   005D 80 E4               423 	sjmp    00101$
   005F                     424 00104$:
                            425 ;src/rtc.c:120: return R_Byte;
                            426 ;     genRet
   005F 8A 82               427 	mov	dpl,r2
   0061                     428 00105$:
   0061 85*00 81            429 	mov	sp,_bp
   0064 D0*00               430 	pop	_bp
   0066 22                  431 	ret
                            432 ;------------------------------------------------------------
                            433 ;Allocation info for local variables in function 'clear_time_struct'
                            434 ;------------------------------------------------------------
                            435 ;tm_time                   Allocated to registers r2 r3 r4 
                            436 ;------------------------------------------------------------
                            437 ;src/rtc.c:137: void clear_time_struct ( struct tm *tm_time )
                            438 ;	-----------------------------------------
                            439 ;	 function clear_time_struct
                            440 ;	-----------------------------------------
   0067                     441 _clear_time_struct:
   0067 C0*00               442 	push	_bp
   0069 85 81*00            443 	mov	_bp,sp
                            444 ;     genReceive
                            445 ;src/rtc.c:139: tm_time->tm_sec = 0;
                            446 ;     genPointerSet
                            447 ;     genGenPointerSet
   006C AA 82               448 	mov     r2,dpl
   006E AB 83               449 	mov     r3,dph
   0070 AC F0               450 	mov     r4,b
                            451 ;       Peephole 238.d  removed 3 redundant moves
                            452 ;       Peephole 181    changed mov to clr
   0072 E4                  453 	clr     a
   0073 12s00r00            454 	lcall	__gptrput
                            455 ;src/rtc.c:140: tm_time->tm_min = 0;
                            456 ;     genPlus
                            457 ;     genPlusIncr
   0076 74 01               458 	mov	a,#0x01
                            459 ;       Peephole 236.a  used r2 instead of ar2
   0078 2A                  460 	add     a,r2
   0079 FD                  461 	mov	r5,a
                            462 ;       Peephole 181    changed mov to clr
   007A E4                  463 	clr     a
                            464 ;       Peephole 236.b  used r3 instead of ar3
   007B 3B                  465 	addc    a,r3
   007C FE                  466 	mov	r6,a
   007D 8C 07               467 	mov	ar7,r4
                            468 ;     genPointerSet
                            469 ;     genGenPointerSet
   007F 8D 82               470 	mov	dpl,r5
   0081 8E 83               471 	mov	dph,r6
   0083 8F F0               472 	mov	b,r7
                            473 ;       Peephole 181    changed mov to clr
   0085 E4                  474 	clr     a
   0086 12s00r00            475 	lcall	__gptrput
                            476 ;src/rtc.c:141: tm_time->tm_hour = 0;
                            477 ;     genPlus
                            478 ;     genPlusIncr
   0089 74 02               479 	mov	a,#0x02
                            480 ;       Peephole 236.a  used r2 instead of ar2
   008B 2A                  481 	add     a,r2
   008C FD                  482 	mov	r5,a
                            483 ;       Peephole 181    changed mov to clr
   008D E4                  484 	clr     a
                            485 ;       Peephole 236.b  used r3 instead of ar3
   008E 3B                  486 	addc    a,r3
   008F FE                  487 	mov	r6,a
   0090 8C 07               488 	mov	ar7,r4
                            489 ;     genPointerSet
                            490 ;     genGenPointerSet
   0092 8D 82               491 	mov	dpl,r5
   0094 8E 83               492 	mov	dph,r6
   0096 8F F0               493 	mov	b,r7
                            494 ;       Peephole 181    changed mov to clr
   0098 E4                  495 	clr     a
   0099 12s00r00            496 	lcall	__gptrput
                            497 ;src/rtc.c:142: tm_time->tm_mday = 1;
                            498 ;     genPlus
                            499 ;     genPlusIncr
   009C 74 03               500 	mov	a,#0x03
                            501 ;       Peephole 236.a  used r2 instead of ar2
   009E 2A                  502 	add     a,r2
   009F FD                  503 	mov	r5,a
                            504 ;       Peephole 181    changed mov to clr
   00A0 E4                  505 	clr     a
                            506 ;       Peephole 236.b  used r3 instead of ar3
   00A1 3B                  507 	addc    a,r3
   00A2 FE                  508 	mov	r6,a
   00A3 8C 07               509 	mov	ar7,r4
                            510 ;     genPointerSet
                            511 ;     genGenPointerSet
   00A5 8D 82               512 	mov	dpl,r5
   00A7 8E 83               513 	mov	dph,r6
   00A9 8F F0               514 	mov	b,r7
   00AB 74 01               515 	mov	a,#0x01
   00AD 12s00r00            516 	lcall	__gptrput
                            517 ;src/rtc.c:143: tm_time->tm_mon = 0;
                            518 ;     genPlus
                            519 ;     genPlusIncr
   00B0 74 04               520 	mov	a,#0x04
                            521 ;       Peephole 236.a  used r2 instead of ar2
   00B2 2A                  522 	add     a,r2
   00B3 FD                  523 	mov	r5,a
                            524 ;       Peephole 181    changed mov to clr
   00B4 E4                  525 	clr     a
                            526 ;       Peephole 236.b  used r3 instead of ar3
   00B5 3B                  527 	addc    a,r3
   00B6 FE                  528 	mov	r6,a
   00B7 8C 07               529 	mov	ar7,r4
                            530 ;     genPointerSet
                            531 ;     genGenPointerSet
   00B9 8D 82               532 	mov	dpl,r5
   00BB 8E 83               533 	mov	dph,r6
   00BD 8F F0               534 	mov	b,r7
                            535 ;       Peephole 181    changed mov to clr
   00BF E4                  536 	clr     a
   00C0 12s00r00            537 	lcall	__gptrput
                            538 ;src/rtc.c:144: tm_time->tm_wday = 1;
                            539 ;     genPlus
   00C3 74 07               540 	mov	a,#0x07
                            541 ;       Peephole 236.a  used r2 instead of ar2
   00C5 2A                  542 	add     a,r2
   00C6 FD                  543 	mov	r5,a
                            544 ;       Peephole 181    changed mov to clr
   00C7 E4                  545 	clr     a
                            546 ;       Peephole 236.b  used r3 instead of ar3
   00C8 3B                  547 	addc    a,r3
   00C9 FE                  548 	mov	r6,a
   00CA 8C 07               549 	mov	ar7,r4
                            550 ;     genPointerSet
                            551 ;     genGenPointerSet
   00CC 8D 82               552 	mov	dpl,r5
   00CE 8E 83               553 	mov	dph,r6
   00D0 8F F0               554 	mov	b,r7
   00D2 74 01               555 	mov	a,#0x01
   00D4 12s00r00            556 	lcall	__gptrput
                            557 ;src/rtc.c:145: tm_time->tm_year = 0;
                            558 ;     genPlus
   00D7 74 05               559 	mov	a,#0x05
                            560 ;       Peephole 236.a  used r2 instead of ar2
   00D9 2A                  561 	add     a,r2
   00DA FA                  562 	mov	r2,a
                            563 ;       Peephole 181    changed mov to clr
   00DB E4                  564 	clr     a
                            565 ;       Peephole 236.b  used r3 instead of ar3
   00DC 3B                  566 	addc    a,r3
   00DD FB                  567 	mov	r3,a
                            568 ;     genPointerSet
                            569 ;     genGenPointerSet
   00DE 8A 82               570 	mov	dpl,r2
   00E0 8B 83               571 	mov	dph,r3
   00E2 8C F0               572 	mov	b,r4
                            573 ;       Peephole 181    changed mov to clr
   00E4 E4                  574 	clr     a
   00E5 12s00r00            575 	lcall	__gptrput
   00E8 A3                  576 	inc	dptr
                            577 ;       Peephole 181    changed mov to clr
   00E9 E4                  578 	clr     a
   00EA 12s00r00            579 	lcall	__gptrput
   00ED                     580 00101$:
   00ED 85*00 81            581 	mov	sp,_bp
   00F0 D0*00               582 	pop	_bp
   00F2 22                  583 	ret
                            584 ;------------------------------------------------------------
                            585 ;Allocation info for local variables in function 'ds1302_read_rtc'
                            586 ;------------------------------------------------------------
                            587 ;tm_time                   Allocated to registers r2 r3 r4 
                            588 ;------------------------------------------------------------
                            589 ;src/rtc.c:148: void ds1302_read_rtc ( struct tm *tm_time )
                            590 ;	-----------------------------------------
                            591 ;	 function ds1302_read_rtc
                            592 ;	-----------------------------------------
   00F3                     593 _ds1302_read_rtc:
   00F3 C0*00               594 	push	_bp
   00F5 85 81*00            595 	mov	_bp,sp
                            596 ;     genReceive
   00F8 AA 82               597 	mov	r2,dpl
   00FA AB 83               598 	mov	r3,dph
   00FC AC F0               599 	mov	r4,b
                            600 ;src/rtc.c:150: reset_3w();
                            601 ;     genCall
   00FE C0 02               602 	push	ar2
   0100 C0 03               603 	push	ar3
   0102 C0 04               604 	push	ar4
   0104 12s00r00            605 	lcall	_reset_3w
   0107 D0 04               606 	pop	ar4
   0109 D0 03               607 	pop	ar3
   010B D0 02               608 	pop	ar2
                            609 ;src/rtc.c:151: wbyte_3w(RTC_BURST|0x01);
                            610 ;     genCall
   010D 75 82 BF            611 	mov	dpl,#0xBF
   0110 C0 02               612 	push	ar2
   0112 C0 03               613 	push	ar3
   0114 C0 04               614 	push	ar4
   0116 12s00r11            615 	lcall	_wbyte_3w
   0119 D0 04               616 	pop	ar4
   011B D0 03               617 	pop	ar3
   011D D0 02               618 	pop	ar2
                            619 ;src/rtc.c:152: tm_time->tm_sec = bcd2bin(rbyte_3w()&0x7F);
                            620 ;     genCall
   011F C0 02               621 	push	ar2
   0121 C0 03               622 	push	ar3
   0123 C0 04               623 	push	ar4
   0125 12s00r38            624 	lcall	_rbyte_3w
   0128 E5 82               625 	mov	a,dpl
   012A D0 04               626 	pop	ar4
   012C D0 03               627 	pop	ar3
   012E D0 02               628 	pop	ar2
                            629 ;     genAnd
   0130 54 7F               630 	anl	a,#0x7F
   0132 F5 82               631 	mov	dpl,a
                            632 ;     genCall
   0134 C0 02               633 	push	ar2
   0136 C0 03               634 	push	ar3
   0138 C0 04               635 	push	ar4
   013A 12s05rF8            636 	lcall	_bcd2bin
   013D AD 82               637 	mov	r5,dpl
   013F D0 04               638 	pop	ar4
   0141 D0 03               639 	pop	ar3
   0143 D0 02               640 	pop	ar2
                            641 ;     genPointerSet
                            642 ;     genGenPointerSet
   0145 8A 82               643 	mov	dpl,r2
   0147 8B 83               644 	mov	dph,r3
   0149 8C F0               645 	mov	b,r4
   014B ED                  646 	mov	a,r5
   014C 12s00r00            647 	lcall	__gptrput
                            648 ;src/rtc.c:153: tm_time->tm_min = bcd2bin(rbyte_3w()&0x7F);
                            649 ;     genPlus
                            650 ;     genPlusIncr
   014F 74 01               651 	mov	a,#0x01
                            652 ;       Peephole 236.a  used r2 instead of ar2
   0151 2A                  653 	add     a,r2
   0152 FD                  654 	mov	r5,a
                            655 ;       Peephole 181    changed mov to clr
   0153 E4                  656 	clr     a
                            657 ;       Peephole 236.b  used r3 instead of ar3
   0154 3B                  658 	addc    a,r3
   0155 FE                  659 	mov	r6,a
   0156 8C 07               660 	mov	ar7,r4
                            661 ;     genCall
   0158 C0 02               662 	push	ar2
   015A C0 03               663 	push	ar3
   015C C0 04               664 	push	ar4
   015E C0 05               665 	push	ar5
   0160 C0 06               666 	push	ar6
   0162 C0 07               667 	push	ar7
   0164 12s00r38            668 	lcall	_rbyte_3w
   0167 E5 82               669 	mov	a,dpl
   0169 D0 07               670 	pop	ar7
   016B D0 06               671 	pop	ar6
   016D D0 05               672 	pop	ar5
   016F D0 04               673 	pop	ar4
   0171 D0 03               674 	pop	ar3
   0173 D0 02               675 	pop	ar2
                            676 ;     genAnd
   0175 54 7F               677 	anl	a,#0x7F
   0177 F5 82               678 	mov	dpl,a
                            679 ;     genCall
   0179 C0 02               680 	push	ar2
   017B C0 03               681 	push	ar3
   017D C0 04               682 	push	ar4
   017F C0 05               683 	push	ar5
   0181 C0 06               684 	push	ar6
   0183 C0 07               685 	push	ar7
   0185 12s05rF8            686 	lcall	_bcd2bin
   0188 A8 82               687 	mov	r0,dpl
   018A D0 07               688 	pop	ar7
   018C D0 06               689 	pop	ar6
   018E D0 05               690 	pop	ar5
   0190 D0 04               691 	pop	ar4
   0192 D0 03               692 	pop	ar3
   0194 D0 02               693 	pop	ar2
                            694 ;     genPointerSet
                            695 ;     genGenPointerSet
   0196 8D 82               696 	mov	dpl,r5
   0198 8E 83               697 	mov	dph,r6
   019A 8F F0               698 	mov	b,r7
   019C E8                  699 	mov	a,r0
   019D 12s00r00            700 	lcall	__gptrput
                            701 ;src/rtc.c:154: tm_time->tm_hour = bcd2bin(rbyte_3w()&0x3F);
                            702 ;     genPlus
                            703 ;     genPlusIncr
   01A0 74 02               704 	mov	a,#0x02
                            705 ;       Peephole 236.a  used r2 instead of ar2
   01A2 2A                  706 	add     a,r2
   01A3 FD                  707 	mov	r5,a
                            708 ;       Peephole 181    changed mov to clr
   01A4 E4                  709 	clr     a
                            710 ;       Peephole 236.b  used r3 instead of ar3
   01A5 3B                  711 	addc    a,r3
   01A6 FE                  712 	mov	r6,a
   01A7 8C 07               713 	mov	ar7,r4
                            714 ;     genCall
   01A9 C0 02               715 	push	ar2
   01AB C0 03               716 	push	ar3
   01AD C0 04               717 	push	ar4
   01AF C0 05               718 	push	ar5
   01B1 C0 06               719 	push	ar6
   01B3 C0 07               720 	push	ar7
   01B5 12s00r38            721 	lcall	_rbyte_3w
   01B8 E5 82               722 	mov	a,dpl
   01BA D0 07               723 	pop	ar7
   01BC D0 06               724 	pop	ar6
   01BE D0 05               725 	pop	ar5
   01C0 D0 04               726 	pop	ar4
   01C2 D0 03               727 	pop	ar3
   01C4 D0 02               728 	pop	ar2
                            729 ;     genAnd
   01C6 54 3F               730 	anl	a,#0x3F
   01C8 F5 82               731 	mov	dpl,a
                            732 ;     genCall
   01CA C0 02               733 	push	ar2
   01CC C0 03               734 	push	ar3
   01CE C0 04               735 	push	ar4
   01D0 C0 05               736 	push	ar5
   01D2 C0 06               737 	push	ar6
   01D4 C0 07               738 	push	ar7
   01D6 12s05rF8            739 	lcall	_bcd2bin
   01D9 A8 82               740 	mov	r0,dpl
   01DB D0 07               741 	pop	ar7
   01DD D0 06               742 	pop	ar6
   01DF D0 05               743 	pop	ar5
   01E1 D0 04               744 	pop	ar4
   01E3 D0 03               745 	pop	ar3
   01E5 D0 02               746 	pop	ar2
                            747 ;     genPointerSet
                            748 ;     genGenPointerSet
   01E7 8D 82               749 	mov	dpl,r5
   01E9 8E 83               750 	mov	dph,r6
   01EB 8F F0               751 	mov	b,r7
   01ED E8                  752 	mov	a,r0
   01EE 12s00r00            753 	lcall	__gptrput
                            754 ;src/rtc.c:155: tm_time->tm_mday = bcd2bin(rbyte_3w()&0x3F);
                            755 ;     genPlus
                            756 ;     genPlusIncr
   01F1 74 03               757 	mov	a,#0x03
                            758 ;       Peephole 236.a  used r2 instead of ar2
   01F3 2A                  759 	add     a,r2
   01F4 FD                  760 	mov	r5,a
                            761 ;       Peephole 181    changed mov to clr
   01F5 E4                  762 	clr     a
                            763 ;       Peephole 236.b  used r3 instead of ar3
   01F6 3B                  764 	addc    a,r3
   01F7 FE                  765 	mov	r6,a
   01F8 8C 07               766 	mov	ar7,r4
                            767 ;     genCall
   01FA C0 02               768 	push	ar2
   01FC C0 03               769 	push	ar3
   01FE C0 04               770 	push	ar4
   0200 C0 05               771 	push	ar5
   0202 C0 06               772 	push	ar6
   0204 C0 07               773 	push	ar7
   0206 12s00r38            774 	lcall	_rbyte_3w
   0209 E5 82               775 	mov	a,dpl
   020B D0 07               776 	pop	ar7
   020D D0 06               777 	pop	ar6
   020F D0 05               778 	pop	ar5
   0211 D0 04               779 	pop	ar4
   0213 D0 03               780 	pop	ar3
   0215 D0 02               781 	pop	ar2
                            782 ;     genAnd
   0217 54 3F               783 	anl	a,#0x3F
   0219 F5 82               784 	mov	dpl,a
                            785 ;     genCall
   021B C0 02               786 	push	ar2
   021D C0 03               787 	push	ar3
   021F C0 04               788 	push	ar4
   0221 C0 05               789 	push	ar5
   0223 C0 06               790 	push	ar6
   0225 C0 07               791 	push	ar7
   0227 12s05rF8            792 	lcall	_bcd2bin
   022A A8 82               793 	mov	r0,dpl
   022C D0 07               794 	pop	ar7
   022E D0 06               795 	pop	ar6
   0230 D0 05               796 	pop	ar5
   0232 D0 04               797 	pop	ar4
   0234 D0 03               798 	pop	ar3
   0236 D0 02               799 	pop	ar2
                            800 ;     genPointerSet
                            801 ;     genGenPointerSet
   0238 8D 82               802 	mov	dpl,r5
   023A 8E 83               803 	mov	dph,r6
   023C 8F F0               804 	mov	b,r7
   023E E8                  805 	mov	a,r0
   023F 12s00r00            806 	lcall	__gptrput
                            807 ;src/rtc.c:156: tm_time->tm_mon = bcd2bin(rbyte_3w()&0x1F);
                            808 ;     genPlus
                            809 ;     genPlusIncr
   0242 74 04               810 	mov	a,#0x04
                            811 ;       Peephole 236.a  used r2 instead of ar2
   0244 2A                  812 	add     a,r2
   0245 FD                  813 	mov	r5,a
                            814 ;       Peephole 181    changed mov to clr
   0246 E4                  815 	clr     a
                            816 ;       Peephole 236.b  used r3 instead of ar3
   0247 3B                  817 	addc    a,r3
   0248 FE                  818 	mov	r6,a
   0249 8C 07               819 	mov	ar7,r4
                            820 ;     genCall
   024B C0 02               821 	push	ar2
   024D C0 03               822 	push	ar3
   024F C0 04               823 	push	ar4
   0251 C0 05               824 	push	ar5
   0253 C0 06               825 	push	ar6
   0255 C0 07               826 	push	ar7
   0257 12s00r38            827 	lcall	_rbyte_3w
   025A E5 82               828 	mov	a,dpl
   025C D0 07               829 	pop	ar7
   025E D0 06               830 	pop	ar6
   0260 D0 05               831 	pop	ar5
   0262 D0 04               832 	pop	ar4
   0264 D0 03               833 	pop	ar3
   0266 D0 02               834 	pop	ar2
                            835 ;     genAnd
   0268 54 1F               836 	anl	a,#0x1F
   026A F5 82               837 	mov	dpl,a
                            838 ;     genCall
   026C C0 02               839 	push	ar2
   026E C0 03               840 	push	ar3
   0270 C0 04               841 	push	ar4
   0272 C0 05               842 	push	ar5
   0274 C0 06               843 	push	ar6
   0276 C0 07               844 	push	ar7
   0278 12s05rF8            845 	lcall	_bcd2bin
   027B A8 82               846 	mov	r0,dpl
   027D D0 07               847 	pop	ar7
   027F D0 06               848 	pop	ar6
   0281 D0 05               849 	pop	ar5
   0283 D0 04               850 	pop	ar4
   0285 D0 03               851 	pop	ar3
   0287 D0 02               852 	pop	ar2
                            853 ;     genPointerSet
                            854 ;     genGenPointerSet
   0289 8D 82               855 	mov	dpl,r5
   028B 8E 83               856 	mov	dph,r6
   028D 8F F0               857 	mov	b,r7
   028F E8                  858 	mov	a,r0
   0290 12s00r00            859 	lcall	__gptrput
                            860 ;src/rtc.c:157: tm_time->tm_wday = bcd2bin(rbyte_3w()&0x7);
                            861 ;     genPlus
   0293 74 07               862 	mov	a,#0x07
                            863 ;       Peephole 236.a  used r2 instead of ar2
   0295 2A                  864 	add     a,r2
   0296 FD                  865 	mov	r5,a
                            866 ;       Peephole 181    changed mov to clr
   0297 E4                  867 	clr     a
                            868 ;       Peephole 236.b  used r3 instead of ar3
   0298 3B                  869 	addc    a,r3
   0299 FE                  870 	mov	r6,a
   029A 8C 07               871 	mov	ar7,r4
                            872 ;     genCall
   029C C0 02               873 	push	ar2
   029E C0 03               874 	push	ar3
   02A0 C0 04               875 	push	ar4
   02A2 C0 05               876 	push	ar5
   02A4 C0 06               877 	push	ar6
   02A6 C0 07               878 	push	ar7
   02A8 12s00r38            879 	lcall	_rbyte_3w
   02AB E5 82               880 	mov	a,dpl
   02AD D0 07               881 	pop	ar7
   02AF D0 06               882 	pop	ar6
   02B1 D0 05               883 	pop	ar5
   02B3 D0 04               884 	pop	ar4
   02B5 D0 03               885 	pop	ar3
   02B7 D0 02               886 	pop	ar2
                            887 ;     genAnd
   02B9 54 07               888 	anl	a,#0x07
   02BB F5 82               889 	mov	dpl,a
                            890 ;     genCall
   02BD C0 02               891 	push	ar2
   02BF C0 03               892 	push	ar3
   02C1 C0 04               893 	push	ar4
   02C3 C0 05               894 	push	ar5
   02C5 C0 06               895 	push	ar6
   02C7 C0 07               896 	push	ar7
   02C9 12s05rF8            897 	lcall	_bcd2bin
   02CC A8 82               898 	mov	r0,dpl
   02CE D0 07               899 	pop	ar7
   02D0 D0 06               900 	pop	ar6
   02D2 D0 05               901 	pop	ar5
   02D4 D0 04               902 	pop	ar4
   02D6 D0 03               903 	pop	ar3
   02D8 D0 02               904 	pop	ar2
                            905 ;     genPointerSet
                            906 ;     genGenPointerSet
   02DA 8D 82               907 	mov	dpl,r5
   02DC 8E 83               908 	mov	dph,r6
   02DE 8F F0               909 	mov	b,r7
   02E0 E8                  910 	mov	a,r0
   02E1 12s00r00            911 	lcall	__gptrput
                            912 ;src/rtc.c:158: tm_time->tm_year = bcd2bin(rbyte_3w());
                            913 ;     genPlus
   02E4 74 05               914 	mov	a,#0x05
                            915 ;       Peephole 236.a  used r2 instead of ar2
   02E6 2A                  916 	add     a,r2
   02E7 FA                  917 	mov	r2,a
                            918 ;       Peephole 181    changed mov to clr
   02E8 E4                  919 	clr     a
                            920 ;       Peephole 236.b  used r3 instead of ar3
   02E9 3B                  921 	addc    a,r3
   02EA FB                  922 	mov	r3,a
                            923 ;     genCall
   02EB C0 02               924 	push	ar2
   02ED C0 03               925 	push	ar3
   02EF C0 04               926 	push	ar4
   02F1 12s00r38            927 	lcall	_rbyte_3w
   02F4 D0 04               928 	pop	ar4
   02F6 D0 03               929 	pop	ar3
   02F8 D0 02               930 	pop	ar2
                            931 ;     genCall
   02FA C0 02               932 	push	ar2
   02FC C0 03               933 	push	ar3
   02FE C0 04               934 	push	ar4
   0300 12s05rF8            935 	lcall	_bcd2bin
   0303 AD 82               936 	mov	r5,dpl
   0305 D0 04               937 	pop	ar4
   0307 D0 03               938 	pop	ar3
   0309 D0 02               939 	pop	ar2
                            940 ;     genCast
   030B 7E 00               941 	mov	r6,#0x00
                            942 ;     genPointerSet
                            943 ;     genGenPointerSet
   030D 8A 82               944 	mov	dpl,r2
   030F 8B 83               945 	mov	dph,r3
   0311 8C F0               946 	mov	b,r4
   0313 ED                  947 	mov	a,r5
   0314 12s00r00            948 	lcall	__gptrput
   0317 A3                  949 	inc	dptr
   0318 EE                  950 	mov	a,r6
   0319 12s00r00            951 	lcall	__gptrput
                            952 ;src/rtc.c:160: rbyte_3w();
                            953 ;     genCall
   031C 12s00r38            954 	lcall	_rbyte_3w
                            955 ;src/rtc.c:161: reset_3w();
                            956 ;     genCall
   031F 12s00r00            957 	lcall	_reset_3w
   0322                     958 00101$:
   0322 85*00 81            959 	mov	sp,_bp
   0325 D0*00               960 	pop	_bp
   0327 22                  961 	ret
                            962 ;------------------------------------------------------------
                            963 ;Allocation info for local variables in function 'ds1302_read_rtc_bcd'
                            964 ;------------------------------------------------------------
                            965 ;tm_time                   Allocated to registers r2 r3 r4 
                            966 ;------------------------------------------------------------
                            967 ;src/rtc.c:164: void ds1302_read_rtc_bcd ( struct tm *tm_time )
                            968 ;	-----------------------------------------
                            969 ;	 function ds1302_read_rtc_bcd
                            970 ;	-----------------------------------------
   0328                     971 _ds1302_read_rtc_bcd:
   0328 C0*00               972 	push	_bp
   032A 85 81*00            973 	mov	_bp,sp
                            974 ;     genReceive
   032D AA 82               975 	mov	r2,dpl
   032F AB 83               976 	mov	r3,dph
   0331 AC F0               977 	mov	r4,b
                            978 ;src/rtc.c:166: reset_3w();
                            979 ;     genCall
   0333 C0 02               980 	push	ar2
   0335 C0 03               981 	push	ar3
   0337 C0 04               982 	push	ar4
   0339 12s00r00            983 	lcall	_reset_3w
   033C D0 04               984 	pop	ar4
   033E D0 03               985 	pop	ar3
   0340 D0 02               986 	pop	ar2
                            987 ;src/rtc.c:167: wbyte_3w(RTC_BURST|0x01);
                            988 ;     genCall
   0342 75 82 BF            989 	mov	dpl,#0xBF
   0345 C0 02               990 	push	ar2
   0347 C0 03               991 	push	ar3
   0349 C0 04               992 	push	ar4
   034B 12s00r11            993 	lcall	_wbyte_3w
   034E D0 04               994 	pop	ar4
   0350 D0 03               995 	pop	ar3
   0352 D0 02               996 	pop	ar2
                            997 ;src/rtc.c:168: tm_time->tm_sec =  rbyte_3w()&0x7F;
                            998 ;     genCall
   0354 C0 02               999 	push	ar2
   0356 C0 03              1000 	push	ar3
   0358 C0 04              1001 	push	ar4
   035A 12s00r38           1002 	lcall	_rbyte_3w
   035D E5 82              1003 	mov	a,dpl
   035F D0 04              1004 	pop	ar4
   0361 D0 03              1005 	pop	ar3
   0363 D0 02              1006 	pop	ar2
                           1007 ;     genAnd
   0365 54 7F              1008 	anl	a,#0x7F
                           1009 ;     genPointerSet
                           1010 ;     genGenPointerSet
                           1011 ;       Peephole 191    removed redundant mov
   0367 FD                 1012 	mov     r5,a
   0368 8A 82              1013 	mov     dpl,r2
   036A 8B 83              1014 	mov     dph,r3
   036C 8C F0              1015 	mov     b,r4
   036E 12s00r00           1016 	lcall	__gptrput
                           1017 ;src/rtc.c:169: tm_time->tm_min =  rbyte_3w()&0x7F;
                           1018 ;     genPlus
                           1019 ;     genPlusIncr
   0371 74 01              1020 	mov	a,#0x01
                           1021 ;       Peephole 236.a  used r2 instead of ar2
   0373 2A                 1022 	add     a,r2
   0374 FD                 1023 	mov	r5,a
                           1024 ;       Peephole 181    changed mov to clr
   0375 E4                 1025 	clr     a
                           1026 ;       Peephole 236.b  used r3 instead of ar3
   0376 3B                 1027 	addc    a,r3
   0377 FE                 1028 	mov	r6,a
   0378 8C 07              1029 	mov	ar7,r4
                           1030 ;     genCall
   037A C0 02              1031 	push	ar2
   037C C0 03              1032 	push	ar3
   037E C0 04              1033 	push	ar4
   0380 C0 05              1034 	push	ar5
   0382 C0 06              1035 	push	ar6
   0384 C0 07              1036 	push	ar7
   0386 12s00r38           1037 	lcall	_rbyte_3w
   0389 E5 82              1038 	mov	a,dpl
   038B D0 07              1039 	pop	ar7
   038D D0 06              1040 	pop	ar6
   038F D0 05              1041 	pop	ar5
   0391 D0 04              1042 	pop	ar4
   0393 D0 03              1043 	pop	ar3
   0395 D0 02              1044 	pop	ar2
                           1045 ;     genAnd
   0397 54 7F              1046 	anl	a,#0x7F
                           1047 ;     genPointerSet
                           1048 ;     genGenPointerSet
                           1049 ;       Peephole 191    removed redundant mov
   0399 F8                 1050 	mov     r0,a
   039A 8D 82              1051 	mov     dpl,r5
   039C 8E 83              1052 	mov     dph,r6
   039E 8F F0              1053 	mov     b,r7
   03A0 12s00r00           1054 	lcall	__gptrput
                           1055 ;src/rtc.c:170: tm_time->tm_hour = rbyte_3w()&0x3F;
                           1056 ;     genPlus
                           1057 ;     genPlusIncr
   03A3 74 02              1058 	mov	a,#0x02
                           1059 ;       Peephole 236.a  used r2 instead of ar2
   03A5 2A                 1060 	add     a,r2
   03A6 FD                 1061 	mov	r5,a
                           1062 ;       Peephole 181    changed mov to clr
   03A7 E4                 1063 	clr     a
                           1064 ;       Peephole 236.b  used r3 instead of ar3
   03A8 3B                 1065 	addc    a,r3
   03A9 FE                 1066 	mov	r6,a
   03AA 8C 07              1067 	mov	ar7,r4
                           1068 ;     genCall
   03AC C0 02              1069 	push	ar2
   03AE C0 03              1070 	push	ar3
   03B0 C0 04              1071 	push	ar4
   03B2 C0 05              1072 	push	ar5
   03B4 C0 06              1073 	push	ar6
   03B6 C0 07              1074 	push	ar7
   03B8 12s00r38           1075 	lcall	_rbyte_3w
   03BB E5 82              1076 	mov	a,dpl
   03BD D0 07              1077 	pop	ar7
   03BF D0 06              1078 	pop	ar6
   03C1 D0 05              1079 	pop	ar5
   03C3 D0 04              1080 	pop	ar4
   03C5 D0 03              1081 	pop	ar3
   03C7 D0 02              1082 	pop	ar2
                           1083 ;     genAnd
   03C9 54 3F              1084 	anl	a,#0x3F
                           1085 ;     genPointerSet
                           1086 ;     genGenPointerSet
                           1087 ;       Peephole 191    removed redundant mov
   03CB F8                 1088 	mov     r0,a
   03CC 8D 82              1089 	mov     dpl,r5
   03CE 8E 83              1090 	mov     dph,r6
   03D0 8F F0              1091 	mov     b,r7
   03D2 12s00r00           1092 	lcall	__gptrput
                           1093 ;src/rtc.c:171: tm_time->tm_mday = rbyte_3w()&0x3F;
                           1094 ;     genPlus
                           1095 ;     genPlusIncr
   03D5 74 03              1096 	mov	a,#0x03
                           1097 ;       Peephole 236.a  used r2 instead of ar2
   03D7 2A                 1098 	add     a,r2
   03D8 FD                 1099 	mov	r5,a
                           1100 ;       Peephole 181    changed mov to clr
   03D9 E4                 1101 	clr     a
                           1102 ;       Peephole 236.b  used r3 instead of ar3
   03DA 3B                 1103 	addc    a,r3
   03DB FE                 1104 	mov	r6,a
   03DC 8C 07              1105 	mov	ar7,r4
                           1106 ;     genCall
   03DE C0 02              1107 	push	ar2
   03E0 C0 03              1108 	push	ar3
   03E2 C0 04              1109 	push	ar4
   03E4 C0 05              1110 	push	ar5
   03E6 C0 06              1111 	push	ar6
   03E8 C0 07              1112 	push	ar7
   03EA 12s00r38           1113 	lcall	_rbyte_3w
   03ED E5 82              1114 	mov	a,dpl
   03EF D0 07              1115 	pop	ar7
   03F1 D0 06              1116 	pop	ar6
   03F3 D0 05              1117 	pop	ar5
   03F5 D0 04              1118 	pop	ar4
   03F7 D0 03              1119 	pop	ar3
   03F9 D0 02              1120 	pop	ar2
                           1121 ;     genAnd
   03FB 54 3F              1122 	anl	a,#0x3F
                           1123 ;     genPointerSet
                           1124 ;     genGenPointerSet
                           1125 ;       Peephole 191    removed redundant mov
   03FD F8                 1126 	mov     r0,a
   03FE 8D 82              1127 	mov     dpl,r5
   0400 8E 83              1128 	mov     dph,r6
   0402 8F F0              1129 	mov     b,r7
   0404 12s00r00           1130 	lcall	__gptrput
                           1131 ;src/rtc.c:172: tm_time->tm_mon =  rbyte_3w()&0x1F;
                           1132 ;     genPlus
                           1133 ;     genPlusIncr
   0407 74 04              1134 	mov	a,#0x04
                           1135 ;       Peephole 236.a  used r2 instead of ar2
   0409 2A                 1136 	add     a,r2
   040A FD                 1137 	mov	r5,a
                           1138 ;       Peephole 181    changed mov to clr
   040B E4                 1139 	clr     a
                           1140 ;       Peephole 236.b  used r3 instead of ar3
   040C 3B                 1141 	addc    a,r3
   040D FE                 1142 	mov	r6,a
   040E 8C 07              1143 	mov	ar7,r4
                           1144 ;     genCall
   0410 C0 02              1145 	push	ar2
   0412 C0 03              1146 	push	ar3
   0414 C0 04              1147 	push	ar4
   0416 C0 05              1148 	push	ar5
   0418 C0 06              1149 	push	ar6
   041A C0 07              1150 	push	ar7
   041C 12s00r38           1151 	lcall	_rbyte_3w
   041F E5 82              1152 	mov	a,dpl
   0421 D0 07              1153 	pop	ar7
   0423 D0 06              1154 	pop	ar6
   0425 D0 05              1155 	pop	ar5
   0427 D0 04              1156 	pop	ar4
   0429 D0 03              1157 	pop	ar3
   042B D0 02              1158 	pop	ar2
                           1159 ;     genAnd
   042D 54 1F              1160 	anl	a,#0x1F
                           1161 ;     genPointerSet
                           1162 ;     genGenPointerSet
                           1163 ;       Peephole 191    removed redundant mov
   042F F8                 1164 	mov     r0,a
   0430 8D 82              1165 	mov     dpl,r5
   0432 8E 83              1166 	mov     dph,r6
   0434 8F F0              1167 	mov     b,r7
   0436 12s00r00           1168 	lcall	__gptrput
                           1169 ;src/rtc.c:173: tm_time->tm_wday = rbyte_3w()&0x7;
                           1170 ;     genPlus
   0439 74 07              1171 	mov	a,#0x07
                           1172 ;       Peephole 236.a  used r2 instead of ar2
   043B 2A                 1173 	add     a,r2
   043C FD                 1174 	mov	r5,a
                           1175 ;       Peephole 181    changed mov to clr
   043D E4                 1176 	clr     a
                           1177 ;       Peephole 236.b  used r3 instead of ar3
   043E 3B                 1178 	addc    a,r3
   043F FE                 1179 	mov	r6,a
   0440 8C 07              1180 	mov	ar7,r4
                           1181 ;     genCall
   0442 C0 02              1182 	push	ar2
   0444 C0 03              1183 	push	ar3
   0446 C0 04              1184 	push	ar4
   0448 C0 05              1185 	push	ar5
   044A C0 06              1186 	push	ar6
   044C C0 07              1187 	push	ar7
   044E 12s00r38           1188 	lcall	_rbyte_3w
   0451 E5 82              1189 	mov	a,dpl
   0453 D0 07              1190 	pop	ar7
   0455 D0 06              1191 	pop	ar6
   0457 D0 05              1192 	pop	ar5
   0459 D0 04              1193 	pop	ar4
   045B D0 03              1194 	pop	ar3
   045D D0 02              1195 	pop	ar2
                           1196 ;     genAnd
   045F 54 07              1197 	anl	a,#0x07
                           1198 ;     genPointerSet
                           1199 ;     genGenPointerSet
                           1200 ;       Peephole 191    removed redundant mov
   0461 F8                 1201 	mov     r0,a
   0462 8D 82              1202 	mov     dpl,r5
   0464 8E 83              1203 	mov     dph,r6
   0466 8F F0              1204 	mov     b,r7
   0468 12s00r00           1205 	lcall	__gptrput
                           1206 ;src/rtc.c:174: tm_time->tm_year = rbyte_3w();
                           1207 ;     genPlus
   046B 74 05              1208 	mov	a,#0x05
                           1209 ;       Peephole 236.a  used r2 instead of ar2
   046D 2A                 1210 	add     a,r2
   046E FA                 1211 	mov	r2,a
                           1212 ;       Peephole 181    changed mov to clr
   046F E4                 1213 	clr     a
                           1214 ;       Peephole 236.b  used r3 instead of ar3
   0470 3B                 1215 	addc    a,r3
   0471 FB                 1216 	mov	r3,a
                           1217 ;     genCall
   0472 C0 02              1218 	push	ar2
   0474 C0 03              1219 	push	ar3
   0476 C0 04              1220 	push	ar4
   0478 12s00r38           1221 	lcall	_rbyte_3w
   047B AD 82              1222 	mov	r5,dpl
   047D D0 04              1223 	pop	ar4
   047F D0 03              1224 	pop	ar3
   0481 D0 02              1225 	pop	ar2
                           1226 ;     genCast
   0483 7E 00              1227 	mov	r6,#0x00
                           1228 ;     genPointerSet
                           1229 ;     genGenPointerSet
   0485 8A 82              1230 	mov	dpl,r2
   0487 8B 83              1231 	mov	dph,r3
   0489 8C F0              1232 	mov	b,r4
   048B ED                 1233 	mov	a,r5
   048C 12s00r00           1234 	lcall	__gptrput
   048F A3                 1235 	inc	dptr
   0490 EE                 1236 	mov	a,r6
   0491 12s00r00           1237 	lcall	__gptrput
                           1238 ;src/rtc.c:176: rbyte_3w();
                           1239 ;     genCall
   0494 12s00r38           1240 	lcall	_rbyte_3w
                           1241 ;src/rtc.c:177: reset_3w();
                           1242 ;     genCall
   0497 12s00r00           1243 	lcall	_reset_3w
   049A                    1244 00101$:
   049A 85*00 81           1245 	mov	sp,_bp
   049D D0*00              1246 	pop	_bp
   049F 22                 1247 	ret
                           1248 ;------------------------------------------------------------
                           1249 ;Allocation info for local variables in function 'ds1302_write_rtc'
                           1250 ;------------------------------------------------------------
                           1251 ;tm_time                   Allocated to registers r2 r3 r4 
                           1252 ;------------------------------------------------------------
                           1253 ;src/rtc.c:180: void ds1302_write_rtc ( const struct tm *tm_time )
                           1254 ;	-----------------------------------------
                           1255 ;	 function ds1302_write_rtc
                           1256 ;	-----------------------------------------
   04A0                    1257 _ds1302_write_rtc:
   04A0 C0*00              1258 	push	_bp
   04A2 85 81*00           1259 	mov	_bp,sp
                           1260 ;     genReceive
   04A5 AA 82              1261 	mov	r2,dpl
   04A7 AB 83              1262 	mov	r3,dph
   04A9 AC F0              1263 	mov	r4,b
                           1264 ;src/rtc.c:182: reset_3w();
                           1265 ;     genCall
   04AB C0 02              1266 	push	ar2
   04AD C0 03              1267 	push	ar3
   04AF C0 04              1268 	push	ar4
   04B1 12s00r00           1269 	lcall	_reset_3w
   04B4 D0 04              1270 	pop	ar4
   04B6 D0 03              1271 	pop	ar3
   04B8 D0 02              1272 	pop	ar2
                           1273 ;src/rtc.c:183: wbyte_3w(RTC_CTRL);    // "Write Protect" flag reset:
                           1274 ;     genCall
   04BA 75 82 8E           1275 	mov	dpl,#0x8E
   04BD C0 02              1276 	push	ar2
   04BF C0 03              1277 	push	ar3
   04C1 C0 04              1278 	push	ar4
   04C3 12s00r11           1279 	lcall	_wbyte_3w
   04C6 D0 04              1280 	pop	ar4
   04C8 D0 03              1281 	pop	ar3
   04CA D0 02              1282 	pop	ar2
                           1283 ;src/rtc.c:184: wbyte_3w(0x00);
                           1284 ;     genCall
   04CC 75 82 00           1285 	mov	dpl,#0x00
   04CF C0 02              1286 	push	ar2
   04D1 C0 03              1287 	push	ar3
   04D3 C0 04              1288 	push	ar4
   04D5 12s00r11           1289 	lcall	_wbyte_3w
   04D8 D0 04              1290 	pop	ar4
   04DA D0 03              1291 	pop	ar3
   04DC D0 02              1292 	pop	ar2
                           1293 ;src/rtc.c:185: reset_3w();
                           1294 ;     genCall
   04DE C0 02              1295 	push	ar2
   04E0 C0 03              1296 	push	ar3
   04E2 C0 04              1297 	push	ar4
   04E4 12s00r00           1298 	lcall	_reset_3w
   04E7 D0 04              1299 	pop	ar4
   04E9 D0 03              1300 	pop	ar3
   04EB D0 02              1301 	pop	ar2
                           1302 ;src/rtc.c:186: wbyte_3w(RTC_BURST);  // Writing data in burst mode:
                           1303 ;     genCall
   04ED 75 82 BE           1304 	mov	dpl,#0xBE
   04F0 C0 02              1305 	push	ar2
   04F2 C0 03              1306 	push	ar3
   04F4 C0 04              1307 	push	ar4
   04F6 12s00r11           1308 	lcall	_wbyte_3w
   04F9 D0 04              1309 	pop	ar4
   04FB D0 03              1310 	pop	ar3
   04FD D0 02              1311 	pop	ar2
                           1312 ;src/rtc.c:187: wbyte_3w( tm_time->tm_sec );    // writing seconds:
                           1313 ;     genPointerGet
                           1314 ;     genGenPointerGet
   04FF 8A 82              1315 	mov	dpl,r2
   0501 8B 83              1316 	mov	dph,r3
   0503 8C F0              1317 	mov	b,r4
   0505 12s00r00           1318 	lcall	__gptrget
                           1319 ;     genCall
                           1320 ;       Peephole 244.c  loading dpl from a instead of r5
   0508 FD                 1321 	mov	r5,a
   0509 F5 82              1322 	mov	dpl,a
   050B C0 02              1323 	push	ar2
   050D C0 03              1324 	push	ar3
   050F C0 04              1325 	push	ar4
   0511 12s00r11           1326 	lcall	_wbyte_3w
   0514 D0 04              1327 	pop	ar4
   0516 D0 03              1328 	pop	ar3
   0518 D0 02              1329 	pop	ar2
                           1330 ;src/rtc.c:188: wbyte_3w( tm_time->tm_min );    // writing minutes:
                           1331 ;     genPlus
                           1332 ;     genPlusIncr
   051A 74 01              1333 	mov	a,#0x01
                           1334 ;       Peephole 236.a  used r2 instead of ar2
   051C 2A                 1335 	add     a,r2
   051D FD                 1336 	mov	r5,a
                           1337 ;       Peephole 181    changed mov to clr
   051E E4                 1338 	clr     a
                           1339 ;       Peephole 236.b  used r3 instead of ar3
   051F 3B                 1340 	addc    a,r3
   0520 FE                 1341 	mov	r6,a
   0521 8C 07              1342 	mov	ar7,r4
                           1343 ;     genPointerGet
                           1344 ;     genGenPointerGet
   0523 8D 82              1345 	mov	dpl,r5
   0525 8E 83              1346 	mov	dph,r6
   0527 8F F0              1347 	mov	b,r7
   0529 12s00r00           1348 	lcall	__gptrget
                           1349 ;     genCall
                           1350 ;       Peephole 244.c  loading dpl from a instead of r5
   052C FD                 1351 	mov	r5,a
   052D F5 82              1352 	mov	dpl,a
   052F C0 02              1353 	push	ar2
   0531 C0 03              1354 	push	ar3
   0533 C0 04              1355 	push	ar4
   0535 12s00r11           1356 	lcall	_wbyte_3w
   0538 D0 04              1357 	pop	ar4
   053A D0 03              1358 	pop	ar3
   053C D0 02              1359 	pop	ar2
                           1360 ;src/rtc.c:189: wbyte_3w( tm_time->tm_hour );   // writing hours:
                           1361 ;     genPlus
                           1362 ;     genPlusIncr
   053E 74 02              1363 	mov	a,#0x02
                           1364 ;       Peephole 236.a  used r2 instead of ar2
   0540 2A                 1365 	add     a,r2
   0541 FD                 1366 	mov	r5,a
                           1367 ;       Peephole 181    changed mov to clr
   0542 E4                 1368 	clr     a
                           1369 ;       Peephole 236.b  used r3 instead of ar3
   0543 3B                 1370 	addc    a,r3
   0544 FE                 1371 	mov	r6,a
   0545 8C 07              1372 	mov	ar7,r4
                           1373 ;     genPointerGet
                           1374 ;     genGenPointerGet
   0547 8D 82              1375 	mov	dpl,r5
   0549 8E 83              1376 	mov	dph,r6
   054B 8F F0              1377 	mov	b,r7
   054D 12s00r00           1378 	lcall	__gptrget
                           1379 ;     genCall
                           1380 ;       Peephole 244.c  loading dpl from a instead of r5
   0550 FD                 1381 	mov	r5,a
   0551 F5 82              1382 	mov	dpl,a
   0553 C0 02              1383 	push	ar2
   0555 C0 03              1384 	push	ar3
   0557 C0 04              1385 	push	ar4
   0559 12s00r11           1386 	lcall	_wbyte_3w
   055C D0 04              1387 	pop	ar4
   055E D0 03              1388 	pop	ar3
   0560 D0 02              1389 	pop	ar2
                           1390 ;src/rtc.c:190: wbyte_3w( tm_time->tm_mday );   // writing day of the month:
                           1391 ;     genPlus
                           1392 ;     genPlusIncr
   0562 74 03              1393 	mov	a,#0x03
                           1394 ;       Peephole 236.a  used r2 instead of ar2
   0564 2A                 1395 	add     a,r2
   0565 FD                 1396 	mov	r5,a
                           1397 ;       Peephole 181    changed mov to clr
   0566 E4                 1398 	clr     a
                           1399 ;       Peephole 236.b  used r3 instead of ar3
   0567 3B                 1400 	addc    a,r3
   0568 FE                 1401 	mov	r6,a
   0569 8C 07              1402 	mov	ar7,r4
                           1403 ;     genPointerGet
                           1404 ;     genGenPointerGet
   056B 8D 82              1405 	mov	dpl,r5
   056D 8E 83              1406 	mov	dph,r6
   056F 8F F0              1407 	mov	b,r7
   0571 12s00r00           1408 	lcall	__gptrget
                           1409 ;     genCall
                           1410 ;       Peephole 244.c  loading dpl from a instead of r5
   0574 FD                 1411 	mov	r5,a
   0575 F5 82              1412 	mov	dpl,a
   0577 C0 02              1413 	push	ar2
   0579 C0 03              1414 	push	ar3
   057B C0 04              1415 	push	ar4
   057D 12s00r11           1416 	lcall	_wbyte_3w
   0580 D0 04              1417 	pop	ar4
   0582 D0 03              1418 	pop	ar3
   0584 D0 02              1419 	pop	ar2
                           1420 ;src/rtc.c:191: wbyte_3w( tm_time->tm_mon );    // writing month:
                           1421 ;     genPlus
                           1422 ;     genPlusIncr
   0586 74 04              1423 	mov	a,#0x04
                           1424 ;       Peephole 236.a  used r2 instead of ar2
   0588 2A                 1425 	add     a,r2
   0589 FD                 1426 	mov	r5,a
                           1427 ;       Peephole 181    changed mov to clr
   058A E4                 1428 	clr     a
                           1429 ;       Peephole 236.b  used r3 instead of ar3
   058B 3B                 1430 	addc    a,r3
   058C FE                 1431 	mov	r6,a
   058D 8C 07              1432 	mov	ar7,r4
                           1433 ;     genPointerGet
                           1434 ;     genGenPointerGet
   058F 8D 82              1435 	mov	dpl,r5
   0591 8E 83              1436 	mov	dph,r6
   0593 8F F0              1437 	mov	b,r7
   0595 12s00r00           1438 	lcall	__gptrget
                           1439 ;     genCall
                           1440 ;       Peephole 244.c  loading dpl from a instead of r5
   0598 FD                 1441 	mov	r5,a
   0599 F5 82              1442 	mov	dpl,a
   059B C0 02              1443 	push	ar2
   059D C0 03              1444 	push	ar3
   059F C0 04              1445 	push	ar4
   05A1 12s00r11           1446 	lcall	_wbyte_3w
   05A4 D0 04              1447 	pop	ar4
   05A6 D0 03              1448 	pop	ar3
   05A8 D0 02              1449 	pop	ar2
                           1450 ;src/rtc.c:192: wbyte_3w( tm_time->tm_wday );   // writing day of week:
                           1451 ;     genPlus
   05AA 74 07              1452 	mov	a,#0x07
                           1453 ;       Peephole 236.a  used r2 instead of ar2
   05AC 2A                 1454 	add     a,r2
   05AD FD                 1455 	mov	r5,a
                           1456 ;       Peephole 181    changed mov to clr
   05AE E4                 1457 	clr     a
                           1458 ;       Peephole 236.b  used r3 instead of ar3
   05AF 3B                 1459 	addc    a,r3
   05B0 FE                 1460 	mov	r6,a
   05B1 8C 07              1461 	mov	ar7,r4
                           1462 ;     genPointerGet
                           1463 ;     genGenPointerGet
   05B3 8D 82              1464 	mov	dpl,r5
   05B5 8E 83              1465 	mov	dph,r6
   05B7 8F F0              1466 	mov	b,r7
   05B9 12s00r00           1467 	lcall	__gptrget
                           1468 ;     genCall
                           1469 ;       Peephole 244.c  loading dpl from a instead of r5
   05BC FD                 1470 	mov	r5,a
   05BD F5 82              1471 	mov	dpl,a
   05BF C0 02              1472 	push	ar2
   05C1 C0 03              1473 	push	ar3
   05C3 C0 04              1474 	push	ar4
   05C5 12s00r11           1475 	lcall	_wbyte_3w
   05C8 D0 04              1476 	pop	ar4
   05CA D0 03              1477 	pop	ar3
   05CC D0 02              1478 	pop	ar2
                           1479 ;src/rtc.c:193: wbyte_3w( (unsigned char)(tm_time->tm_year&0xff) );   // writing year:
                           1480 ;     genPlus
   05CE 74 05              1481 	mov	a,#0x05
                           1482 ;       Peephole 236.a  used r2 instead of ar2
   05D0 2A                 1483 	add     a,r2
   05D1 FA                 1484 	mov	r2,a
                           1485 ;       Peephole 181    changed mov to clr
   05D2 E4                 1486 	clr     a
                           1487 ;       Peephole 236.b  used r3 instead of ar3
   05D3 3B                 1488 	addc    a,r3
   05D4 FB                 1489 	mov	r3,a
                           1490 ;     genPointerGet
                           1491 ;     genGenPointerGet
   05D5 8A 82              1492 	mov	dpl,r2
   05D7 8B 83              1493 	mov	dph,r3
   05D9 8C F0              1494 	mov	b,r4
   05DB 12s00r00           1495 	lcall	__gptrget
   05DE FA                 1496 	mov	r2,a
   05DF A3                 1497 	inc	dptr
   05E0 12s00r00           1498 	lcall	__gptrget
   05E3 FB                 1499 	mov	r3,a
                           1500 ;     genCast
   05E4 8A 82              1501 	mov	dpl,r2
                           1502 ;     genCall
   05E6 12s00r11           1503 	lcall	_wbyte_3w
                           1504 ;src/rtc.c:194: wbyte_3w(0x80);                 // "Write Protect" flag set:
                           1505 ;     genCall
   05E9 75 82 80           1506 	mov	dpl,#0x80
   05EC 12s00r11           1507 	lcall	_wbyte_3w
                           1508 ;src/rtc.c:195: reset_3w();
                           1509 ;     genCall
   05EF 12s00r00           1510 	lcall	_reset_3w
   05F2                    1511 00101$:
   05F2 85*00 81           1512 	mov	sp,_bp
   05F5 D0*00              1513 	pop	_bp
   05F7 22                 1514 	ret
                           1515 ;------------------------------------------------------------
                           1516 ;Allocation info for local variables in function 'bcd2bin'
                           1517 ;------------------------------------------------------------
                           1518 ;bcd                       Allocated to registers r2 
                           1519 ;retval                    Allocated to registers r3 
                           1520 ;------------------------------------------------------------
                           1521 ;src/rtc.c:198: unsigned char bcd2bin(unsigned char bcd)
                           1522 ;	-----------------------------------------
                           1523 ;	 function bcd2bin
                           1524 ;	-----------------------------------------
   05F8                    1525 _bcd2bin:
   05F8 C0*00              1526 	push	_bp
   05FA 85 81*00           1527 	mov	_bp,sp
                           1528 ;     genReceive
                           1529 ;src/rtc.c:201: retval = bcd>>4 & 0x0f;
                           1530 ;     genRightShift
                           1531 ;     genRightShiftLiteral
                           1532 ;     genrshOne
                           1533 ;       Peephole 244.a  moving first to a instead of r2
   05FD E5 82              1534 	mov	a,dpl
   05FF FA                 1535 	mov	r2,a
   0600 C4                 1536 	swap	a
                           1537 ;     genAnd
                           1538 ;src/rtc.c:202: retval *= 10;
                           1539 ;     genMult
                           1540 ;     genMultOneByte
                           1541 ;       Peephole 139    removed redundant mov
                           1542 ;       Peephole 183    avoided anl during execution
   0601 54 0F              1543 	anl     a,#(0x0f & 0x0F)
   0603 FB                 1544 	mov     r3,a
   0604 75 F0 0A           1545 	mov	b,#0x0A
   0607 A4                 1546 	mul	ab
   0608 FB                 1547 	mov	r3,a
                           1548 ;src/rtc.c:203: retval += bcd & 0x0f;
                           1549 ;     genAnd
   0609 53 02 0F           1550 	anl	ar2,#0x0F
                           1551 ;     genPlus
                           1552 ;       Peephole 236.g  used r2 instead of ar2
   060C EA                 1553 	mov     a,r2
                           1554 ;       Peephole 236.a  used r3 instead of ar3
   060D 2B                 1555 	add     a,r3
                           1556 ;src/rtc.c:204: return retval;
                           1557 ;     genRet
                           1558 ;       Peephole 244.c  loading dpl from a instead of r3
   060E FB                 1559 	mov	r3,a
   060F F5 82              1560 	mov	dpl,a
   0611                    1561 00101$:
   0611 85*00 81           1562 	mov	sp,_bp
   0614 D0*00              1563 	pop	_bp
   0616 22                 1564 	ret
                           1565 ;------------------------------------------------------------
                           1566 ;Allocation info for local variables in function 'check_time'
                           1567 ;------------------------------------------------------------
                           1568 ;timeptr                   Allocated to registers r2 r3 r4 
                           1569 ;------------------------------------------------------------
                           1570 ;src/rtc.c:207: void check_time(struct tm *timeptr) 
                           1571 ;	-----------------------------------------
                           1572 ;	 function check_time
                           1573 ;	-----------------------------------------
   0617                    1574 _check_time:
   0617 C0*00              1575 	push	_bp
   0619 85 81*00           1576 	mov	_bp,sp
                           1577 ;     genReceive
                           1578 ;src/rtc.c:211: if (timeptr->tm_sec<0) timeptr->tm_sec=0;
                           1579 ;     genPointerGet
                           1580 ;     genGenPointerGet
   061C AA 82              1581 	mov     r2,dpl
   061E AB 83              1582 	mov     r3,dph
   0620 AC F0              1583 	mov     r4,b
                           1584 ;       Peephole 238.d  removed 3 redundant moves
   0622 12s00r00           1585 	lcall	__gptrget
   0625 FD                 1586 	mov	r5,a
                           1587 ;     genCmpLt
                           1588 ;     genCmp
   0626 BD 00 00           1589 	cjne	r5,#0x00,00148$
   0629                    1590 00148$:
                           1591 ;     genIfxJump
                           1592 ;       Peephole 108    removed ljmp by inverse jump logic
   0629 50 0C              1593 	jnc     00104$
   062B                    1594 00149$:
                           1595 ;     genPointerSet
                           1596 ;     genGenPointerSet
   062B 8A 82              1597 	mov	dpl,r2
   062D 8B 83              1598 	mov	dph,r3
   062F 8C F0              1599 	mov	b,r4
                           1600 ;       Peephole 181    changed mov to clr
   0631 E4                 1601 	clr     a
   0632 12s00r00           1602 	lcall	__gptrput
                           1603 ;       Peephole 112.b  changed ljmp to sjmp
   0635 80 11              1604 	sjmp    00105$
   0637                    1605 00104$:
                           1606 ;src/rtc.c:212: else if (timeptr->tm_sec>59) timeptr->tm_sec=59;
                           1607 ;     genCmpGt
                           1608 ;     genCmp
   0637 C3                 1609 	clr	c
   0638 74 3B              1610 	mov	a,#0x3B
   063A 9D                 1611 	subb	a,r5
                           1612 ;     genIfxJump
                           1613 ;       Peephole 108    removed ljmp by inverse jump logic
   063B 50 0B              1614 	jnc     00105$
   063D                    1615 00150$:
                           1616 ;     genPointerSet
                           1617 ;     genGenPointerSet
   063D 8A 82              1618 	mov	dpl,r2
   063F 8B 83              1619 	mov	dph,r3
   0641 8C F0              1620 	mov	b,r4
   0643 74 3B              1621 	mov	a,#0x3B
   0645 12s00r00           1622 	lcall	__gptrput
   0648                    1623 00105$:
                           1624 ;src/rtc.c:213: if (timeptr->tm_min<0) timeptr->tm_min=0;
                           1625 ;     genPlus
                           1626 ;     genPlusIncr
   0648 74 01              1627 	mov	a,#0x01
                           1628 ;       Peephole 236.a  used r2 instead of ar2
   064A 2A                 1629 	add     a,r2
   064B FD                 1630 	mov	r5,a
                           1631 ;       Peephole 181    changed mov to clr
   064C E4                 1632 	clr     a
                           1633 ;       Peephole 236.b  used r3 instead of ar3
   064D 3B                 1634 	addc    a,r3
   064E FE                 1635 	mov	r6,a
   064F 8C 07              1636 	mov	ar7,r4
                           1637 ;     genPointerGet
                           1638 ;     genGenPointerGet
   0651 8D 82              1639 	mov	dpl,r5
   0653 8E 83              1640 	mov	dph,r6
   0655 8F F0              1641 	mov	b,r7
   0657 12s00r00           1642 	lcall	__gptrget
   065A F8                 1643 	mov	r0,a
                           1644 ;     genCmpLt
                           1645 ;     genCmp
   065B B8 00 00           1646 	cjne	r0,#0x00,00151$
   065E                    1647 00151$:
                           1648 ;     genIfxJump
                           1649 ;       Peephole 108    removed ljmp by inverse jump logic
   065E 50 0C              1650 	jnc     00109$
   0660                    1651 00152$:
                           1652 ;     genPointerSet
                           1653 ;     genGenPointerSet
   0660 8D 82              1654 	mov	dpl,r5
   0662 8E 83              1655 	mov	dph,r6
   0664 8F F0              1656 	mov	b,r7
                           1657 ;       Peephole 181    changed mov to clr
   0666 E4                 1658 	clr     a
   0667 12s00r00           1659 	lcall	__gptrput
                           1660 ;       Peephole 112.b  changed ljmp to sjmp
   066A 80 11              1661 	sjmp    00110$
   066C                    1662 00109$:
                           1663 ;src/rtc.c:214: else if (timeptr->tm_min>59) timeptr->tm_min=59;
                           1664 ;     genCmpGt
                           1665 ;     genCmp
   066C C3                 1666 	clr	c
   066D 74 3B              1667 	mov	a,#0x3B
   066F 98                 1668 	subb	a,r0
                           1669 ;     genIfxJump
                           1670 ;       Peephole 108    removed ljmp by inverse jump logic
   0670 50 0B              1671 	jnc     00110$
   0672                    1672 00153$:
                           1673 ;     genPointerSet
                           1674 ;     genGenPointerSet
   0672 8D 82              1675 	mov	dpl,r5
   0674 8E 83              1676 	mov	dph,r6
   0676 8F F0              1677 	mov	b,r7
   0678 74 3B              1678 	mov	a,#0x3B
   067A 12s00r00           1679 	lcall	__gptrput
   067D                    1680 00110$:
                           1681 ;src/rtc.c:215: if (timeptr->tm_hour<0) timeptr->tm_hour=0;
                           1682 ;     genPlus
                           1683 ;     genPlusIncr
   067D 74 02              1684 	mov	a,#0x02
                           1685 ;       Peephole 236.a  used r2 instead of ar2
   067F 2A                 1686 	add     a,r2
   0680 FD                 1687 	mov	r5,a
                           1688 ;       Peephole 181    changed mov to clr
   0681 E4                 1689 	clr     a
                           1690 ;       Peephole 236.b  used r3 instead of ar3
   0682 3B                 1691 	addc    a,r3
   0683 FE                 1692 	mov	r6,a
   0684 8C 07              1693 	mov	ar7,r4
                           1694 ;     genPointerGet
                           1695 ;     genGenPointerGet
   0686 8D 82              1696 	mov	dpl,r5
   0688 8E 83              1697 	mov	dph,r6
   068A 8F F0              1698 	mov	b,r7
   068C 12s00r00           1699 	lcall	__gptrget
   068F F8                 1700 	mov	r0,a
                           1701 ;     genCmpLt
                           1702 ;     genCmp
   0690 B8 00 00           1703 	cjne	r0,#0x00,00154$
   0693                    1704 00154$:
                           1705 ;     genIfxJump
                           1706 ;       Peephole 108    removed ljmp by inverse jump logic
   0693 50 0C              1707 	jnc     00114$
   0695                    1708 00155$:
                           1709 ;     genPointerSet
                           1710 ;     genGenPointerSet
   0695 8D 82              1711 	mov	dpl,r5
   0697 8E 83              1712 	mov	dph,r6
   0699 8F F0              1713 	mov	b,r7
                           1714 ;       Peephole 181    changed mov to clr
   069B E4                 1715 	clr     a
   069C 12s00r00           1716 	lcall	__gptrput
                           1717 ;       Peephole 112.b  changed ljmp to sjmp
   069F 80 11              1718 	sjmp    00115$
   06A1                    1719 00114$:
                           1720 ;src/rtc.c:216: else if (timeptr->tm_hour>23) timeptr->tm_hour=23;
                           1721 ;     genCmpGt
                           1722 ;     genCmp
   06A1 C3                 1723 	clr	c
   06A2 74 17              1724 	mov	a,#0x17
   06A4 98                 1725 	subb	a,r0
                           1726 ;     genIfxJump
                           1727 ;       Peephole 108    removed ljmp by inverse jump logic
   06A5 50 0B              1728 	jnc     00115$
   06A7                    1729 00156$:
                           1730 ;     genPointerSet
                           1731 ;     genGenPointerSet
   06A7 8D 82              1732 	mov	dpl,r5
   06A9 8E 83              1733 	mov	dph,r6
   06AB 8F F0              1734 	mov	b,r7
   06AD 74 17              1735 	mov	a,#0x17
   06AF 12s00r00           1736 	lcall	__gptrput
   06B2                    1737 00115$:
                           1738 ;src/rtc.c:217: if (timeptr->tm_wday<0) timeptr->tm_wday=0;
                           1739 ;     genPlus
   06B2 74 07              1740 	mov	a,#0x07
                           1741 ;       Peephole 236.a  used r2 instead of ar2
   06B4 2A                 1742 	add     a,r2
   06B5 FD                 1743 	mov	r5,a
                           1744 ;       Peephole 181    changed mov to clr
   06B6 E4                 1745 	clr     a
                           1746 ;       Peephole 236.b  used r3 instead of ar3
   06B7 3B                 1747 	addc    a,r3
   06B8 FE                 1748 	mov	r6,a
   06B9 8C 07              1749 	mov	ar7,r4
                           1750 ;     genPointerGet
                           1751 ;     genGenPointerGet
   06BB 8D 82              1752 	mov	dpl,r5
   06BD 8E 83              1753 	mov	dph,r6
   06BF 8F F0              1754 	mov	b,r7
   06C1 12s00r00           1755 	lcall	__gptrget
   06C4 F8                 1756 	mov	r0,a
                           1757 ;     genCmpLt
                           1758 ;     genCmp
   06C5 B8 00 00           1759 	cjne	r0,#0x00,00157$
   06C8                    1760 00157$:
                           1761 ;     genIfxJump
                           1762 ;       Peephole 108    removed ljmp by inverse jump logic
   06C8 50 0C              1763 	jnc     00119$
   06CA                    1764 00158$:
                           1765 ;     genPointerSet
                           1766 ;     genGenPointerSet
   06CA 8D 82              1767 	mov	dpl,r5
   06CC 8E 83              1768 	mov	dph,r6
   06CE 8F F0              1769 	mov	b,r7
                           1770 ;       Peephole 181    changed mov to clr
   06D0 E4                 1771 	clr     a
   06D1 12s00r00           1772 	lcall	__gptrput
                           1773 ;       Peephole 112.b  changed ljmp to sjmp
   06D4 80 11              1774 	sjmp    00120$
   06D6                    1775 00119$:
                           1776 ;src/rtc.c:218: else if (timeptr->tm_wday>7) timeptr->tm_wday=7;
                           1777 ;     genCmpGt
                           1778 ;     genCmp
   06D6 C3                 1779 	clr	c
   06D7 74 07              1780 	mov	a,#0x07
   06D9 98                 1781 	subb	a,r0
                           1782 ;     genIfxJump
                           1783 ;       Peephole 108    removed ljmp by inverse jump logic
   06DA 50 0B              1784 	jnc     00120$
   06DC                    1785 00159$:
                           1786 ;     genPointerSet
                           1787 ;     genGenPointerSet
   06DC 8D 82              1788 	mov	dpl,r5
   06DE 8E 83              1789 	mov	dph,r6
   06E0 8F F0              1790 	mov	b,r7
   06E2 74 07              1791 	mov	a,#0x07
   06E4 12s00r00           1792 	lcall	__gptrput
   06E7                    1793 00120$:
                           1794 ;src/rtc.c:219: if (timeptr->tm_mday<1) timeptr->tm_mday=1;
                           1795 ;     genPlus
                           1796 ;     genPlusIncr
   06E7 74 03              1797 	mov	a,#0x03
                           1798 ;       Peephole 236.a  used r2 instead of ar2
   06E9 2A                 1799 	add     a,r2
   06EA FD                 1800 	mov	r5,a
                           1801 ;       Peephole 181    changed mov to clr
   06EB E4                 1802 	clr     a
                           1803 ;       Peephole 236.b  used r3 instead of ar3
   06EC 3B                 1804 	addc    a,r3
   06ED FE                 1805 	mov	r6,a
   06EE 8C 07              1806 	mov	ar7,r4
                           1807 ;     genPointerGet
                           1808 ;     genGenPointerGet
   06F0 8D 82              1809 	mov	dpl,r5
   06F2 8E 83              1810 	mov	dph,r6
   06F4 8F F0              1811 	mov	b,r7
   06F6 12s00r00           1812 	lcall	__gptrget
   06F9 F8                 1813 	mov	r0,a
                           1814 ;     genCmpLt
                           1815 ;     genCmp
   06FA B8 01 00           1816 	cjne	r0,#0x01,00160$
   06FD                    1817 00160$:
                           1818 ;     genIfxJump
                           1819 ;       Peephole 108    removed ljmp by inverse jump logic
   06FD 50 0D              1820 	jnc     00124$
   06FF                    1821 00161$:
                           1822 ;     genPointerSet
                           1823 ;     genGenPointerSet
   06FF 8D 82              1824 	mov	dpl,r5
   0701 8E 83              1825 	mov	dph,r6
   0703 8F F0              1826 	mov	b,r7
   0705 74 01              1827 	mov	a,#0x01
   0707 12s00r00           1828 	lcall	__gptrput
                           1829 ;       Peephole 112.b  changed ljmp to sjmp
   070A 80 11              1830 	sjmp    00125$
   070C                    1831 00124$:
                           1832 ;src/rtc.c:220: else if (timeptr->tm_mday>31) timeptr->tm_mday=31;
                           1833 ;     genCmpGt
                           1834 ;     genCmp
   070C C3                 1835 	clr	c
   070D 74 1F              1836 	mov	a,#0x1F
   070F 98                 1837 	subb	a,r0
                           1838 ;     genIfxJump
                           1839 ;       Peephole 108    removed ljmp by inverse jump logic
   0710 50 0B              1840 	jnc     00125$
   0712                    1841 00162$:
                           1842 ;     genPointerSet
                           1843 ;     genGenPointerSet
   0712 8D 82              1844 	mov	dpl,r5
   0714 8E 83              1845 	mov	dph,r6
   0716 8F F0              1846 	mov	b,r7
   0718 74 1F              1847 	mov	a,#0x1F
   071A 12s00r00           1848 	lcall	__gptrput
   071D                    1849 00125$:
                           1850 ;src/rtc.c:221: if (timeptr->tm_mon<0) timeptr->tm_mon=0;
                           1851 ;     genPlus
                           1852 ;     genPlusIncr
   071D 74 04              1853 	mov	a,#0x04
                           1854 ;       Peephole 236.a  used r2 instead of ar2
   071F 2A                 1855 	add     a,r2
   0720 FD                 1856 	mov	r5,a
                           1857 ;       Peephole 181    changed mov to clr
   0721 E4                 1858 	clr     a
                           1859 ;       Peephole 236.b  used r3 instead of ar3
   0722 3B                 1860 	addc    a,r3
   0723 FE                 1861 	mov	r6,a
   0724 8C 07              1862 	mov	ar7,r4
                           1863 ;     genPointerGet
                           1864 ;     genGenPointerGet
   0726 8D 82              1865 	mov	dpl,r5
   0728 8E 83              1866 	mov	dph,r6
   072A 8F F0              1867 	mov	b,r7
   072C 12s00r00           1868 	lcall	__gptrget
   072F F8                 1869 	mov	r0,a
                           1870 ;     genCmpLt
                           1871 ;     genCmp
   0730 B8 00 00           1872 	cjne	r0,#0x00,00163$
   0733                    1873 00163$:
                           1874 ;     genIfxJump
                           1875 ;       Peephole 108    removed ljmp by inverse jump logic
   0733 50 0C              1876 	jnc     00129$
   0735                    1877 00164$:
                           1878 ;     genPointerSet
                           1879 ;     genGenPointerSet
   0735 8D 82              1880 	mov	dpl,r5
   0737 8E 83              1881 	mov	dph,r6
   0739 8F F0              1882 	mov	b,r7
                           1883 ;       Peephole 181    changed mov to clr
   073B E4                 1884 	clr     a
   073C 12s00r00           1885 	lcall	__gptrput
                           1886 ;       Peephole 112.b  changed ljmp to sjmp
   073F 80 11              1887 	sjmp    00130$
   0741                    1888 00129$:
                           1889 ;src/rtc.c:222: else if (timeptr->tm_mon>11) timeptr->tm_mon=11;
                           1890 ;     genCmpGt
                           1891 ;     genCmp
   0741 C3                 1892 	clr	c
   0742 74 0B              1893 	mov	a,#0x0B
   0744 98                 1894 	subb	a,r0
                           1895 ;     genIfxJump
                           1896 ;       Peephole 108    removed ljmp by inverse jump logic
   0745 50 0B              1897 	jnc     00130$
   0747                    1898 00165$:
                           1899 ;     genPointerSet
                           1900 ;     genGenPointerSet
   0747 8D 82              1901 	mov	dpl,r5
   0749 8E 83              1902 	mov	dph,r6
   074B 8F F0              1903 	mov	b,r7
   074D 74 0B              1904 	mov	a,#0x0B
   074F 12s00r00           1905 	lcall	__gptrput
   0752                    1906 00130$:
                           1907 ;src/rtc.c:223: if (timeptr->tm_year<0) timeptr->tm_year=0;
                           1908 ;     genPlus
   0752 74 05              1909 	mov	a,#0x05
                           1910 ;       Peephole 236.a  used r2 instead of ar2
   0754 2A                 1911 	add     a,r2
   0755 FA                 1912 	mov	r2,a
                           1913 ;       Peephole 181    changed mov to clr
   0756 E4                 1914 	clr     a
                           1915 ;       Peephole 236.b  used r3 instead of ar3
   0757 3B                 1916 	addc    a,r3
   0758 FB                 1917 	mov	r3,a
                           1918 ;     genPointerGet
                           1919 ;     genGenPointerGet
   0759 8A 82              1920 	mov	dpl,r2
   075B 8B 83              1921 	mov	dph,r3
   075D 8C F0              1922 	mov	b,r4
   075F 12s00r00           1923 	lcall	__gptrget
   0762 FD                 1924 	mov	r5,a
   0763 A3                 1925 	inc	dptr
   0764 12s00r00           1926 	lcall	__gptrget
                           1927 ;     genCmpLt
                           1928 ;     genCmp
                           1929 ;       Peephole 105    removed redundant mov
   0767 FE                 1930 	mov     r6,a
                           1931 ;     genIfxJump
                           1932 ;       Peephole 111    removed ljmp by inverse jump logic
   0768 30 E7 0F           1933 	jnb     acc.7,00133$
   076B                    1934 00166$:
                           1935 ;     genPointerSet
                           1936 ;     genGenPointerSet
   076B 8A 82              1937 	mov	dpl,r2
   076D 8B 83              1938 	mov	dph,r3
   076F 8C F0              1939 	mov	b,r4
                           1940 ;       Peephole 181    changed mov to clr
   0771 E4                 1941 	clr     a
   0772 12s00r00           1942 	lcall	__gptrput
   0775 A3                 1943 	inc	dptr
                           1944 ;       Peephole 181    changed mov to clr
   0776 E4                 1945 	clr     a
   0777 12s00r00           1946 	lcall	__gptrput
   077A                    1947 00133$:
   077A 85*00 81           1948 	mov	sp,_bp
   077D D0*00              1949 	pop	_bp
   077F 22                 1950 	ret
                           1951 ;------------------------------------------------------------
                           1952 ;Allocation info for local variables in function 'local_gmtime'
                           1953 ;------------------------------------------------------------
                           1954 ;timep                     Allocated to registers r2 r3 r4 
                           1955 ;epoch                     Allocated to stack - offset 1
                           1956 ;year                      Allocated to registers 
                           1957 ;month                     Allocated to registers 
                           1958 ;monthLength               Allocated to registers r4 
                           1959 ;days                      Allocated to stack - offset 5
                           1960 ;------------------------------------------------------------
                           1961 ;src/rtc.c:228: void local_gmtime(time_t *timep) {
                           1962 ;	-----------------------------------------
                           1963 ;	 function local_gmtime
                           1964 ;	-----------------------------------------
   0780                    1965 _local_gmtime:
   0780 C0*00              1966 	push	_bp
   0782 85 81*00           1967 	mov	_bp,sp
   0785 E5 81              1968 	mov	a,sp
   0787 24 08              1969 	add	a,#0x08
   0789 F5 81              1970 	mov	sp,a
                           1971 ;     genReceive
                           1972 ;src/rtc.c:230: unsigned long epoch=*timep;
                           1973 ;     genPointerGet
                           1974 ;     genGenPointerGet
   078B AA 82              1975 	mov     r2,dpl
   078D AB 83              1976 	mov     r3,dph
   078F AC F0              1977 	mov     r4,b
                           1978 ;       Peephole 238.d  removed 3 redundant moves
   0791 12s00r00           1979 	lcall	__gptrget
   0794 FA                 1980 	mov	r2,a
   0795 A3                 1981 	inc	dptr
   0796 12s00r00           1982 	lcall	__gptrget
   0799 FB                 1983 	mov	r3,a
   079A A3                 1984 	inc	dptr
   079B 12s00r00           1985 	lcall	__gptrget
   079E FC                 1986 	mov	r4,a
   079F A3                 1987 	inc	dptr
   07A0 12s00r00           1988 	lcall	__gptrget
   07A3 FD                 1989 	mov	r5,a
                           1990 ;     genAssign
                           1991 ;       Peephole 212    reduced add sequence to inc
   07A4 A8*00              1992 	mov     r0,_bp
   07A6 08                 1993 	inc     r0
   07A7 A6 02              1994 	mov	@r0,ar2
   07A9 08                 1995 	inc	r0
   07AA A6 03              1996 	mov	@r0,ar3
   07AC 08                 1997 	inc	r0
   07AD A6 04              1998 	mov	@r0,ar4
   07AF 08                 1999 	inc	r0
   07B0 A6 05              2000 	mov	@r0,ar5
                           2001 ;src/rtc.c:235: system_time.tm_sec=epoch%60;
                           2002 ;     genAssign
   07B2 E4                 2003 	clr	a
   07B3 F5*03              2004 	mov	(__modulong_PARM_2 + 3),a
   07B5 F5*02              2005 	mov	(__modulong_PARM_2 + 2),a
   07B7 F5*01              2006 	mov	(__modulong_PARM_2 + 1),a
   07B9 75*00 3C           2007 	mov	__modulong_PARM_2,#0x3C
                           2008 ;     genCall
                           2009 ;       Peephole 212    reduced add sequence to inc
   07BC A8*00              2010 	mov     r0,_bp
   07BE 08                 2011 	inc     r0
   07BF 86 82              2012 	mov	dpl,@r0
   07C1 08                 2013 	inc	r0
   07C2 86 83              2014 	mov	dph,@r0
   07C4 08                 2015 	inc	r0
   07C5 86 F0              2016 	mov	b,@r0
   07C7 08                 2017 	inc	r0
   07C8 E6                 2018 	mov	a,@r0
   07C9 12s00r00           2019 	lcall	__modulong
   07CC AE 82              2020 	mov	r6,dpl
   07CE AF 83              2021 	mov	r7,dph
   07D0 AA F0              2022 	mov	r2,b
   07D2 FB                 2023 	mov	r3,a
                           2024 ;     genCast
                           2025 ;     genPointerSet
                           2026 ;     genFarPointerSet
   07D3 90s00r00           2027 	mov	dptr,#_system_time
   07D6 EE                 2028 	mov	a,r6
   07D7 F0                 2029 	movx	@dptr,a
                           2030 ;src/rtc.c:236: epoch/=60; // now it is minutes
                           2031 ;     genAssign
   07D8 E4                 2032 	clr	a
   07D9 F5*03              2033 	mov	(__divulong_PARM_2 + 3),a
   07DB F5*02              2034 	mov	(__divulong_PARM_2 + 2),a
   07DD F5*01              2035 	mov	(__divulong_PARM_2 + 1),a
   07DF 75*00 3C           2036 	mov	__divulong_PARM_2,#0x3C
                           2037 ;     genCall
                           2038 ;       Peephole 212    reduced add sequence to inc
   07E2 A8*00              2039 	mov     r0,_bp
   07E4 08                 2040 	inc     r0
   07E5 86 82              2041 	mov	dpl,@r0
   07E7 08                 2042 	inc	r0
   07E8 86 83              2043 	mov	dph,@r0
   07EA 08                 2044 	inc	r0
   07EB 86 F0              2045 	mov	b,@r0
   07ED 08                 2046 	inc	r0
   07EE E6                 2047 	mov	a,@r0
   07EF 12s00r00           2048 	lcall	__divulong
   07F2 AA 82              2049 	mov	r2,dpl
   07F4 AB 83              2050 	mov	r3,dph
   07F6 AC F0              2051 	mov	r4,b
   07F8 FD                 2052 	mov	r5,a
                           2053 ;     genAssign
                           2054 ;       Peephole 212    reduced add sequence to inc
   07F9 A8*00              2055 	mov     r0,_bp
   07FB 08                 2056 	inc     r0
   07FC A6 02              2057 	mov	@r0,ar2
   07FE 08                 2058 	inc	r0
   07FF A6 03              2059 	mov	@r0,ar3
   0801 08                 2060 	inc	r0
   0802 A6 04              2061 	mov	@r0,ar4
   0804 08                 2062 	inc	r0
   0805 A6 05              2063 	mov	@r0,ar5
                           2064 ;src/rtc.c:237: system_time.tm_min=epoch%60;
                           2065 ;     genAssign
   0807 E4                 2066 	clr	a
   0808 F5*03              2067 	mov	(__modulong_PARM_2 + 3),a
   080A F5*02              2068 	mov	(__modulong_PARM_2 + 2),a
   080C F5*01              2069 	mov	(__modulong_PARM_2 + 1),a
   080E 75*00 3C           2070 	mov	__modulong_PARM_2,#0x3C
                           2071 ;     genCall
                           2072 ;       Peephole 212    reduced add sequence to inc
   0811 A8*00              2073 	mov     r0,_bp
   0813 08                 2074 	inc     r0
   0814 86 82              2075 	mov	dpl,@r0
   0816 08                 2076 	inc	r0
   0817 86 83              2077 	mov	dph,@r0
   0819 08                 2078 	inc	r0
   081A 86 F0              2079 	mov	b,@r0
   081C 08                 2080 	inc	r0
   081D E6                 2081 	mov	a,@r0
   081E 12s00r00           2082 	lcall	__modulong
   0821 AA 82              2083 	mov	r2,dpl
   0823 AB 83              2084 	mov	r3,dph
   0825 AC F0              2085 	mov	r4,b
   0827 FD                 2086 	mov	r5,a
                           2087 ;     genCast
                           2088 ;     genPointerSet
                           2089 ;     genFarPointerSet
   0828 90s00r01           2090 	mov	dptr,#(_system_time + 0x0001)
   082B EA                 2091 	mov	a,r2
   082C F0                 2092 	movx	@dptr,a
                           2093 ;src/rtc.c:238: epoch/=60; // now it is hours
                           2094 ;     genAssign
   082D E4                 2095 	clr	a
   082E F5*03              2096 	mov	(__divulong_PARM_2 + 3),a
   0830 F5*02              2097 	mov	(__divulong_PARM_2 + 2),a
   0832 F5*01              2098 	mov	(__divulong_PARM_2 + 1),a
   0834 75*00 3C           2099 	mov	__divulong_PARM_2,#0x3C
                           2100 ;     genCall
                           2101 ;       Peephole 212    reduced add sequence to inc
   0837 A8*00              2102 	mov     r0,_bp
   0839 08                 2103 	inc     r0
   083A 86 82              2104 	mov	dpl,@r0
   083C 08                 2105 	inc	r0
   083D 86 83              2106 	mov	dph,@r0
   083F 08                 2107 	inc	r0
   0840 86 F0              2108 	mov	b,@r0
   0842 08                 2109 	inc	r0
   0843 E6                 2110 	mov	a,@r0
   0844 12s00r00           2111 	lcall	__divulong
   0847 AA 82              2112 	mov	r2,dpl
   0849 AB 83              2113 	mov	r3,dph
   084B AC F0              2114 	mov	r4,b
   084D FD                 2115 	mov	r5,a
                           2116 ;     genAssign
                           2117 ;       Peephole 212    reduced add sequence to inc
   084E A8*00              2118 	mov     r0,_bp
   0850 08                 2119 	inc     r0
   0851 A6 02              2120 	mov	@r0,ar2
   0853 08                 2121 	inc	r0
   0854 A6 03              2122 	mov	@r0,ar3
   0856 08                 2123 	inc	r0
   0857 A6 04              2124 	mov	@r0,ar4
   0859 08                 2125 	inc	r0
   085A A6 05              2126 	mov	@r0,ar5
                           2127 ;src/rtc.c:239: system_time.tm_hour=epoch%24;
                           2128 ;     genAssign
   085C E4                 2129 	clr	a
   085D F5*03              2130 	mov	(__modulong_PARM_2 + 3),a
   085F F5*02              2131 	mov	(__modulong_PARM_2 + 2),a
   0861 F5*01              2132 	mov	(__modulong_PARM_2 + 1),a
   0863 75*00 18           2133 	mov	__modulong_PARM_2,#0x18
                           2134 ;     genCall
                           2135 ;       Peephole 212    reduced add sequence to inc
   0866 A8*00              2136 	mov     r0,_bp
   0868 08                 2137 	inc     r0
   0869 86 82              2138 	mov	dpl,@r0
   086B 08                 2139 	inc	r0
   086C 86 83              2140 	mov	dph,@r0
   086E 08                 2141 	inc	r0
   086F 86 F0              2142 	mov	b,@r0
   0871 08                 2143 	inc	r0
   0872 E6                 2144 	mov	a,@r0
   0873 12s00r00           2145 	lcall	__modulong
   0876 AA 82              2146 	mov	r2,dpl
   0878 AB 83              2147 	mov	r3,dph
   087A AC F0              2148 	mov	r4,b
   087C FD                 2149 	mov	r5,a
                           2150 ;     genCast
                           2151 ;     genPointerSet
                           2152 ;     genFarPointerSet
   087D 90s00r02           2153 	mov	dptr,#(_system_time + 0x0002)
   0880 EA                 2154 	mov	a,r2
   0881 F0                 2155 	movx	@dptr,a
                           2156 ;src/rtc.c:240: epoch/=24; // now it is days
                           2157 ;     genAssign
   0882 E4                 2158 	clr	a
   0883 F5*03              2159 	mov	(__divulong_PARM_2 + 3),a
   0885 F5*02              2160 	mov	(__divulong_PARM_2 + 2),a
   0887 F5*01              2161 	mov	(__divulong_PARM_2 + 1),a
   0889 75*00 18           2162 	mov	__divulong_PARM_2,#0x18
                           2163 ;     genCall
                           2164 ;       Peephole 212    reduced add sequence to inc
   088C A8*00              2165 	mov     r0,_bp
   088E 08                 2166 	inc     r0
   088F 86 82              2167 	mov	dpl,@r0
   0891 08                 2168 	inc	r0
   0892 86 83              2169 	mov	dph,@r0
   0894 08                 2170 	inc	r0
   0895 86 F0              2171 	mov	b,@r0
   0897 08                 2172 	inc	r0
   0898 E6                 2173 	mov	a,@r0
   0899 12s00r00           2174 	lcall	__divulong
   089C AA 82              2175 	mov	r2,dpl
   089E AB 83              2176 	mov	r3,dph
   08A0 AC F0              2177 	mov	r4,b
   08A2 FD                 2178 	mov	r5,a
                           2179 ;     genAssign
                           2180 ;       Peephole 212    reduced add sequence to inc
   08A3 A8*00              2181 	mov     r0,_bp
   08A5 08                 2182 	inc     r0
   08A6 A6 02              2183 	mov	@r0,ar2
   08A8 08                 2184 	inc	r0
   08A9 A6 03              2185 	mov	@r0,ar3
   08AB 08                 2186 	inc	r0
   08AC A6 04              2187 	mov	@r0,ar4
   08AE 08                 2188 	inc	r0
   08AF A6 05              2189 	mov	@r0,ar5
                           2190 ;src/rtc.c:241: system_time.tm_wday=(epoch+4)%7;
                           2191 ;     genPlus
                           2192 ;       Peephole 212    reduced add sequence to inc
   08B1 A8*00              2193 	mov     r0,_bp
   08B3 08                 2194 	inc     r0
                           2195 ;     genPlusIncr
   08B4 74 04              2196 	mov	a,#0x04
   08B6 26                 2197 	add	a,@r0
   08B7 FA                 2198 	mov	r2,a
                           2199 ;       Peephole 181    changed mov to clr
   08B8 E4                 2200 	clr     a
   08B9 08                 2201 	inc	r0
   08BA 36                 2202 	addc	a,@r0
   08BB FB                 2203 	mov	r3,a
                           2204 ;       Peephole 181    changed mov to clr
   08BC E4                 2205 	clr     a
   08BD 08                 2206 	inc	r0
   08BE 36                 2207 	addc	a,@r0
   08BF FC                 2208 	mov	r4,a
                           2209 ;       Peephole 181    changed mov to clr
   08C0 E4                 2210 	clr     a
   08C1 08                 2211 	inc	r0
   08C2 36                 2212 	addc	a,@r0
   08C3 FD                 2213 	mov	r5,a
                           2214 ;     genAssign
   08C4 E4                 2215 	clr	a
   08C5 F5*03              2216 	mov	(__modulong_PARM_2 + 3),a
   08C7 F5*02              2217 	mov	(__modulong_PARM_2 + 2),a
   08C9 F5*01              2218 	mov	(__modulong_PARM_2 + 1),a
   08CB 75*00 07           2219 	mov	__modulong_PARM_2,#0x07
                           2220 ;     genCall
   08CE 8A 82              2221 	mov	dpl,r2
   08D0 8B 83              2222 	mov	dph,r3
   08D2 8C F0              2223 	mov	b,r4
   08D4 ED                 2224 	mov	a,r5
   08D5 12s00r00           2225 	lcall	__modulong
   08D8 AA 82              2226 	mov	r2,dpl
   08DA AB 83              2227 	mov	r3,dph
   08DC AC F0              2228 	mov	r4,b
   08DE FD                 2229 	mov	r5,a
                           2230 ;     genCast
                           2231 ;     genPointerSet
                           2232 ;     genFarPointerSet
   08DF 90s00r07           2233 	mov	dptr,#(_system_time + 0x0007)
   08E2 EA                 2234 	mov	a,r2
   08E3 F0                 2235 	movx	@dptr,a
                           2236 ;src/rtc.c:244: days=0;
                           2237 ;     genAssign
   08E4 E5*00              2238 	mov	a,_bp
   08E6 24 05              2239 	add	a,#0x05
                           2240 ;       Peephole 218    simplified clear (4bytes)
   08E8 F8                 2241 	mov     r0,a
   08E9 E4                 2242 	clr     a
   08EA F6                 2243 	mov     @r0,a
   08EB 08                 2244 	inc     r0
   08EC F6                 2245 	mov     @r0,a
   08ED 08                 2246 	inc     r0
   08EE F6                 2247 	mov     @r0,a
   08EF 08                 2248 	inc     r0
   08F0 F6                 2249 	mov     @r0,a
                           2250 ;src/rtc.c:245: while((days += (LEAP_YEAR(year) ? 366 : 365)) <= epoch) {
                           2251 ;     genAssign
   08F1 7E B2              2252 	mov	r6,#0xB2
   08F3 7F 07              2253 	mov	r7,#0x07
   08F5                    2254 00101$:
                           2255 ;     genIpush
                           2256 ;     genAnd
   08F5 74 03              2257 	mov	a,#0x03
   08F7 5E                 2258 	anl	a,r6
   08F8 FA                 2259 	mov	r2,a
   08F9 7B 00              2260 	mov	r3,#0x00
                           2261 ;     genCmpEq
                           2262 ;       Peephole 241.b  optimized compare
   08FB E4                 2263 	clr     a
   08FC BA 00 04           2264 	cjne    r2,#0x00,00132$
   08FF BB 00 01           2265 	cjne    r3,#0x00,00132$
   0902 04                 2266 	inc     a
   0903                    2267 00132$:
   0903                    2268 00133$:
                           2269 ;     genIpop
                           2270 ;     genIfx
                           2271 ;     genIfxJump
                           2272 ;       Peephole 110    removed ljmp by inverse jump logic
   0903 60 06              2273 	jz      00119$
   0905                    2274 00134$:
                           2275 ;     genAssign
   0905 7A 6E              2276 	mov	r2,#0x6E
   0907 7B 01              2277 	mov	r3,#0x01
                           2278 ;       Peephole 112.b  changed ljmp to sjmp
   0909 80 04              2279 	sjmp    00120$
   090B                    2280 00119$:
                           2281 ;     genAssign
   090B 7A 6D              2282 	mov	r2,#0x6D
   090D 7B 01              2283 	mov	r3,#0x01
   090F                    2284 00120$:
                           2285 ;     genCast
   090F EB                 2286 	mov	a,r3
   0910 33                 2287 	rlc	a
   0911 95 E0              2288 	subb	a,acc
   0913 FC                 2289 	mov	r4,a
   0914 FD                 2290 	mov	r5,a
                           2291 ;     genPlus
   0915 E5*00              2292 	mov	a,_bp
   0917 24 05              2293 	add	a,#0x05
   0919 F8                 2294 	mov	r0,a
                           2295 ;       Peephole 236.g  used r2 instead of ar2
   091A EA                 2296 	mov     a,r2
   091B 26                 2297 	add	a,@r0
   091C FA                 2298 	mov	r2,a
                           2299 ;       Peephole 236.g  used r3 instead of ar3
   091D EB                 2300 	mov     a,r3
   091E 08                 2301 	inc	r0
   091F 36                 2302 	addc	a,@r0
   0920 FB                 2303 	mov	r3,a
                           2304 ;       Peephole 236.g  used r4 instead of ar4
   0921 EC                 2305 	mov     a,r4
   0922 08                 2306 	inc	r0
   0923 36                 2307 	addc	a,@r0
   0924 FC                 2308 	mov	r4,a
                           2309 ;       Peephole 236.g  used r5 instead of ar5
   0925 ED                 2310 	mov     a,r5
   0926 08                 2311 	inc	r0
   0927 36                 2312 	addc	a,@r0
   0928 FD                 2313 	mov	r5,a
                           2314 ;     genAssign
   0929 E5*00              2315 	mov	a,_bp
   092B 24 05              2316 	add	a,#0x05
   092D F8                 2317 	mov	r0,a
   092E A6 02              2318 	mov	@r0,ar2
   0930 08                 2319 	inc	r0
   0931 A6 03              2320 	mov	@r0,ar3
   0933 08                 2321 	inc	r0
   0934 A6 04              2322 	mov	@r0,ar4
   0936 08                 2323 	inc	r0
   0937 A6 05              2324 	mov	@r0,ar5
                           2325 ;     genCmpGt
                           2326 ;       Peephole 212    reduced add sequence to inc
   0939 A8*00              2327 	mov     r0,_bp
   093B 08                 2328 	inc     r0
                           2329 ;     genCmp
   093C C3                 2330 	clr	c
   093D E6                 2331 	mov	a,@r0
   093E 9A                 2332 	subb	a,r2
   093F 08                 2333 	inc	r0
   0940 E6                 2334 	mov	a,@r0
   0941 9B                 2335 	subb	a,r3
   0942 08                 2336 	inc	r0
   0943 E6                 2337 	mov	a,@r0
   0944 9C                 2338 	subb	a,r4
   0945 08                 2339 	inc	r0
   0946 E6                 2340 	mov	a,@r0
   0947 9D                 2341 	subb	a,r5
                           2342 ;     genIfxJump
                           2343 ;       Peephole 112.b  changed ljmp to sjmp
                           2344 ;       Peephole 160    removed sjmp by inverse jump logic
   0948 40 07              2345 	jc      00103$
   094A                    2346 00135$:
                           2347 ;src/rtc.c:246: year++;
                           2348 ;     genPlus
                           2349 ;     genPlusIncr
   094A 0E                 2350 	inc	r6
                           2351 ;       Peephole 112.b  changed ljmp to sjmp
                           2352 ;       Peephole 243    avoided branch to sjmp
   094B BE 00 A7           2353 	cjne    r6,#0x00,00101$
   094E 0F                 2354 	inc     r7
   094F                    2355 00136$:
   094F 80 A4              2356 	sjmp    00101$      
   0951                    2357 00103$:
                           2358 ;src/rtc.c:248: system_time.tm_year=year-2000;
                           2359 ;     genMinus
   0951 EE                 2360 	mov	a,r6
   0952 24 30              2361 	add	a,#0x30
   0954 FA                 2362 	mov	r2,a
   0955 EF                 2363 	mov	a,r7
   0956 34 F8              2364 	addc	a,#0xf8
   0958 FB                 2365 	mov	r3,a
                           2366 ;     genPointerSet
                           2367 ;     genFarPointerSet
   0959 90s00r05           2368 	mov	dptr,#(_system_time + 0x0005)
   095C EA                 2369 	mov	a,r2
   095D F0                 2370 	movx	@dptr,a
   095E A3                 2371 	inc	dptr
   095F EB                 2372 	mov	a,r3
   0960 F0                 2373 	movx	@dptr,a
                           2374 ;src/rtc.c:250: days -= LEAP_YEAR(year) ? 366 : 365;
                           2375 ;     genAnd
   0961 53 06 03           2376 	anl	ar6,#0x03
   0964 7F 00              2377 	mov	r7,#0x00
                           2378 ;     genCmpEq
                           2379 ;       Peephole 241.b  optimized compare
   0966 E4                 2380 	clr     a
   0967 BE 00 04           2381 	cjne    r6,#0x00,00137$
   096A BF 00 01           2382 	cjne    r7,#0x00,00137$
   096D 04                 2383 	inc     a
   096E                    2384 00137$:
   096E                    2385 00138$:
                           2386 ;     genIfx
                           2387 ;       Peephole 105    removed redundant mov
   096E FA                 2388 	mov     r2,a
                           2389 ;     genIfxJump
                           2390 ;       Peephole 110    removed ljmp by inverse jump logic
   096F 60 06              2391 	jz      00121$
   0971                    2392 00139$:
                           2393 ;     genAssign
   0971 7B 6E              2394 	mov	r3,#0x6E
   0973 7C 01              2395 	mov	r4,#0x01
                           2396 ;       Peephole 112.b  changed ljmp to sjmp
   0975 80 04              2397 	sjmp    00122$
   0977                    2398 00121$:
                           2399 ;     genAssign
   0977 7B 6D              2400 	mov	r3,#0x6D
   0979 7C 01              2401 	mov	r4,#0x01
   097B                    2402 00122$:
                           2403 ;     genCast
   097B EC                 2404 	mov	a,r4
   097C 33                 2405 	rlc	a
   097D 95 E0              2406 	subb	a,acc
   097F FD                 2407 	mov	r5,a
   0980 FE                 2408 	mov	r6,a
                           2409 ;     genMinus
   0981 E5*00              2410 	mov	a,_bp
   0983 24 05              2411 	add	a,#0x05
   0985 F8                 2412 	mov	r0,a
   0986 E6                 2413 	mov	a,@r0
   0987 C3                 2414 	clr	c
                           2415 ;       Peephole 236.l  used r3 instead of ar3
   0988 9B                 2416 	subb    a,r3
   0989 F6                 2417 	mov	@r0,a
   098A 08                 2418 	inc	r0
   098B E6                 2419 	mov	a,@r0
                           2420 ;       Peephole 236.l  used r4 instead of ar4
   098C 9C                 2421 	subb    a,r4
   098D F6                 2422 	mov	@r0,a
   098E 08                 2423 	inc	r0
   098F E6                 2424 	mov	a,@r0
                           2425 ;       Peephole 236.l  used r5 instead of ar5
   0990 9D                 2426 	subb    a,r5
   0991 F6                 2427 	mov	@r0,a
   0992 08                 2428 	inc	r0
   0993 E6                 2429 	mov	a,@r0
                           2430 ;       Peephole 236.l  used r6 instead of ar6
   0994 9E                 2431 	subb    a,r6
   0995 F6                 2432 	mov	@r0,a
                           2433 ;src/rtc.c:251: epoch -= days; // now it is days in this year, starting at 0
                           2434 ;     genMinus
                           2435 ;       Peephole 212    reduced add sequence to inc
   0996 A8*00              2436 	mov     r0,_bp
   0998 08                 2437 	inc     r0
   0999 E5*00              2438 	mov	a,_bp
   099B 24 05              2439 	add	a,#0x05
   099D F9                 2440 	mov	r1,a
   099E E6                 2441 	mov	a,@r0
   099F C3                 2442 	clr	c
   09A0 97                 2443 	subb	a,@r1
   09A1 F6                 2444 	mov	@r0,a
   09A2 08                 2445 	inc	r0
   09A3 E6                 2446 	mov	a,@r0
   09A4 09                 2447 	inc	r1
   09A5 97                 2448 	subb	a,@r1
   09A6 F6                 2449 	mov	@r0,a
   09A7 08                 2450 	inc	r0
   09A8 E6                 2451 	mov	a,@r0
   09A9 09                 2452 	inc	r1
   09AA 97                 2453 	subb	a,@r1
   09AB F6                 2454 	mov	@r0,a
   09AC 08                 2455 	inc	r0
   09AD E6                 2456 	mov	a,@r0
   09AE 09                 2457 	inc	r1
   09AF 97                 2458 	subb	a,@r1
   09B0 F6                 2459 	mov	@r0,a
                           2460 ;src/rtc.c:252: system_time.tm_yday=epoch;
                           2461 ;     genCast
                           2462 ;       Peephole 212    reduced add sequence to inc
   09B1 A8*00              2463 	mov     r0,_bp
   09B3 08                 2464 	inc     r0
   09B4 86 03              2465 	mov	ar3,@r0
   09B6 08                 2466 	inc	r0
   09B7 86 04              2467 	mov	ar4,@r0
                           2468 ;     genPointerSet
                           2469 ;     genFarPointerSet
   09B9 90s00r08           2470 	mov	dptr,#(_system_time + 0x0008)
   09BC EB                 2471 	mov	a,r3
   09BD F0                 2472 	movx	@dptr,a
   09BE A3                 2473 	inc	dptr
   09BF EC                 2474 	mov	a,r4
   09C0 F0                 2475 	movx	@dptr,a
                           2476 ;src/rtc.c:257: for (month=0; month<12; month++) {
                           2477 ;     genAssign
   09C1 7B 00              2478 	mov	r3,#0x00
   09C3                    2479 00113$:
                           2480 ;     genCmpLt
                           2481 ;     genCmp
   09C3 BB 0C 00           2482 	cjne	r3,#0x0C,00140$
   09C6                    2483 00140$:
                           2484 ;     genIfxJump
                           2485 ;       Peephole 108    removed ljmp by inverse jump logic
   09C6 50 52              2486 	jnc     00116$
   09C8                    2487 00141$:
                           2488 ;src/rtc.c:258: if (month==1) { // februari
                           2489 ;     genCmpEq
                           2490 ;       Peephole 112.b  changed ljmp to sjmp
                           2491 ;       Peephole 199    optimized misc jump sequence
   09C8 BB 01 0B           2492 	cjne    r3,#0x01,00108$
                           2493 ;00142$:
                           2494 ;       Peephole 200    removed redundant sjmp
   09CB                    2495 00143$:
                           2496 ;src/rtc.c:259: if (LEAP_YEAR(year)) {
                           2497 ;     genIfx
   09CB EA                 2498 	mov	a,r2
                           2499 ;     genIfxJump
                           2500 ;       Peephole 110    removed ljmp by inverse jump logic
   09CC 60 04              2501 	jz      00105$
   09CE                    2502 00144$:
                           2503 ;src/rtc.c:260: monthLength=29;
                           2504 ;     genAssign
   09CE 7C 1D              2505 	mov	r4,#0x1D
                           2506 ;       Peephole 112.b  changed ljmp to sjmp
   09D0 80 0C              2507 	sjmp    00109$
   09D2                    2508 00105$:
                           2509 ;src/rtc.c:262: monthLength=28;
                           2510 ;     genAssign
   09D2 7C 1C              2511 	mov	r4,#0x1C
                           2512 ;       Peephole 112.b  changed ljmp to sjmp
   09D4 80 08              2513 	sjmp    00109$
   09D6                    2514 00108$:
                           2515 ;src/rtc.c:265: monthLength = monthDays[month];
                           2516 ;     genPlus
                           2517 ;       Peephole 236.g  used r3 instead of ar3
   09D6 EB                 2518 	mov     a,r3
                           2519 ;       Peephole 181    changed mov to clr
                           2520 ;     genPointerGet
                           2521 ;     genCodePointerGet
                           2522 ;       Peephole 181    changed mov to clr
                           2523 ;       Peephole 186.d  optimized movc sequence
   09D7 90s10rAE           2524 	mov     dptr,#_monthDays
   09DA 93                 2525 	movc    a,@a+dptr
   09DB FD                 2526 	mov	r5,a
                           2527 ;     genAssign
   09DC 8D 04              2528 	mov	ar4,r5
   09DE                    2529 00109$:
                           2530 ;src/rtc.c:268: if (epoch>=monthLength) {
                           2531 ;     genIpush
   09DE C0 02              2532 	push	ar2
                           2533 ;     genCast
   09E0 8C 05              2534 	mov	ar5,r4
   09E2 7E 00              2535 	mov	r6,#0x00
                           2536 ;     genCmpLt
                           2537 ;       Peephole 3.c    changed mov to clr
   09E4 E4                 2538 	clr     a
   09E5 FF                 2539 	mov     r7,a
   09E6 FA                 2540 	mov     r2,a
                           2541 ;       Peephole 212    reduced add sequence to inc
   09E7 A8*00              2542 	mov     r0,_bp
   09E9 08                 2543 	inc     r0
                           2544 ;     genCmp
   09EA C3                 2545 	clr	c
   09EB E6                 2546 	mov	a,@r0
   09EC 9D                 2547 	subb	a,r5
   09ED 08                 2548 	inc	r0
   09EE E6                 2549 	mov	a,@r0
   09EF 9E                 2550 	subb	a,r6
   09F0 08                 2551 	inc	r0
   09F1 E6                 2552 	mov	a,@r0
   09F2 9F                 2553 	subb	a,r7
   09F3 08                 2554 	inc	r0
   09F4 E6                 2555 	mov	a,@r0
   09F5 9A                 2556 	subb	a,r2
   09F6 E4                 2557 	clr	a
   09F7 33                 2558 	rlc	a
                           2559 ;     genIpop
   09F8 D0 02              2560 	pop	ar2
                           2561 ;     genIfx
                           2562 ;     genIfxJump
                           2563 ;       Peephole 109    removed ljmp by inverse jump logic
   09FA 70 1E              2564 	jnz     00116$
   09FC                    2565 00145$:
                           2566 ;src/rtc.c:269: epoch-=monthLength;
                           2567 ;     genCast
   09FC 7D 00              2568 	mov	r5,#0x00
                           2569 ;     genCast
   09FE ED                 2570 	mov	a,r5
   09FF 33                 2571 	rlc	a
   0A00 95 E0              2572 	subb	a,acc
   0A02 FE                 2573 	mov	r6,a
   0A03 FF                 2574 	mov	r7,a
                           2575 ;     genMinus
                           2576 ;       Peephole 212    reduced add sequence to inc
   0A04 A8*00              2577 	mov     r0,_bp
   0A06 08                 2578 	inc     r0
   0A07 E6                 2579 	mov	a,@r0
   0A08 C3                 2580 	clr	c
                           2581 ;       Peephole 236.l  used r4 instead of ar4
   0A09 9C                 2582 	subb    a,r4
   0A0A F6                 2583 	mov	@r0,a
   0A0B 08                 2584 	inc	r0
   0A0C E6                 2585 	mov	a,@r0
                           2586 ;       Peephole 236.l  used r5 instead of ar5
   0A0D 9D                 2587 	subb    a,r5
   0A0E F6                 2588 	mov	@r0,a
   0A0F 08                 2589 	inc	r0
   0A10 E6                 2590 	mov	a,@r0
                           2591 ;       Peephole 236.l  used r6 instead of ar6
   0A11 9E                 2592 	subb    a,r6
   0A12 F6                 2593 	mov	@r0,a
   0A13 08                 2594 	inc	r0
   0A14 E6                 2595 	mov	a,@r0
                           2596 ;       Peephole 236.l  used r7 instead of ar7
   0A15 9F                 2597 	subb    a,r7
   0A16 F6                 2598 	mov	@r0,a
                           2599 ;src/rtc.c:257: for (month=0; month<12; month++) {
                           2600 ;     genPlus
                           2601 ;     genPlusIncr
   0A17 0B                 2602 	inc	r3
                           2603 ;       Peephole 112.b  changed ljmp to sjmp
   0A18 80 A9              2604 	sjmp    00113$
   0A1A                    2605 00116$:
                           2606 ;src/rtc.c:274: system_time.tm_mon=month;
                           2607 ;     genPointerSet
                           2608 ;     genFarPointerSet
   0A1A 90s00r04           2609 	mov	dptr,#(_system_time + 0x0004)
   0A1D EB                 2610 	mov	a,r3
   0A1E F0                 2611 	movx	@dptr,a
                           2612 ;src/rtc.c:275: system_time.tm_mday=epoch+1;
                           2613 ;     genCast
                           2614 ;       Peephole 212    reduced add sequence to inc
   0A1F A8*00              2615 	mov     r0,_bp
   0A21 08                 2616 	inc     r0
   0A22 86 02              2617 	mov	ar2,@r0
                           2618 ;     genPlus
                           2619 ;     genPlusIncr
   0A24 0A                 2620 	inc	r2
                           2621 ;     genPointerSet
                           2622 ;     genFarPointerSet
   0A25 90s00r03           2623 	mov	dptr,#(_system_time + 0x0003)
   0A28 EA                 2624 	mov	a,r2
   0A29 F0                 2625 	movx	@dptr,a
                           2626 ;src/rtc.c:277: system_time.tm_isdst=0;
                           2627 ;     genPointerSet
                           2628 ;     genFarPointerSet
   0A2A 90s00r0A           2629 	mov	dptr,#(_system_time + 0x000a)
                           2630 ;       Peephole 181    changed mov to clr
   0A2D E4                 2631 	clr     a
   0A2E F0                 2632 	movx	@dptr,a
   0A2F                    2633 00117$:
   0A2F 85*00 81           2634 	mov	sp,_bp
   0A32 D0*00              2635 	pop	_bp
   0A34 22                 2636 	ret
                           2637 ;------------------------------------------------------------
                           2638 ;Allocation info for local variables in function 'local_mktime'
                           2639 ;------------------------------------------------------------
                           2640 ;add                       Allocated to stack - offset -4
                           2641 ;timeptr                   Allocated to stack - offset 1
                           2642 ;year                      Allocated to stack - offset 4
                           2643 ;month                     Allocated to stack - offset 6
                           2644 ;mday                      Allocated to stack - offset 7
                           2645 ;i                         Allocated to registers 
                           2646 ;seconds                   Allocated to stack - offset 8
                           2647 ;------------------------------------------------------------
                           2648 ;src/rtc.c:286: time_t local_mktime(struct tm *timeptr, unsigned int add) {
                           2649 ;	-----------------------------------------
                           2650 ;	 function local_mktime
                           2651 ;	-----------------------------------------
   0A35                    2652 _local_mktime:
   0A35 C0*00              2653 	push	_bp
   0A37 85 81*00           2654 	mov	_bp,sp
   0A3A E5 81              2655 	mov	a,sp
   0A3C 24 0B              2656 	add	a,#0x0b
   0A3E F5 81              2657 	mov	sp,a
                           2658 ;     genReceive
   0A40 C0 E0              2659 	push	acc
                           2660 ;       Peephole 212    reduced add sequence to inc
   0A42 A8*00              2661 	mov     r0,_bp
   0A44 08                 2662 	inc     r0
   0A45 D0 E0              2663 	pop	acc
   0A47 A6 82              2664 	mov	@r0,dpl
   0A49 08                 2665 	inc	r0
   0A4A A6 83              2666 	mov	@r0,dph
   0A4C 08                 2667 	inc	r0
   0A4D A6 F0              2668 	mov	@r0,b
                           2669 ;src/rtc.c:289: int year=timeptr->tm_year + add;
                           2670 ;     genPlus
                           2671 ;       Peephole 212    reduced add sequence to inc
   0A4F A8*00              2672 	mov     r0,_bp
   0A51 08                 2673 	inc     r0
   0A52 74 05              2674 	mov	a,#0x05
   0A54 26                 2675 	add	a,@r0
   0A55 FD                 2676 	mov	r5,a
                           2677 ;       Peephole 181    changed mov to clr
   0A56 E4                 2678 	clr     a
   0A57 08                 2679 	inc	r0
   0A58 36                 2680 	addc	a,@r0
   0A59 FE                 2681 	mov	r6,a
   0A5A 08                 2682 	inc	r0
   0A5B 86 07              2683 	mov	ar7,@r0
                           2684 ;     genPointerGet
                           2685 ;     genGenPointerGet
   0A5D 8D 82              2686 	mov	dpl,r5
   0A5F 8E 83              2687 	mov	dph,r6
   0A61 8F F0              2688 	mov	b,r7
   0A63 12s00r00           2689 	lcall	__gptrget
   0A66 FD                 2690 	mov	r5,a
   0A67 A3                 2691 	inc	dptr
   0A68 12s00r00           2692 	lcall	__gptrget
   0A6B FE                 2693 	mov	r6,a
                           2694 ;     genPlus
   0A6C E5*00              2695 	mov	a,_bp
   0A6E 24 FC              2696 	add	a,#0xfc
   0A70 F8                 2697 	mov	r0,a
   0A71 E6                 2698 	mov	a,@r0
                           2699 ;       Peephole 236.a  used r5 instead of ar5
   0A72 2D                 2700 	add     a,r5
   0A73 FD                 2701 	mov	r5,a
   0A74 08                 2702 	inc	r0
   0A75 E6                 2703 	mov	a,@r0
                           2704 ;       Peephole 236.b  used r6 instead of ar6
   0A76 3E                 2705 	addc    a,r6
   0A77 FE                 2706 	mov	r6,a
                           2707 ;     genAssign
   0A78 E5*00              2708 	mov	a,_bp
   0A7A 24 04              2709 	add	a,#0x04
   0A7C F8                 2710 	mov	r0,a
   0A7D A6 05              2711 	mov	@r0,ar5
   0A7F 08                 2712 	inc	r0
   0A80 A6 06              2713 	mov	@r0,ar6
                           2714 ;src/rtc.c:290: char month=timeptr->tm_mon;
                           2715 ;     genPlus
                           2716 ;       Peephole 212    reduced add sequence to inc
   0A82 A8*00              2717 	mov     r0,_bp
   0A84 08                 2718 	inc     r0
                           2719 ;     genPlusIncr
   0A85 74 04              2720 	mov	a,#0x04
   0A87 26                 2721 	add	a,@r0
   0A88 FF                 2722 	mov	r7,a
                           2723 ;       Peephole 181    changed mov to clr
   0A89 E4                 2724 	clr     a
   0A8A 08                 2725 	inc	r0
   0A8B 36                 2726 	addc	a,@r0
   0A8C FA                 2727 	mov	r2,a
   0A8D 08                 2728 	inc	r0
   0A8E 86 03              2729 	mov	ar3,@r0
                           2730 ;     genPointerGet
                           2731 ;     genGenPointerGet
   0A90 8F 82              2732 	mov	dpl,r7
   0A92 8A 83              2733 	mov	dph,r2
   0A94 8B F0              2734 	mov	b,r3
   0A96 12s00r00           2735 	lcall	__gptrget
   0A99 FF                 2736 	mov	r7,a
                           2737 ;     genAssign
   0A9A E5*00              2738 	mov	a,_bp
   0A9C 24 06              2739 	add	a,#0x06
   0A9E F8                 2740 	mov	r0,a
   0A9F A6 07              2741 	mov	@r0,ar7
                           2742 ;src/rtc.c:291: char mday = timeptr->tm_mday - 1;
                           2743 ;     genPlus
                           2744 ;       Peephole 212    reduced add sequence to inc
   0AA1 A8*00              2745 	mov     r0,_bp
   0AA3 08                 2746 	inc     r0
                           2747 ;     genPlusIncr
   0AA4 74 03              2748 	mov	a,#0x03
   0AA6 26                 2749 	add	a,@r0
   0AA7 FB                 2750 	mov	r3,a
                           2751 ;       Peephole 181    changed mov to clr
   0AA8 E4                 2752 	clr     a
   0AA9 08                 2753 	inc	r0
   0AAA 36                 2754 	addc	a,@r0
   0AAB FC                 2755 	mov	r4,a
   0AAC 08                 2756 	inc	r0
   0AAD 86 07              2757 	mov	ar7,@r0
                           2758 ;     genPointerGet
                           2759 ;     genGenPointerGet
   0AAF 8B 82              2760 	mov	dpl,r3
   0AB1 8C 83              2761 	mov	dph,r4
   0AB3 8F F0              2762 	mov	b,r7
   0AB5 12s00r00           2763 	lcall	__gptrget
   0AB8 FB                 2764 	mov	r3,a
                           2765 ;     genMinus
   0AB9 E5*00              2766 	mov	a,_bp
   0ABB 24 07              2767 	add	a,#0x07
   0ABD F8                 2768 	mov	r0,a
                           2769 ;     genMinusDec
   0ABE EB                 2770 	mov	a,r3
   0ABF 14                 2771 	dec	a
   0AC0 F6                 2772 	mov	@r0,a
                           2773 ;src/rtc.c:295: check_time(timeptr);
                           2774 ;     genCall
                           2775 ;       Peephole 212    reduced add sequence to inc
   0AC1 A8*00              2776 	mov     r0,_bp
   0AC3 08                 2777 	inc     r0
   0AC4 86 82              2778 	mov	dpl,@r0
   0AC6 08                 2779 	inc	r0
   0AC7 86 83              2780 	mov	dph,@r0
   0AC9 08                 2781 	inc	r0
   0ACA 86 F0              2782 	mov	b,@r0
   0ACC 12s06r17           2783 	lcall	_check_time
                           2784 ;src/rtc.c:298: seconds = (year-1970)*(YEAR);
                           2785 ;     genMinus
   0ACF E5*00              2786 	mov	a,_bp
   0AD1 24 04              2787 	add	a,#0x04
   0AD3 F8                 2788 	mov	r0,a
   0AD4 E6                 2789 	mov	a,@r0
   0AD5 24 4E              2790 	add	a,#0x4e
   0AD7 FC                 2791 	mov	r4,a
   0AD8 08                 2792 	inc	r0
   0AD9 E6                 2793 	mov	a,@r0
   0ADA 34 F8              2794 	addc	a,#0xf8
                           2795 ;     genCast
                           2796 ;       Peephole 105    removed redundant mov
   0ADC FF                 2797 	mov     r7,a
   0ADD 33                 2798 	rlc	a
   0ADE 95 E0              2799 	subb	a,acc
   0AE0 FB                 2800 	mov	r3,a
   0AE1 FA                 2801 	mov	r2,a
                           2802 ;     genAssign
   0AE2 75*00 80           2803 	mov	__mullong_PARM_2,#0x80
   0AE5 75*01 33           2804 	mov	(__mullong_PARM_2 + 1),#0x33
   0AE8 75*02 E1           2805 	mov	(__mullong_PARM_2 + 2),#0xE1
   0AEB 75*03 01           2806 	mov	(__mullong_PARM_2 + 3),#0x01
                           2807 ;     genCall
   0AEE 8C 82              2808 	mov	dpl,r4
   0AF0 8F 83              2809 	mov	dph,r7
   0AF2 8B F0              2810 	mov	b,r3
   0AF4 EA                 2811 	mov	a,r2
   0AF5 12s00r00           2812 	lcall	__mullong
   0AF8 AA 82              2813 	mov	r2,dpl
   0AFA AB 83              2814 	mov	r3,dph
   0AFC AC F0              2815 	mov	r4,b
   0AFE FF                 2816 	mov	r7,a
                           2817 ;     genAssign
   0AFF E5*00              2818 	mov	a,_bp
   0B01 24 08              2819 	add	a,#0x08
   0B03 F8                 2820 	mov	r0,a
   0B04 A6 02              2821 	mov	@r0,ar2
   0B06 08                 2822 	inc	r0
   0B07 A6 03              2823 	mov	@r0,ar3
   0B09 08                 2824 	inc	r0
   0B0A A6 04              2825 	mov	@r0,ar4
   0B0C 08                 2826 	inc	r0
   0B0D A6 07              2827 	mov	@r0,ar7
                           2828 ;src/rtc.c:301: for (i=1970; i<year; i++) 
                           2829 ;     genAssign
   0B0F 7D B2              2830 	mov	r5,#0xB2
   0B11 7E 07              2831 	mov	r6,#0x07
   0B13                    2832 00107$:
                           2833 ;     genCmpLt
   0B13 E5*00              2834 	mov	a,_bp
   0B15 24 04              2835 	add	a,#0x04
   0B17 F8                 2836 	mov	r0,a
                           2837 ;     genCmp
   0B18 C3                 2838 	clr	c
   0B19 ED                 2839 	mov	a,r5
   0B1A 96                 2840 	subb	a,@r0
   0B1B EE                 2841 	mov	a,r6
   0B1C 64 80              2842 	xrl	a,#0x80
   0B1E 08                 2843 	inc	r0
   0B1F 86 F0              2844 	mov	b,@r0
   0B21 63 F0 80           2845 	xrl	b,#0x80
   0B24 95 F0              2846 	subb	a,b
                           2847 ;     genIfxJump
                           2848 ;       Peephole 108    removed ljmp by inverse jump logic
   0B26 50 2E              2849 	jnc     00123$
   0B28                    2850 00124$:
                           2851 ;src/rtc.c:303: if (LEAP_YEAR(i)) 
                           2852 ;     genIpush
                           2853 ;     genAnd
   0B28 74 03              2854 	mov	a,#0x03
   0B2A 5D                 2855 	anl	a,r5
   0B2B FA                 2856 	mov	r2,a
   0B2C 7B 00              2857 	mov	r3,#0x00
                           2858 ;     genCmpEq
                           2859 ;       Peephole 241.b  optimized compare
   0B2E E4                 2860 	clr     a
   0B2F BA 00 04           2861 	cjne    r2,#0x00,00125$
   0B32 BB 00 01           2862 	cjne    r3,#0x00,00125$
   0B35 04                 2863 	inc     a
   0B36                    2864 00125$:
   0B36                    2865 00126$:
                           2866 ;     genIpop
                           2867 ;     genIfx
                           2868 ;     genIfxJump
                           2869 ;       Peephole 110    removed ljmp by inverse jump logic
   0B36 60 17              2870 	jz      00109$
   0B38                    2871 00127$:
                           2872 ;src/rtc.c:305: seconds+= DAY;
                           2873 ;     genPlus
   0B38 E5*00              2874 	mov	a,_bp
   0B3A 24 08              2875 	add	a,#0x08
   0B3C F8                 2876 	mov	r0,a
   0B3D 74 80              2877 	mov	a,#0x80
   0B3F 26                 2878 	add	a,@r0
   0B40 F6                 2879 	mov	@r0,a
   0B41 74 51              2880 	mov	a,#0x51
   0B43 08                 2881 	inc	r0
   0B44 36                 2882 	addc	a,@r0
   0B45 F6                 2883 	mov	@r0,a
   0B46 74 01              2884 	mov	a,#0x01
   0B48 08                 2885 	inc	r0
   0B49 36                 2886 	addc	a,@r0
   0B4A F6                 2887 	mov	@r0,a
                           2888 ;       Peephole 181    changed mov to clr
   0B4B E4                 2889 	clr     a
   0B4C 08                 2890 	inc	r0
   0B4D 36                 2891 	addc	a,@r0
   0B4E F6                 2892 	mov	@r0,a
   0B4F                    2893 00109$:
                           2894 ;src/rtc.c:301: for (i=1970; i<year; i++) 
                           2895 ;     genPlus
                           2896 ;     genPlusIncr
   0B4F 0D                 2897 	inc	r5
                           2898 ;src/rtc.c:310: for (i=0; i<month; i++) 
                           2899 ;       Peephole 112.b  changed ljmp to sjmp
                           2900 ;       Peephole 243    avoided branch to sjmp
   0B50 BD 00 C0           2901 	cjne    r5,#0x00,00107$
   0B53 0E                 2902 	inc     r6
   0B54                    2903 00128$:
   0B54 80 BD              2904 	sjmp    00107$      
   0B56                    2905 00123$:
                           2906 ;     genAnd
   0B56 E5*00              2907 	mov	a,_bp
   0B58 24 04              2908 	add	a,#0x04
   0B5A F8                 2909 	mov	r0,a
   0B5B 74 03              2910 	mov	a,#0x03
   0B5D 56                 2911 	anl	a,@r0
   0B5E FD                 2912 	mov	r5,a
   0B5F 7E 00              2913 	mov	r6,#0x00
                           2914 ;     genCmpEq
                           2915 ;       Peephole 241.b  optimized compare
   0B61 E4                 2916 	clr     a
   0B62 BD 00 04           2917 	cjne    r5,#0x00,00129$
   0B65 BE 00 01           2918 	cjne    r6,#0x00,00129$
   0B68 04                 2919 	inc     a
   0B69                    2920 00129$:
   0B69                    2921 00130$:
   0B69 FD                 2922 	mov	r5,a
                           2923 ;     genAssign
   0B6A 7E 00              2924 	mov	r6,#0x00
   0B6C 7A 00              2925 	mov	r2,#0x00
   0B6E                    2926 00111$:
                           2927 ;     genCast
   0B6E E5*00              2928 	mov	a,_bp
   0B70 24 06              2929 	add	a,#0x06
   0B72 F8                 2930 	mov	r0,a
   0B73 86 03              2931 	mov	ar3,@r0
   0B75 E6                 2932 	mov	a,@r0
   0B76 33                 2933 	rlc	a
   0B77 95 E0              2934 	subb	a,acc
   0B79 FC                 2935 	mov	r4,a
                           2936 ;     genCmpLt
                           2937 ;     genCmp
   0B7A C3                 2938 	clr	c
   0B7B EE                 2939 	mov	a,r6
   0B7C 9B                 2940 	subb	a,r3
   0B7D EA                 2941 	mov	a,r2
   0B7E 64 80              2942 	xrl	a,#0x80
   0B80 8C F0              2943 	mov	b,r4
   0B82 63 F0 80           2944 	xrl	b,#0x80
   0B85 95 F0              2945 	subb	a,b
                           2946 ;     genIfxJump
   0B87 40 03              2947 	jc	00131$
   0B89 02s0Cr06           2948 	ljmp	00114$
   0B8C                    2949 00131$:
                           2950 ;src/rtc.c:312: if (i==1 && LEAP_YEAR(year)) 
                           2951 ;     genCmpEq
                           2952 ;       Peephole 112.b  changed ljmp to sjmp
                           2953 ;       Peephole 198    optimized misc jump sequence
   0B8C BE 01 1F           2954 	cjne    r6,#0x01,00104$
   0B8F BA 00 1C           2955 	cjne    r2,#0x00,00104$
                           2956 ;00132$:
                           2957 ;       Peephole 200    removed redundant sjmp
   0B92                    2958 00133$:
                           2959 ;     genIfx
   0B92 ED                 2960 	mov	a,r5
                           2961 ;     genIfxJump
                           2962 ;       Peephole 110    removed ljmp by inverse jump logic
   0B93 60 19              2963 	jz      00104$
   0B95                    2964 00134$:
                           2965 ;src/rtc.c:314: seconds+= DAY*29;
                           2966 ;     genPlus
   0B95 E5*00              2967 	mov	a,_bp
   0B97 24 08              2968 	add	a,#0x08
   0B99 F8                 2969 	mov	r0,a
   0B9A 74 80              2970 	mov	a,#0x80
   0B9C 26                 2971 	add	a,@r0
   0B9D F6                 2972 	mov	@r0,a
   0B9E 74 3B              2973 	mov	a,#0x3B
   0BA0 08                 2974 	inc	r0
   0BA1 36                 2975 	addc	a,@r0
   0BA2 F6                 2976 	mov	@r0,a
   0BA3 74 26              2977 	mov	a,#0x26
   0BA5 08                 2978 	inc	r0
   0BA6 36                 2979 	addc	a,@r0
   0BA7 F6                 2980 	mov	@r0,a
                           2981 ;       Peephole 181    changed mov to clr
   0BA8 E4                 2982 	clr     a
   0BA9 08                 2983 	inc	r0
   0BAA 36                 2984 	addc	a,@r0
   0BAB F6                 2985 	mov	@r0,a
                           2986 ;       Peephole 112.b  changed ljmp to sjmp
   0BAC 80 50              2987 	sjmp    00113$
   0BAE                    2988 00104$:
                           2989 ;src/rtc.c:318: seconds+= DAY*monthDays[i];
                           2990 ;     genIpush
   0BAE C0 05              2991 	push	ar5
                           2992 ;     genPlus
                           2993 ;       Peephole 236.g  used r6 instead of ar6
   0BB0 EE                 2994 	mov     a,r6
   0BB1 24rAE              2995 	add	a,#_monthDays
   0BB3 F5 82              2996 	mov	dpl,a
                           2997 ;       Peephole 236.g  used r2 instead of ar2
   0BB5 EA                 2998 	mov     a,r2
   0BB6 34s10              2999 	addc	a,#(_monthDays >> 8)
   0BB8 F5 83              3000 	mov	dph,a
                           3001 ;     genPointerGet
                           3002 ;     genCodePointerGet
                           3003 ;       Peephole 181    changed mov to clr
   0BBA E4                 3004 	clr     a
   0BBB 93                 3005 	movc	a,@a+dptr
                           3006 ;     genCast
                           3007 ;       Peephole 105    removed redundant mov
   0BBC FB                 3008 	mov     r3,a
   0BBD 33                 3009 	rlc	a
   0BBE 95 E0              3010 	subb	a,acc
   0BC0 FC                 3011 	mov	r4,a
   0BC1 FF                 3012 	mov	r7,a
   0BC2 FD                 3013 	mov	r5,a
                           3014 ;     genAssign
   0BC3 75*00 80           3015 	mov	__mullong_PARM_2,#0x80
   0BC6 75*01 51           3016 	mov	(__mullong_PARM_2 + 1),#0x51
   0BC9 75*02 01           3017 	mov	(__mullong_PARM_2 + 2),#0x01
   0BCC 75*03 00           3018 	mov	(__mullong_PARM_2 + 3),#0x00
                           3019 ;     genCall
   0BCF 8B 82              3020 	mov	dpl,r3
   0BD1 8C 83              3021 	mov	dph,r4
   0BD3 8F F0              3022 	mov	b,r7
   0BD5 ED                 3023 	mov	a,r5
   0BD6 C0 02              3024 	push	ar2
   0BD8 C0 06              3025 	push	ar6
   0BDA 12s00r00           3026 	lcall	__mullong
   0BDD AB 82              3027 	mov	r3,dpl
   0BDF AC 83              3028 	mov	r4,dph
   0BE1 AD F0              3029 	mov	r5,b
   0BE3 FF                 3030 	mov	r7,a
   0BE4 D0 06              3031 	pop	ar6
   0BE6 D0 02              3032 	pop	ar2
                           3033 ;     genPlus
   0BE8 E5*00              3034 	mov	a,_bp
   0BEA 24 08              3035 	add	a,#0x08
   0BEC F8                 3036 	mov	r0,a
                           3037 ;       Peephole 236.g  used r3 instead of ar3
   0BED EB                 3038 	mov     a,r3
   0BEE 26                 3039 	add	a,@r0
   0BEF F6                 3040 	mov	@r0,a
                           3041 ;       Peephole 236.g  used r4 instead of ar4
   0BF0 EC                 3042 	mov     a,r4
   0BF1 08                 3043 	inc	r0
   0BF2 36                 3044 	addc	a,@r0
   0BF3 F6                 3045 	mov	@r0,a
                           3046 ;       Peephole 236.g  used r5 instead of ar5
   0BF4 ED                 3047 	mov     a,r5
   0BF5 08                 3048 	inc	r0
   0BF6 36                 3049 	addc	a,@r0
   0BF7 F6                 3050 	mov	@r0,a
                           3051 ;       Peephole 236.g  used r7 instead of ar7
   0BF8 EF                 3052 	mov     a,r7
   0BF9 08                 3053 	inc	r0
   0BFA 36                 3054 	addc	a,@r0
   0BFB F6                 3055 	mov	@r0,a
                           3056 ;src/rtc.c:323: return seconds;
                           3057 ;     genIpop
   0BFC D0 05              3058 	pop	ar5
                           3059 ;src/rtc.c:318: seconds+= DAY*monthDays[i];
   0BFE                    3060 00113$:
                           3061 ;src/rtc.c:310: for (i=0; i<month; i++) 
                           3062 ;     genPlus
                           3063 ;     genPlusIncr
   0BFE 0E                 3064 	inc	r6
   0BFF BE 00 01           3065 	cjne	r6,#0x00,00135$
   0C02 0A                 3066 	inc	r2
   0C03                    3067 00135$:
   0C03 02s0Br6E           3068 	ljmp	00111$
   0C06                    3069 00114$:
                           3070 ;src/rtc.c:322: seconds+= mday*DAY;
                           3071 ;     genCast
   0C06 E5*00              3072 	mov	a,_bp
   0C08 24 07              3073 	add	a,#0x07
   0C0A F8                 3074 	mov	r0,a
   0C0B 86 02              3075 	mov	ar2,@r0
   0C0D E6                 3076 	mov	a,@r0
   0C0E 33                 3077 	rlc	a
   0C0F 95 E0              3078 	subb	a,acc
   0C11 FB                 3079 	mov	r3,a
   0C12 FC                 3080 	mov	r4,a
   0C13 FD                 3081 	mov	r5,a
                           3082 ;     genAssign
   0C14 75*00 80           3083 	mov	__mullong_PARM_2,#0x80
   0C17 75*01 51           3084 	mov	(__mullong_PARM_2 + 1),#0x51
   0C1A 75*02 01           3085 	mov	(__mullong_PARM_2 + 2),#0x01
   0C1D 75*03 00           3086 	mov	(__mullong_PARM_2 + 3),#0x00
                           3087 ;     genCall
   0C20 8A 82              3088 	mov	dpl,r2
   0C22 8B 83              3089 	mov	dph,r3
   0C24 8C F0              3090 	mov	b,r4
   0C26 ED                 3091 	mov	a,r5
   0C27 12s00r00           3092 	lcall	__mullong
   0C2A AA 82              3093 	mov	r2,dpl
   0C2C AB 83              3094 	mov	r3,dph
   0C2E AC F0              3095 	mov	r4,b
   0C30 FD                 3096 	mov	r5,a
                           3097 ;     genPlus
   0C31 E5*00              3098 	mov	a,_bp
   0C33 24 08              3099 	add	a,#0x08
   0C35 F8                 3100 	mov	r0,a
                           3101 ;       Peephole 236.g  used r2 instead of ar2
   0C36 EA                 3102 	mov     a,r2
   0C37 26                 3103 	add	a,@r0
   0C38 F6                 3104 	mov	@r0,a
                           3105 ;       Peephole 236.g  used r3 instead of ar3
   0C39 EB                 3106 	mov     a,r3
   0C3A 08                 3107 	inc	r0
   0C3B 36                 3108 	addc	a,@r0
   0C3C F6                 3109 	mov	@r0,a
                           3110 ;       Peephole 236.g  used r4 instead of ar4
   0C3D EC                 3111 	mov     a,r4
   0C3E 08                 3112 	inc	r0
   0C3F 36                 3113 	addc	a,@r0
   0C40 F6                 3114 	mov	@r0,a
                           3115 ;       Peephole 236.g  used r5 instead of ar5
   0C41 ED                 3116 	mov     a,r5
   0C42 08                 3117 	inc	r0
   0C43 36                 3118 	addc	a,@r0
   0C44 F6                 3119 	mov	@r0,a
                           3120 ;src/rtc.c:323: return seconds;
                           3121 ;     genRet
   0C45 E5*00              3122 	mov	a,_bp
   0C47 24 08              3123 	add	a,#0x08
   0C49 F8                 3124 	mov	r0,a
   0C4A 86 82              3125 	mov	dpl,@r0
   0C4C 08                 3126 	inc	r0
   0C4D 86 83              3127 	mov	dph,@r0
   0C4F 08                 3128 	inc	r0
   0C50 86 F0              3129 	mov	b,@r0
   0C52 08                 3130 	inc	r0
   0C53 E6                 3131 	mov	a,@r0
   0C54                    3132 00115$:
   0C54 85*00 81           3133 	mov	sp,_bp
   0C57 D0*00              3134 	pop	_bp
   0C59 22                 3135 	ret
                           3136 ;------------------------------------------------------------
                           3137 ;Allocation info for local variables in function 'printf_asctime'
                           3138 ;------------------------------------------------------------
                           3139 ;timeptr                   Allocated to stack - offset 1
                           3140 ;sloc0                     Allocated to stack - offset 4
                           3141 ;sloc1                     Allocated to stack - offset 4
                           3142 ;sloc2                     Allocated to stack - offset 6
                           3143 ;sloc3                     Allocated to stack - offset 12
                           3144 ;------------------------------------------------------------
                           3145 ;src/rtc.c:327: void printf_asctime(struct tm *timeptr) 
                           3146 ;	-----------------------------------------
                           3147 ;	 function printf_asctime
                           3148 ;	-----------------------------------------
   0C5A                    3149 _printf_asctime:
   0C5A C0*00              3150 	push	_bp
   0C5C 85 81*00           3151 	mov	_bp,sp
   0C5F E5 81              3152 	mov	a,sp
   0C61 24 08              3153 	add	a,#0x08
   0C63 F5 81              3154 	mov	sp,a
                           3155 ;     genReceive
   0C65 C0 E0              3156 	push	acc
                           3157 ;       Peephole 212    reduced add sequence to inc
   0C67 A8*00              3158 	mov     r0,_bp
   0C69 08                 3159 	inc     r0
   0C6A D0 E0              3160 	pop	acc
   0C6C A6 82              3161 	mov	@r0,dpl
   0C6E 08                 3162 	inc	r0
   0C6F A6 83              3163 	mov	@r0,dph
   0C71 08                 3164 	inc	r0
   0C72 A6 F0              3165 	mov	@r0,b
                           3166 ;src/rtc.c:329: check_time(timeptr);
                           3167 ;     genCall
                           3168 ;       Peephole 212    reduced add sequence to inc
   0C74 A8*00              3169 	mov     r0,_bp
   0C76 08                 3170 	inc     r0
   0C77 86 82              3171 	mov	dpl,@r0
   0C79 08                 3172 	inc	r0
   0C7A 86 83              3173 	mov	dph,@r0
   0C7C 08                 3174 	inc	r0
   0C7D 86 F0              3175 	mov	b,@r0
   0C7F 12s06r17           3176 	lcall	_check_time
                           3177 ;src/rtc.c:330: printf_fast("%04u ",(unsigned int)timeptr->tm_year+2000);
                           3178 ;     genPlus
                           3179 ;       Peephole 212    reduced add sequence to inc
   0C82 A8*00              3180 	mov     r0,_bp
   0C84 08                 3181 	inc     r0
   0C85 74 05              3182 	mov	a,#0x05
   0C87 26                 3183 	add	a,@r0
   0C88 FD                 3184 	mov	r5,a
                           3185 ;       Peephole 181    changed mov to clr
   0C89 E4                 3186 	clr     a
   0C8A 08                 3187 	inc	r0
   0C8B 36                 3188 	addc	a,@r0
   0C8C FE                 3189 	mov	r6,a
   0C8D 08                 3190 	inc	r0
   0C8E 86 07              3191 	mov	ar7,@r0
                           3192 ;     genPointerGet
                           3193 ;     genGenPointerGet
   0C90 8D 82              3194 	mov	dpl,r5
   0C92 8E 83              3195 	mov	dph,r6
   0C94 8F F0              3196 	mov	b,r7
   0C96 12s00r00           3197 	lcall	__gptrget
   0C99 FD                 3198 	mov	r5,a
   0C9A A3                 3199 	inc	dptr
   0C9B 12s00r00           3200 	lcall	__gptrget
   0C9E FE                 3201 	mov	r6,a
                           3202 ;     genPlus
   0C9F 74 D0              3203 	mov	a,#0xD0
                           3204 ;       Peephole 236.a  used r5 instead of ar5
   0CA1 2D                 3205 	add     a,r5
   0CA2 FD                 3206 	mov	r5,a
   0CA3 74 07              3207 	mov	a,#0x07
                           3208 ;       Peephole 236.b  used r6 instead of ar6
   0CA5 3E                 3209 	addc    a,r6
   0CA6 FE                 3210 	mov	r6,a
                           3211 ;     genIpush
   0CA7 C0 05              3212 	push	ar5
   0CA9 C0 06              3213 	push	ar6
                           3214 ;     genIpush
   0CAB 74rBA              3215 	mov	a,#__str_0
   0CAD C0 E0              3216 	push	acc
   0CAF 74s10              3217 	mov	a,#(__str_0 >> 8)
   0CB1 C0 E0              3218 	push	acc
                           3219 ;     genCall
   0CB3 12s00r00           3220 	lcall	_printf_fast
   0CB6 E5 81              3221 	mov	a,sp
   0CB8 24 FC              3222 	add	a,#0xfc
   0CBA F5 81              3223 	mov	sp,a
                           3224 ;src/rtc.c:331: printf_fast((char code*)month[bcd2bin(timeptr->tm_mon)]);
                           3225 ;     genPlus
                           3226 ;       Peephole 212    reduced add sequence to inc
   0CBC A8*00              3227 	mov     r0,_bp
   0CBE 08                 3228 	inc     r0
                           3229 ;     genPlusIncr
   0CBF 74 04              3230 	mov	a,#0x04
   0CC1 26                 3231 	add	a,@r0
   0CC2 FD                 3232 	mov	r5,a
                           3233 ;       Peephole 181    changed mov to clr
   0CC3 E4                 3234 	clr     a
   0CC4 08                 3235 	inc	r0
   0CC5 36                 3236 	addc	a,@r0
   0CC6 FE                 3237 	mov	r6,a
   0CC7 08                 3238 	inc	r0
   0CC8 86 07              3239 	mov	ar7,@r0
                           3240 ;     genPointerGet
                           3241 ;     genGenPointerGet
   0CCA 8D 82              3242 	mov	dpl,r5
   0CCC 8E 83              3243 	mov	dph,r6
   0CCE 8F F0              3244 	mov	b,r7
   0CD0 12s00r00           3245 	lcall	__gptrget
                           3246 ;     genCall
                           3247 ;       Peephole 244.c  loading dpl from a instead of r5
   0CD3 FD                 3248 	mov	r5,a
   0CD4 F5 82              3249 	mov	dpl,a
   0CD6 12s05rF8           3250 	lcall	_bcd2bin
   0CD9 E5 82              3251 	mov	a,dpl
                           3252 ;     genMult
                           3253 ;     genMultOneByte
                           3254 ;     genPlus
                           3255 ;     genPointerGet
                           3256 ;     genCodePointerGet
                           3257 ;       Peephole 181    changed mov to clr
                           3258 ;       Peephole 186.e  optimized movc sequence (b, dptr differ)
   0CDB 25 E0              3259 	add	a,acc
   0CDD F5 F0              3260 	mov     b,a
   0CDF 90s10r76           3261 	mov	dptr,#_month
   0CE2 50 02              3262 	jnc	.+3
   0CE4 05 83              3263 	inc	dph
   0CE6 93                 3264 	movc    a,@a+dptr
   0CE7 FD                 3265 	mov     r5,a
   0CE8 E5 F0              3266 	mov     a,b
   0CEA 04                 3267 	inc	a
   0CEB 93                 3268 	movc    a,@a+dptr
   0CEC FE                 3269 	mov	r6,a
                           3270 ;     genIpush
   0CED C0 05              3271 	push	ar5
   0CEF C0 06              3272 	push	ar6
                           3273 ;     genCall
   0CF1 12s00r00           3274 	lcall	_printf_fast
   0CF4 15 81              3275 	dec	sp
   0CF6 15 81              3276 	dec	sp
                           3277 ;src/rtc.c:336: (unsigned int)timeptr->tm_sec);
                           3278 ;     genPointerGet
                           3279 ;     genGenPointerGet
                           3280 ;       Peephole 212    reduced add sequence to inc
   0CF8 A8*00              3281 	mov     r0,_bp
   0CFA 08                 3282 	inc     r0
   0CFB 86 82              3283 	mov	dpl,@r0
   0CFD 08                 3284 	inc	r0
   0CFE 86 83              3285 	mov	dph,@r0
   0D00 08                 3286 	inc	r0
   0D01 86 F0              3287 	mov	b,@r0
   0D03 12s00r00           3288 	lcall	__gptrget
   0D06 FD                 3289 	mov	r5,a
                           3290 ;     genCast
   0D07 8D 02              3291 	mov	ar2,r5
   0D09 7B 00              3292 	mov	r3,#0x00
                           3293 ;src/rtc.c:335: (unsigned int)timeptr->tm_min, 
                           3294 ;     genPlus
                           3295 ;       Peephole 212    reduced add sequence to inc
   0D0B A8*00              3296 	mov     r0,_bp
   0D0D 08                 3297 	inc     r0
                           3298 ;     genPlusIncr
   0D0E 74 01              3299 	mov	a,#0x01
   0D10 26                 3300 	add	a,@r0
   0D11 FC                 3301 	mov	r4,a
                           3302 ;       Peephole 181    changed mov to clr
   0D12 E4                 3303 	clr     a
   0D13 08                 3304 	inc	r0
   0D14 36                 3305 	addc	a,@r0
   0D15 FD                 3306 	mov	r5,a
   0D16 08                 3307 	inc	r0
   0D17 86 06              3308 	mov	ar6,@r0
                           3309 ;     genPointerGet
                           3310 ;     genGenPointerGet
   0D19 8C 82              3311 	mov	dpl,r4
   0D1B 8D 83              3312 	mov	dph,r5
   0D1D 8E F0              3313 	mov	b,r6
   0D1F 12s00r00           3314 	lcall	__gptrget
   0D22 FF                 3315 	mov	r7,a
                           3316 ;     genCast
   0D23 E5*00              3317 	mov	a,_bp
   0D25 24 04              3318 	add	a,#0x04
   0D27 F8                 3319 	mov	r0,a
   0D28 A6 07              3320 	mov	@r0,ar7
   0D2A 08                 3321 	inc	r0
   0D2B 76 00              3322 	mov	@r0,#0x00
                           3323 ;src/rtc.c:334: (unsigned int)timeptr->tm_hour, 
                           3324 ;     genPlus
                           3325 ;       Peephole 212    reduced add sequence to inc
   0D2D A8*00              3326 	mov     r0,_bp
   0D2F 08                 3327 	inc     r0
                           3328 ;     genPlusIncr
   0D30 74 02              3329 	mov	a,#0x02
   0D32 26                 3330 	add	a,@r0
   0D33 FC                 3331 	mov	r4,a
                           3332 ;       Peephole 181    changed mov to clr
   0D34 E4                 3333 	clr     a
   0D35 08                 3334 	inc	r0
   0D36 36                 3335 	addc	a,@r0
   0D37 FD                 3336 	mov	r5,a
   0D38 08                 3337 	inc	r0
   0D39 86 06              3338 	mov	ar6,@r0
                           3339 ;     genPointerGet
                           3340 ;     genGenPointerGet
   0D3B 8C 82              3341 	mov	dpl,r4
   0D3D 8D 83              3342 	mov	dph,r5
   0D3F 8E F0              3343 	mov	b,r6
   0D41 12s00r00           3344 	lcall	__gptrget
   0D44 FC                 3345 	mov	r4,a
                           3346 ;     genCast
   0D45 E5*00              3347 	mov	a,_bp
   0D47 24 06              3348 	add	a,#0x06
   0D49 F8                 3349 	mov	r0,a
   0D4A A6 04              3350 	mov	@r0,ar4
   0D4C 08                 3351 	inc	r0
   0D4D 76 00              3352 	mov	@r0,#0x00
                           3353 ;src/rtc.c:333: (unsigned int)timeptr->tm_mday, 
                           3354 ;     genPlus
                           3355 ;       Peephole 212    reduced add sequence to inc
   0D4F A8*00              3356 	mov     r0,_bp
   0D51 08                 3357 	inc     r0
                           3358 ;     genPlusIncr
   0D52 74 03              3359 	mov	a,#0x03
   0D54 26                 3360 	add	a,@r0
   0D55 FC                 3361 	mov	r4,a
                           3362 ;       Peephole 181    changed mov to clr
   0D56 E4                 3363 	clr     a
   0D57 08                 3364 	inc	r0
   0D58 36                 3365 	addc	a,@r0
   0D59 FF                 3366 	mov	r7,a
   0D5A 08                 3367 	inc	r0
   0D5B 86 05              3368 	mov	ar5,@r0
                           3369 ;     genPointerGet
                           3370 ;     genGenPointerGet
   0D5D 8C 82              3371 	mov	dpl,r4
   0D5F 8F 83              3372 	mov	dph,r7
   0D61 8D F0              3373 	mov	b,r5
   0D63 12s00r00           3374 	lcall	__gptrget
   0D66 FC                 3375 	mov	r4,a
                           3376 ;     genCast
   0D67 7D 00              3377 	mov	r5,#0x00
                           3378 ;src/rtc.c:332: printf_fast("%02u %02u:%02u:%02u", 
                           3379 ;     genIpush
   0D69 C0 02              3380 	push	ar2
   0D6B C0 03              3381 	push	ar3
                           3382 ;     genIpush
   0D6D E5*00              3383 	mov	a,_bp
   0D6F 24 04              3384 	add	a,#0x04
   0D71 F8                 3385 	mov	r0,a
   0D72 E6                 3386 	mov	a,@r0
   0D73 C0 E0              3387 	push	acc
   0D75 08                 3388 	inc	r0
   0D76 E6                 3389 	mov	a,@r0
   0D77 C0 E0              3390 	push	acc
                           3391 ;     genIpush
   0D79 E5*00              3392 	mov	a,_bp
   0D7B 24 06              3393 	add	a,#0x06
   0D7D F8                 3394 	mov	r0,a
   0D7E E6                 3395 	mov	a,@r0
   0D7F C0 E0              3396 	push	acc
   0D81 08                 3397 	inc	r0
   0D82 E6                 3398 	mov	a,@r0
   0D83 C0 E0              3399 	push	acc
                           3400 ;     genIpush
   0D85 C0 04              3401 	push	ar4
   0D87 C0 05              3402 	push	ar5
                           3403 ;     genIpush
   0D89 74rC0              3404 	mov	a,#__str_1
   0D8B C0 E0              3405 	push	acc
   0D8D 74s10              3406 	mov	a,#(__str_1 >> 8)
   0D8F C0 E0              3407 	push	acc
                           3408 ;     genCall
   0D91 12s00r00           3409 	lcall	_printf_fast
   0D94 E5 81              3410 	mov	a,sp
   0D96 24 F6              3411 	add	a,#0xf6
   0D98 F5 81              3412 	mov	sp,a
                           3413 ;src/rtc.c:337: printf_fast("   ");
                           3414 ;     genIpush
   0D9A 74rD4              3415 	mov	a,#__str_2
   0D9C C0 E0              3416 	push	acc
   0D9E 74s10              3417 	mov	a,#(__str_2 >> 8)
   0DA0 C0 E0              3418 	push	acc
                           3419 ;     genCall
   0DA2 12s00r00           3420 	lcall	_printf_fast
   0DA5 15 81              3421 	dec	sp
   0DA7 15 81              3422 	dec	sp
                           3423 ;src/rtc.c:338: printf_fast((char code*)day_full[bcd2bin(timeptr->tm_wday)]);
                           3424 ;     genPlus
                           3425 ;       Peephole 212    reduced add sequence to inc
   0DA9 A8*00              3426 	mov     r0,_bp
   0DAB 08                 3427 	inc     r0
   0DAC 74 07              3428 	mov	a,#0x07
   0DAE 26                 3429 	add	a,@r0
   0DAF FC                 3430 	mov	r4,a
                           3431 ;       Peephole 181    changed mov to clr
   0DB0 E4                 3432 	clr     a
   0DB1 08                 3433 	inc	r0
   0DB2 36                 3434 	addc	a,@r0
   0DB3 FD                 3435 	mov	r5,a
   0DB4 08                 3436 	inc	r0
   0DB5 86 06              3437 	mov	ar6,@r0
                           3438 ;     genPointerGet
                           3439 ;     genGenPointerGet
   0DB7 8C 82              3440 	mov	dpl,r4
   0DB9 8D 83              3441 	mov	dph,r5
   0DBB 8E F0              3442 	mov	b,r6
   0DBD 12s00r00           3443 	lcall	__gptrget
                           3444 ;     genCall
                           3445 ;       Peephole 244.c  loading dpl from a instead of r4
   0DC0 FC                 3446 	mov	r4,a
   0DC1 F5 82              3447 	mov	dpl,a
   0DC3 12s05rF8           3448 	lcall	_bcd2bin
   0DC6 E5 82              3449 	mov	a,dpl
                           3450 ;     genMult
                           3451 ;     genMultOneByte
                           3452 ;     genPlus
                           3453 ;     genPointerGet
                           3454 ;     genCodePointerGet
                           3455 ;       Peephole 181    changed mov to clr
                           3456 ;       Peephole 186.e  optimized movc sequence (b, dptr differ)
   0DC8 25 E0              3457 	add	a,acc
   0DCA F5 F0              3458 	mov     b,a
   0DCC 90s10r9E           3459 	mov	dptr,#_day_full
   0DCF 50 02              3460 	jnc	.+3
   0DD1 05 83              3461 	inc	dph
   0DD3 93                 3462 	movc    a,@a+dptr
   0DD4 FC                 3463 	mov     r4,a
   0DD5 E5 F0              3464 	mov     a,b
   0DD7 04                 3465 	inc	a
   0DD8 93                 3466 	movc    a,@a+dptr
   0DD9 FD                 3467 	mov	r5,a
                           3468 ;     genIpush
   0DDA C0 04              3469 	push	ar4
   0DDC C0 05              3470 	push	ar5
                           3471 ;     genCall
   0DDE 12s00r00           3472 	lcall	_printf_fast
   0DE1 15 81              3473 	dec	sp
   0DE3 15 81              3474 	dec	sp
   0DE5                    3475 00101$:
   0DE5 85*00 81           3476 	mov	sp,_bp
   0DE8 D0*00              3477 	pop	_bp
   0DEA 22                 3478 	ret
                           3479 ;------------------------------------------------------------
                           3480 ;Allocation info for local variables in function 'printf_short_asctime'
                           3481 ;------------------------------------------------------------
                           3482 ;timeptr                   Allocated to registers r2 r3 r4 
                           3483 ;------------------------------------------------------------
                           3484 ;src/rtc.c:342: void printf_short_asctime(struct tm *timeptr) 
                           3485 ;	-----------------------------------------
                           3486 ;	 function printf_short_asctime
                           3487 ;	-----------------------------------------
   0DEB                    3488 _printf_short_asctime:
   0DEB C0*00              3489 	push	_bp
   0DED 85 81*00           3490 	mov	_bp,sp
                           3491 ;     genReceive
                           3492 ;src/rtc.c:344: check_time(timeptr);
                           3493 ;     genCall
   0DF0 AA 82              3494 	mov     r2,dpl
   0DF2 AB 83              3495 	mov     r3,dph
   0DF4 AC F0              3496 	mov     r4,b
                           3497 ;       Peephole 238.d  removed 3 redundant moves
   0DF6 C0 02              3498 	push	ar2
   0DF8 C0 03              3499 	push	ar3
   0DFA C0 04              3500 	push	ar4
   0DFC 12s06r17           3501 	lcall	_check_time
   0DFF D0 04              3502 	pop	ar4
   0E01 D0 03              3503 	pop	ar3
   0E03 D0 02              3504 	pop	ar2
                           3505 ;src/rtc.c:346: printf_fast((char code*)day[bcd2bin(timeptr->tm_wday)]);
                           3506 ;     genPlus
   0E05 74 07              3507 	mov	a,#0x07
                           3508 ;       Peephole 236.a  used r2 instead of ar2
   0E07 2A                 3509 	add     a,r2
   0E08 FD                 3510 	mov	r5,a
                           3511 ;       Peephole 181    changed mov to clr
   0E09 E4                 3512 	clr     a
                           3513 ;       Peephole 236.b  used r3 instead of ar3
   0E0A 3B                 3514 	addc    a,r3
   0E0B FE                 3515 	mov	r6,a
   0E0C 8C 07              3516 	mov	ar7,r4
                           3517 ;     genPointerGet
                           3518 ;     genGenPointerGet
   0E0E 8D 82              3519 	mov	dpl,r5
   0E10 8E 83              3520 	mov	dph,r6
   0E12 8F F0              3521 	mov	b,r7
   0E14 12s00r00           3522 	lcall	__gptrget
                           3523 ;     genCall
                           3524 ;       Peephole 244.c  loading dpl from a instead of r5
   0E17 FD                 3525 	mov	r5,a
   0E18 F5 82              3526 	mov	dpl,a
   0E1A C0 02              3527 	push	ar2
   0E1C C0 03              3528 	push	ar3
   0E1E C0 04              3529 	push	ar4
   0E20 12s05rF8           3530 	lcall	_bcd2bin
   0E23 E5 82              3531 	mov	a,dpl
   0E25 D0 04              3532 	pop	ar4
   0E27 D0 03              3533 	pop	ar3
   0E29 D0 02              3534 	pop	ar2
                           3535 ;     genMult
                           3536 ;     genMultOneByte
                           3537 ;     genPlus
                           3538 ;     genPointerGet
                           3539 ;     genCodePointerGet
                           3540 ;       Peephole 181    changed mov to clr
                           3541 ;       Peephole 186.e  optimized movc sequence (b, dptr differ)
   0E2B 25 E0              3542 	add	a,acc
   0E2D F5 F0              3543 	mov     b,a
   0E2F 90s10r8E           3544 	mov	dptr,#_day
   0E32 50 02              3545 	jnc	.+3
   0E34 05 83              3546 	inc	dph
   0E36 93                 3547 	movc    a,@a+dptr
   0E37 FD                 3548 	mov     r5,a
   0E38 E5 F0              3549 	mov     a,b
   0E3A 04                 3550 	inc	a
   0E3B 93                 3551 	movc    a,@a+dptr
   0E3C FE                 3552 	mov	r6,a
                           3553 ;     genIpush
   0E3D C0 02              3554 	push	ar2
   0E3F C0 03              3555 	push	ar3
   0E41 C0 04              3556 	push	ar4
   0E43 C0 05              3557 	push	ar5
   0E45 C0 06              3558 	push	ar6
                           3559 ;     genCall
   0E47 12s00r00           3560 	lcall	_printf_fast
   0E4A 15 81              3561 	dec	sp
   0E4C 15 81              3562 	dec	sp
   0E4E D0 04              3563 	pop	ar4
   0E50 D0 03              3564 	pop	ar3
   0E52 D0 02              3565 	pop	ar2
                           3566 ;src/rtc.c:350: (unsigned int)timeptr->tm_min);
                           3567 ;     genPlus
                           3568 ;     genPlusIncr
   0E54 74 01              3569 	mov	a,#0x01
                           3570 ;       Peephole 236.a  used r2 instead of ar2
   0E56 2A                 3571 	add     a,r2
   0E57 FD                 3572 	mov	r5,a
                           3573 ;       Peephole 181    changed mov to clr
   0E58 E4                 3574 	clr     a
                           3575 ;       Peephole 236.b  used r3 instead of ar3
   0E59 3B                 3576 	addc    a,r3
   0E5A FE                 3577 	mov	r6,a
   0E5B 8C 07              3578 	mov	ar7,r4
                           3579 ;     genPointerGet
                           3580 ;     genGenPointerGet
   0E5D 8D 82              3581 	mov	dpl,r5
   0E5F 8E 83              3582 	mov	dph,r6
   0E61 8F F0              3583 	mov	b,r7
   0E63 12s00r00           3584 	lcall	__gptrget
   0E66 FD                 3585 	mov	r5,a
                           3586 ;     genCast
   0E67 7E 00              3587 	mov	r6,#0x00
                           3588 ;src/rtc.c:349: (unsigned int)timeptr->tm_hour, 
                           3589 ;     genPlus
                           3590 ;     genPlusIncr
   0E69 74 02              3591 	mov	a,#0x02
                           3592 ;       Peephole 236.a  used r2 instead of ar2
   0E6B 2A                 3593 	add     a,r2
   0E6C FF                 3594 	mov	r7,a
                           3595 ;       Peephole 181    changed mov to clr
   0E6D E4                 3596 	clr     a
                           3597 ;       Peephole 236.b  used r3 instead of ar3
   0E6E 3B                 3598 	addc    a,r3
   0E6F F8                 3599 	mov	r0,a
   0E70 8C 01              3600 	mov	ar1,r4
                           3601 ;     genPointerGet
                           3602 ;     genGenPointerGet
   0E72 8F 82              3603 	mov	dpl,r7
   0E74 88 83              3604 	mov	dph,r0
   0E76 89 F0              3605 	mov	b,r1
   0E78 12s00r00           3606 	lcall	__gptrget
   0E7B FF                 3607 	mov	r7,a
                           3608 ;     genCast
   0E7C 78 00              3609 	mov	r0,#0x00
                           3610 ;src/rtc.c:348: (unsigned int)timeptr->tm_mday, 
                           3611 ;     genPlus
                           3612 ;     genPlusIncr
   0E7E 74 03              3613 	mov	a,#0x03
                           3614 ;       Peephole 236.a  used r2 instead of ar2
   0E80 2A                 3615 	add     a,r2
   0E81 FA                 3616 	mov	r2,a
                           3617 ;       Peephole 181    changed mov to clr
   0E82 E4                 3618 	clr     a
                           3619 ;       Peephole 236.b  used r3 instead of ar3
   0E83 3B                 3620 	addc    a,r3
   0E84 FB                 3621 	mov	r3,a
                           3622 ;     genPointerGet
                           3623 ;     genGenPointerGet
   0E85 8A 82              3624 	mov	dpl,r2
   0E87 8B 83              3625 	mov	dph,r3
   0E89 8C F0              3626 	mov	b,r4
   0E8B 12s00r00           3627 	lcall	__gptrget
   0E8E FA                 3628 	mov	r2,a
                           3629 ;     genCast
   0E8F 7B 00              3630 	mov	r3,#0x00
                           3631 ;src/rtc.c:347: printf_fast("%02u %02u:%02u", 
                           3632 ;     genIpush
   0E91 C0 05              3633 	push	ar5
   0E93 C0 06              3634 	push	ar6
                           3635 ;     genIpush
   0E95 C0 07              3636 	push	ar7
   0E97 C0 00              3637 	push	ar0
                           3638 ;     genIpush
   0E99 C0 02              3639 	push	ar2
   0E9B C0 03              3640 	push	ar3
                           3641 ;     genIpush
   0E9D 74rD8              3642 	mov	a,#__str_3
   0E9F C0 E0              3643 	push	acc
   0EA1 74s10              3644 	mov	a,#(__str_3 >> 8)
   0EA3 C0 E0              3645 	push	acc
                           3646 ;     genCall
   0EA5 12s00r00           3647 	lcall	_printf_fast
   0EA8 E5 81              3648 	mov	a,sp
   0EAA 24 F8              3649 	add	a,#0xf8
   0EAC F5 81              3650 	mov	sp,a
   0EAE                    3651 00101$:
   0EAE 85*00 81           3652 	mov	sp,_bp
   0EB1 D0*00              3653 	pop	_bp
   0EB3 22                 3654 	ret
                           3655 ;------------------------------------------------------------
                           3656 ;Allocation info for local variables in function 'printf_date'
                           3657 ;------------------------------------------------------------
                           3658 ;timeptr                   Allocated to registers r2 r3 r4 
                           3659 ;------------------------------------------------------------
                           3660 ;src/rtc.c:353: void printf_date(const struct tm *timeptr)
                           3661 ;	-----------------------------------------
                           3662 ;	 function printf_date
                           3663 ;	-----------------------------------------
   0EB4                    3664 _printf_date:
   0EB4 C0*00              3665 	push	_bp
   0EB6 85 81*00           3666 	mov	_bp,sp
                           3667 ;     genReceive
   0EB9 AA 82              3668 	mov	r2,dpl
   0EBB AB 83              3669 	mov	r3,dph
   0EBD AC F0              3670 	mov	r4,b
                           3671 ;src/rtc.c:358: (unsigned int)timeptr->tm_mday);
                           3672 ;     genPlus
                           3673 ;     genPlusIncr
   0EBF 74 03              3674 	mov	a,#0x03
                           3675 ;       Peephole 236.a  used r2 instead of ar2
   0EC1 2A                 3676 	add     a,r2
   0EC2 FD                 3677 	mov	r5,a
                           3678 ;       Peephole 181    changed mov to clr
   0EC3 E4                 3679 	clr     a
                           3680 ;       Peephole 236.b  used r3 instead of ar3
   0EC4 3B                 3681 	addc    a,r3
   0EC5 FE                 3682 	mov	r6,a
   0EC6 8C 07              3683 	mov	ar7,r4
                           3684 ;     genPointerGet
                           3685 ;     genGenPointerGet
   0EC8 8D 82              3686 	mov	dpl,r5
   0ECA 8E 83              3687 	mov	dph,r6
   0ECC 8F F0              3688 	mov	b,r7
   0ECE 12s00r00           3689 	lcall	__gptrget
   0ED1 FD                 3690 	mov	r5,a
                           3691 ;     genCast
   0ED2 7E 00              3692 	mov	r6,#0x00
                           3693 ;src/rtc.c:357: (unsigned int)timeptr->tm_mon,
                           3694 ;     genPlus
                           3695 ;     genPlusIncr
   0ED4 74 04              3696 	mov	a,#0x04
                           3697 ;       Peephole 236.a  used r2 instead of ar2
   0ED6 2A                 3698 	add     a,r2
   0ED7 FF                 3699 	mov	r7,a
                           3700 ;       Peephole 181    changed mov to clr
   0ED8 E4                 3701 	clr     a
                           3702 ;       Peephole 236.b  used r3 instead of ar3
   0ED9 3B                 3703 	addc    a,r3
   0EDA F8                 3704 	mov	r0,a
   0EDB 8C 01              3705 	mov	ar1,r4
                           3706 ;     genPointerGet
                           3707 ;     genGenPointerGet
   0EDD 8F 82              3708 	mov	dpl,r7
   0EDF 88 83              3709 	mov	dph,r0
   0EE1 89 F0              3710 	mov	b,r1
   0EE3 12s00r00           3711 	lcall	__gptrget
   0EE6 FF                 3712 	mov	r7,a
                           3713 ;     genCast
   0EE7 78 00              3714 	mov	r0,#0x00
                           3715 ;src/rtc.c:356: (unsigned int)timeptr->tm_year,
                           3716 ;     genPlus
   0EE9 74 05              3717 	mov	a,#0x05
                           3718 ;       Peephole 236.a  used r2 instead of ar2
   0EEB 2A                 3719 	add     a,r2
   0EEC FA                 3720 	mov	r2,a
                           3721 ;       Peephole 181    changed mov to clr
   0EED E4                 3722 	clr     a
                           3723 ;       Peephole 236.b  used r3 instead of ar3
   0EEE 3B                 3724 	addc    a,r3
   0EEF FB                 3725 	mov	r3,a
                           3726 ;     genPointerGet
                           3727 ;     genGenPointerGet
   0EF0 8A 82              3728 	mov	dpl,r2
   0EF2 8B 83              3729 	mov	dph,r3
   0EF4 8C F0              3730 	mov	b,r4
   0EF6 12s00r00           3731 	lcall	__gptrget
   0EF9 FA                 3732 	mov	r2,a
   0EFA A3                 3733 	inc	dptr
   0EFB 12s00r00           3734 	lcall	__gptrget
   0EFE FB                 3735 	mov	r3,a
                           3736 ;src/rtc.c:355: printf_fast("%04u-%02u-%02u", 
                           3737 ;     genIpush
   0EFF C0 05              3738 	push	ar5
   0F01 C0 06              3739 	push	ar6
                           3740 ;     genIpush
   0F03 C0 07              3741 	push	ar7
   0F05 C0 00              3742 	push	ar0
                           3743 ;     genIpush
   0F07 C0 02              3744 	push	ar2
   0F09 C0 03              3745 	push	ar3
                           3746 ;     genIpush
   0F0B 74rE7              3747 	mov	a,#__str_4
   0F0D C0 E0              3748 	push	acc
   0F0F 74s10              3749 	mov	a,#(__str_4 >> 8)
   0F11 C0 E0              3750 	push	acc
                           3751 ;     genCall
   0F13 12s00r00           3752 	lcall	_printf_fast
   0F16 E5 81              3753 	mov	a,sp
   0F18 24 F8              3754 	add	a,#0xf8
   0F1A F5 81              3755 	mov	sp,a
   0F1C                    3756 00101$:
   0F1C 85*00 81           3757 	mov	sp,_bp
   0F1F D0*00              3758 	pop	_bp
   0F21 22                 3759 	ret
                           3760 ;------------------------------------------------------------
                           3761 ;Allocation info for local variables in function 'printf_weekday_short'
                           3762 ;------------------------------------------------------------
                           3763 ;timeptr                   Allocated to registers r2 r3 r4 
                           3764 ;------------------------------------------------------------
                           3765 ;src/rtc.c:361: void printf_weekday_short(const struct tm *timeptr)
                           3766 ;	-----------------------------------------
                           3767 ;	 function printf_weekday_short
                           3768 ;	-----------------------------------------
   0F22                    3769 _printf_weekday_short:
   0F22 C0*00              3770 	push	_bp
   0F24 85 81*00           3771 	mov	_bp,sp
                           3772 ;     genReceive
   0F27 AA 82              3773 	mov	r2,dpl
   0F29 AB 83              3774 	mov	r3,dph
   0F2B AC F0              3775 	mov	r4,b
                           3776 ;src/rtc.c:363: printf_fast((char code*)day[bcd2bin(timeptr->tm_wday)]);
                           3777 ;     genPlus
   0F2D 74 07              3778 	mov	a,#0x07
                           3779 ;       Peephole 236.a  used r2 instead of ar2
   0F2F 2A                 3780 	add     a,r2
   0F30 FA                 3781 	mov	r2,a
                           3782 ;       Peephole 181    changed mov to clr
   0F31 E4                 3783 	clr     a
                           3784 ;       Peephole 236.b  used r3 instead of ar3
   0F32 3B                 3785 	addc    a,r3
   0F33 FB                 3786 	mov	r3,a
                           3787 ;     genPointerGet
                           3788 ;     genGenPointerGet
   0F34 8A 82              3789 	mov	dpl,r2
   0F36 8B 83              3790 	mov	dph,r3
   0F38 8C F0              3791 	mov	b,r4
   0F3A 12s00r00           3792 	lcall	__gptrget
                           3793 ;     genCall
                           3794 ;       Peephole 244.c  loading dpl from a instead of r2
   0F3D FA                 3795 	mov	r2,a
   0F3E F5 82              3796 	mov	dpl,a
   0F40 12s05rF8           3797 	lcall	_bcd2bin
   0F43 E5 82              3798 	mov	a,dpl
                           3799 ;     genMult
                           3800 ;     genMultOneByte
                           3801 ;     genPlus
                           3802 ;     genPointerGet
                           3803 ;     genCodePointerGet
                           3804 ;       Peephole 181    changed mov to clr
                           3805 ;       Peephole 186.e  optimized movc sequence (b, dptr differ)
   0F45 25 E0              3806 	add	a,acc
   0F47 F5 F0              3807 	mov     b,a
   0F49 90s10r8E           3808 	mov	dptr,#_day
   0F4C 50 02              3809 	jnc	.+3
   0F4E 05 83              3810 	inc	dph
   0F50 93                 3811 	movc    a,@a+dptr
   0F51 FA                 3812 	mov     r2,a
   0F52 E5 F0              3813 	mov     a,b
   0F54 04                 3814 	inc	a
   0F55 93                 3815 	movc    a,@a+dptr
   0F56 FB                 3816 	mov	r3,a
                           3817 ;     genIpush
   0F57 C0 02              3818 	push	ar2
   0F59 C0 03              3819 	push	ar3
                           3820 ;     genCall
   0F5B 12s00r00           3821 	lcall	_printf_fast
   0F5E 15 81              3822 	dec	sp
   0F60 15 81              3823 	dec	sp
   0F62                    3824 00101$:
   0F62 85*00 81           3825 	mov	sp,_bp
   0F65 D0*00              3826 	pop	_bp
   0F67 22                 3827 	ret
                           3828 ;------------------------------------------------------------
                           3829 ;Allocation info for local variables in function 'printf_day'
                           3830 ;------------------------------------------------------------
                           3831 ;day_number                Allocated to registers 
                           3832 ;------------------------------------------------------------
                           3833 ;src/rtc.c:366: void printf_day(const unsigned char day_number)
                           3834 ;	-----------------------------------------
                           3835 ;	 function printf_day
                           3836 ;	-----------------------------------------
   0F68                    3837 _printf_day:
   0F68 C0*00              3838 	push	_bp
   0F6A 85 81*00           3839 	mov	_bp,sp
                           3840 ;     genReceive
                           3841 ;src/rtc.c:368: printf_fast((char code*)day[bcd2bin(day_number)]);
                           3842 ;     genCall
   0F6D 12s05rF8           3843 	lcall	_bcd2bin
   0F70 E5 82              3844 	mov	a,dpl
                           3845 ;     genMult
                           3846 ;     genMultOneByte
                           3847 ;     genPlus
                           3848 ;     genPointerGet
                           3849 ;     genCodePointerGet
                           3850 ;       Peephole 181    changed mov to clr
                           3851 ;       Peephole 186.e  optimized movc sequence (b, dptr differ)
   0F72 25 E0              3852 	add	a,acc
   0F74 F5 F0              3853 	mov     b,a
   0F76 90s10r8E           3854 	mov	dptr,#_day
   0F79 50 02              3855 	jnc	.+3
   0F7B 05 83              3856 	inc	dph
   0F7D 93                 3857 	movc    a,@a+dptr
   0F7E FA                 3858 	mov     r2,a
   0F7F E5 F0              3859 	mov     a,b
   0F81 04                 3860 	inc	a
   0F82 93                 3861 	movc    a,@a+dptr
   0F83 FB                 3862 	mov	r3,a
                           3863 ;     genIpush
   0F84 C0 02              3864 	push	ar2
   0F86 C0 03              3865 	push	ar3
                           3866 ;     genCall
   0F88 12s00r00           3867 	lcall	_printf_fast
   0F8B 15 81              3868 	dec	sp
   0F8D 15 81              3869 	dec	sp
   0F8F                    3870 00101$:
   0F8F 85*00 81           3871 	mov	sp,_bp
   0F92 D0*00              3872 	pop	_bp
   0F94 22                 3873 	ret
                           3874 ;------------------------------------------------------------
                           3875 ;Allocation info for local variables in function 'printf_time'
                           3876 ;------------------------------------------------------------
                           3877 ;timeptr                   Allocated to registers r2 r3 r4 
                           3878 ;------------------------------------------------------------
                           3879 ;src/rtc.c:371: void printf_time(const struct tm *timeptr)
                           3880 ;	-----------------------------------------
                           3881 ;	 function printf_time
                           3882 ;	-----------------------------------------
   0F95                    3883 _printf_time:
   0F95 C0*00              3884 	push	_bp
   0F97 85 81*00           3885 	mov	_bp,sp
                           3886 ;     genReceive
                           3887 ;src/rtc.c:376: (unsigned int)timeptr->tm_sec);
                           3888 ;     genPointerGet
                           3889 ;     genGenPointerGet
   0F9A AA 82              3890 	mov     r2,dpl
   0F9C AB 83              3891 	mov     r3,dph
   0F9E AC F0              3892 	mov     r4,b
                           3893 ;       Peephole 238.d  removed 3 redundant moves
   0FA0 12s00r00           3894 	lcall	__gptrget
   0FA3 FD                 3895 	mov	r5,a
                           3896 ;     genCast
   0FA4 7E 00              3897 	mov	r6,#0x00
                           3898 ;src/rtc.c:375: (unsigned int)timeptr->tm_min,
                           3899 ;     genPlus
                           3900 ;     genPlusIncr
   0FA6 74 01              3901 	mov	a,#0x01
                           3902 ;       Peephole 236.a  used r2 instead of ar2
   0FA8 2A                 3903 	add     a,r2
   0FA9 FF                 3904 	mov	r7,a
                           3905 ;       Peephole 181    changed mov to clr
   0FAA E4                 3906 	clr     a
                           3907 ;       Peephole 236.b  used r3 instead of ar3
   0FAB 3B                 3908 	addc    a,r3
   0FAC F8                 3909 	mov	r0,a
   0FAD 8C 01              3910 	mov	ar1,r4
                           3911 ;     genPointerGet
                           3912 ;     genGenPointerGet
   0FAF 8F 82              3913 	mov	dpl,r7
   0FB1 88 83              3914 	mov	dph,r0
   0FB3 89 F0              3915 	mov	b,r1
   0FB5 12s00r00           3916 	lcall	__gptrget
   0FB8 FF                 3917 	mov	r7,a
                           3918 ;     genCast
   0FB9 78 00              3919 	mov	r0,#0x00
                           3920 ;src/rtc.c:374: (unsigned int)timeptr->tm_hour,
                           3921 ;     genPlus
                           3922 ;     genPlusIncr
   0FBB 74 02              3923 	mov	a,#0x02
                           3924 ;       Peephole 236.a  used r2 instead of ar2
   0FBD 2A                 3925 	add     a,r2
   0FBE FA                 3926 	mov	r2,a
                           3927 ;       Peephole 181    changed mov to clr
   0FBF E4                 3928 	clr     a
                           3929 ;       Peephole 236.b  used r3 instead of ar3
   0FC0 3B                 3930 	addc    a,r3
   0FC1 FB                 3931 	mov	r3,a
                           3932 ;     genPointerGet
                           3933 ;     genGenPointerGet
   0FC2 8A 82              3934 	mov	dpl,r2
   0FC4 8B 83              3935 	mov	dph,r3
   0FC6 8C F0              3936 	mov	b,r4
   0FC8 12s00r00           3937 	lcall	__gptrget
   0FCB FA                 3938 	mov	r2,a
                           3939 ;     genCast
   0FCC 7B 00              3940 	mov	r3,#0x00
                           3941 ;src/rtc.c:373: printf_fast("%02u:%02u:%02u", 
                           3942 ;     genIpush
   0FCE C0 05              3943 	push	ar5
   0FD0 C0 06              3944 	push	ar6
                           3945 ;     genIpush
   0FD2 C0 07              3946 	push	ar7
   0FD4 C0 00              3947 	push	ar0
                           3948 ;     genIpush
   0FD6 C0 02              3949 	push	ar2
   0FD8 C0 03              3950 	push	ar3
                           3951 ;     genIpush
   0FDA 74rF6              3952 	mov	a,#__str_5
   0FDC C0 E0              3953 	push	acc
   0FDE 74s10              3954 	mov	a,#(__str_5 >> 8)
   0FE0 C0 E0              3955 	push	acc
                           3956 ;     genCall
   0FE2 12s00r00           3957 	lcall	_printf_fast
   0FE5 E5 81              3958 	mov	a,sp
   0FE7 24 F8              3959 	add	a,#0xf8
   0FE9 F5 81              3960 	mov	sp,a
   0FEB                    3961 00101$:
   0FEB 85*00 81           3962 	mov	sp,_bp
   0FEE D0*00              3963 	pop	_bp
   0FF0 22                 3964 	ret
                           3965 ;------------------------------------------------------------
                           3966 ;Allocation info for local variables in function 'ds1302_write_memory'
                           3967 ;------------------------------------------------------------
                           3968 ;number                    Allocated to stack - offset -3
                           3969 ;addr                      Allocated to registers r2 
                           3970 ;address                   Allocated to registers 
                           3971 ;------------------------------------------------------------
                           3972 ;src/rtc.c:407: void ds1302_write_memory(const unsigned char addr, const unsigned char number)
                           3973 ;	-----------------------------------------
                           3974 ;	 function ds1302_write_memory
                           3975 ;	-----------------------------------------
   0FF1                    3976 _ds1302_write_memory:
   0FF1 C0*00              3977 	push	_bp
   0FF3 85 81*00           3978 	mov	_bp,sp
                           3979 ;     genReceive
   0FF6 AA 82              3980 	mov	r2,dpl
                           3981 ;src/rtc.c:413: reset_3w();
                           3982 ;     genCall
   0FF8 C0 02              3983 	push	ar2
   0FFA 12s00r00           3984 	lcall	_reset_3w
   0FFD D0 02              3985 	pop	ar2
                           3986 ;src/rtc.c:414: wbyte_3w(RTC_CTRL);
                           3987 ;     genCall
   0FFF 75 82 8E           3988 	mov	dpl,#0x8E
   1002 C0 02              3989 	push	ar2
   1004 12s00r11           3990 	lcall	_wbyte_3w
   1007 D0 02              3991 	pop	ar2
                           3992 ;src/rtc.c:415: wbyte_3w(0x00);
                           3993 ;     genCall
   1009 75 82 00           3994 	mov	dpl,#0x00
   100C C0 02              3995 	push	ar2
   100E 12s00r11           3996 	lcall	_wbyte_3w
   1011 D0 02              3997 	pop	ar2
                           3998 ;src/rtc.c:416: reset_3w();
                           3999 ;     genCall
   1013 C0 02              4000 	push	ar2
   1015 12s00r00           4001 	lcall	_reset_3w
   1018 D0 02              4002 	pop	ar2
                           4003 ;src/rtc.c:417: wbyte_3w((address<<1)|0xC0);
                           4004 ;     genLeftShift
                           4005 ;     genLeftShiftLiteral
                           4006 ;     genlshOne
   101A EA                 4007 	mov	a,r2
   101B 25 E0              4008 	add	a,acc
   101D FA                 4009 	mov	r2,a
                           4010 ;     genOr
   101E 74 C0              4011 	mov	a,#0xC0
   1020 4A                 4012 	orl	a,r2
   1021 F5 82              4013 	mov	dpl,a
                           4014 ;     genCall
   1023 12s00r11           4015 	lcall	_wbyte_3w
                           4016 ;src/rtc.c:418: wbyte_3w(number);
                           4017 ;     genCall
   1026 E5*00              4018 	mov	a,_bp
   1028 24 FD              4019 	add	a,#0xfd
   102A F8                 4020 	mov	r0,a
   102B 86 82              4021 	mov	dpl,@r0
   102D 12s00r11           4022 	lcall	_wbyte_3w
                           4023 ;src/rtc.c:419: reset_3w();
                           4024 ;     genCall
   1030 12s00r00           4025 	lcall	_reset_3w
                           4026 ;src/rtc.c:420: wbyte_3w(RTC_CTRL);
                           4027 ;     genCall
   1033 75 82 8E           4028 	mov	dpl,#0x8E
   1036 12s00r11           4029 	lcall	_wbyte_3w
                           4030 ;src/rtc.c:421: wbyte_3w(0x80);
                           4031 ;     genCall
   1039 75 82 80           4032 	mov	dpl,#0x80
   103C 12s00r11           4033 	lcall	_wbyte_3w
                           4034 ;src/rtc.c:422: reset_3w();
                           4035 ;     genCall
   103F 12s00r00           4036 	lcall	_reset_3w
   1042                    4037 00101$:
   1042 85*00 81           4038 	mov	sp,_bp
   1045 D0*00              4039 	pop	_bp
   1047 22                 4040 	ret
                           4041 ;------------------------------------------------------------
                           4042 ;Allocation info for local variables in function 'ds1302_read_memory'
                           4043 ;------------------------------------------------------------
                           4044 ;addr                      Allocated to registers r2 
                           4045 ;result                    Allocated to registers r2 
                           4046 ;address                   Allocated to registers 
                           4047 ;------------------------------------------------------------
                           4048 ;src/rtc.c:433: unsigned char ds1302_read_memory( const unsigned char addr)
                           4049 ;	-----------------------------------------
                           4050 ;	 function ds1302_read_memory
                           4051 ;	-----------------------------------------
   1048                    4052 _ds1302_read_memory:
   1048 C0*00              4053 	push	_bp
   104A 85 81*00           4054 	mov	_bp,sp
                           4055 ;     genReceive
   104D AA 82              4056 	mov	r2,dpl
                           4057 ;src/rtc.c:440: reset_3w();
                           4058 ;     genCall
   104F C0 02              4059 	push	ar2
   1051 12s00r00           4060 	lcall	_reset_3w
   1054 D0 02              4061 	pop	ar2
                           4062 ;src/rtc.c:441: wbyte_3w((address<<1)|0xC1);
                           4063 ;     genLeftShift
                           4064 ;     genLeftShiftLiteral
                           4065 ;     genlshOne
   1056 EA                 4066 	mov	a,r2
   1057 25 E0              4067 	add	a,acc
   1059 FA                 4068 	mov	r2,a
                           4069 ;     genOr
   105A 74 C1              4070 	mov	a,#0xC1
   105C 4A                 4071 	orl	a,r2
   105D F5 82              4072 	mov	dpl,a
                           4073 ;     genCall
   105F 12s00r11           4074 	lcall	_wbyte_3w
                           4075 ;src/rtc.c:442: result = rbyte_3w();
                           4076 ;     genCall
   1062 12s00r38           4077 	lcall	_rbyte_3w
   1065 AA 82              4078 	mov	r2,dpl
                           4079 ;     genAssign
                           4080 ;src/rtc.c:443: reset_3w();
                           4081 ;     genCall
   1067 C0 02              4082 	push	ar2
   1069 12s00r00           4083 	lcall	_reset_3w
   106C D0 02              4084 	pop	ar2
                           4085 ;src/rtc.c:444: return result;
                           4086 ;     genRet
   106E 8A 82              4087 	mov	dpl,r2
   1070                    4088 00101$:
   1070 85*00 81           4089 	mov	sp,_bp
   1073 D0*00              4090 	pop	_bp
   1075 22                 4091 	ret
                           4092 	.area CSEG    (CODE)
   1076                    4093 _month:
   1076r05s11              4094 	.byte _str_6,(_str_6 >> 8)
   1078r0As11              4095 	.byte _str_7,(_str_7 >> 8)
   107Ar0Fs11              4096 	.byte _str_8,(_str_8 >> 8)
   107Cr14s11              4097 	.byte _str_9,(_str_9 >> 8)
   107Er19s11              4098 	.byte _str_10,(_str_10 >> 8)
   1080r1Es11              4099 	.byte _str_11,(_str_11 >> 8)
   1082r23s11              4100 	.byte _str_12,(_str_12 >> 8)
   1084r28s11              4101 	.byte _str_13,(_str_13 >> 8)
   1086r2Ds11              4102 	.byte _str_14,(_str_14 >> 8)
   1088r32s11              4103 	.byte _str_15,(_str_15 >> 8)
   108Ar37s11              4104 	.byte _str_16,(_str_16 >> 8)
   108Cr3Cs11              4105 	.byte _str_17,(_str_17 >> 8)
   108E                    4106 _day:
   108Er41s11              4107 	.byte _str_18,(_str_18 >> 8)
   1090r45s11              4108 	.byte _str_19,(_str_19 >> 8)
   1092r4As11              4109 	.byte _str_20,(_str_20 >> 8)
   1094r4Fs11              4110 	.byte _str_21,(_str_21 >> 8)
   1096r54s11              4111 	.byte _str_22,(_str_22 >> 8)
   1098r59s11              4112 	.byte _str_23,(_str_23 >> 8)
   109Ar5Es11              4113 	.byte _str_24,(_str_24 >> 8)
   109Cr63s11              4114 	.byte _str_25,(_str_25 >> 8)
   109E                    4115 _day_full:
   109Er68s11              4116 	.byte _str_26,(_str_26 >> 8)
   10A0r75s11              4117 	.byte _str_27,(_str_27 >> 8)
   10A2r83s11              4118 	.byte _str_28,(_str_28 >> 8)
   10A4r90s11              4119 	.byte _str_29,(_str_29 >> 8)
   10A6r9Ds11              4120 	.byte _str_30,(_str_30 >> 8)
   10A8rAAs11              4121 	.byte _str_31,(_str_31 >> 8)
   10AArB7s11              4122 	.byte _str_32,(_str_32 >> 8)
   10ACrC4s11              4123 	.byte _str_33,(_str_33 >> 8)
   10AE                    4124 _monthDays:
   10AE 1F                 4125 	.db #0x1F
   10AF 1C                 4126 	.db #0x1C
   10B0 1F                 4127 	.db #0x1F
   10B1 1E                 4128 	.db #0x1E
   10B2 1F                 4129 	.db #0x1F
   10B3 1E                 4130 	.db #0x1E
   10B4 1F                 4131 	.db #0x1F
   10B5 1F                 4132 	.db #0x1F
   10B6 1E                 4133 	.db #0x1E
   10B7 1F                 4134 	.db #0x1F
   10B8 1E                 4135 	.db #0x1E
   10B9 1F                 4136 	.db #0x1F
   10BA                    4137 __str_0:
   10BA 25 30 34 75 20     4138 	.ascii "%04u "
   10BF 00                 4139 	.db 0x00
   10C0                    4140 __str_1:
   10C0 25 30 32 75 20 25  4141 	.ascii "%02u %02u:%02u:%02u"
        30 32 75 3A 25 30
        32 75 3A 25 30 32
        75
   10D3 00                 4142 	.db 0x00
   10D4                    4143 __str_2:
   10D4 20 20 20           4144 	.ascii "   "
   10D7 00                 4145 	.db 0x00
   10D8                    4146 __str_3:
   10D8 25 30 32 75 20 25  4147 	.ascii "%02u %02u:%02u"
        30 32 75 3A 25 30
        32 75
   10E6 00                 4148 	.db 0x00
   10E7                    4149 __str_4:
   10E7 25 30 34 75 2D 25  4150 	.ascii "%04u-%02u-%02u"
        30 32 75 2D 25 30
        32 75
   10F5 00                 4151 	.db 0x00
   10F6                    4152 __str_5:
   10F6 25 30 32 75 3A 25  4153 	.ascii "%02u:%02u:%02u"
        30 32 75 3A 25 30
        32 75
   1104 00                 4154 	.db 0x00
   1105                    4155 _str_6:
   1105 53 74 79 20        4156 	.ascii "Sty "
   1109 00                 4157 	.db 0x00
   110A                    4158 _str_7:
   110A 4C 75 74 20        4159 	.ascii "Lut "
   110E 00                 4160 	.db 0x00
   110F                    4161 _str_8:
   110F 4D 61 72 20        4162 	.ascii "Mar "
   1113 00                 4163 	.db 0x00
   1114                    4164 _str_9:
   1114 4B 77 69 20        4165 	.ascii "Kwi "
   1118 00                 4166 	.db 0x00
   1119                    4167 _str_10:
   1119 4D 61 6A 20        4168 	.ascii "Maj "
   111D 00                 4169 	.db 0x00
   111E                    4170 _str_11:
   111E 43 7A 65 20        4171 	.ascii "Cze "
   1122 00                 4172 	.db 0x00
   1123                    4173 _str_12:
   1123 4C 69 70 20        4174 	.ascii "Lip "
   1127 00                 4175 	.db 0x00
   1128                    4176 _str_13:
   1128 53 69 65 20        4177 	.ascii "Sie "
   112C 00                 4178 	.db 0x00
   112D                    4179 _str_14:
   112D 57 72 7A 20        4180 	.ascii "Wrz "
   1131 00                 4181 	.db 0x00
   1132                    4182 _str_15:
   1132 50 61 7A 20        4183 	.ascii "Paz "
   1136 00                 4184 	.db 0x00
   1137                    4185 _str_16:
   1137 4C 69 73 20        4186 	.ascii "Lis "
   113B 00                 4187 	.db 0x00
   113C                    4188 _str_17:
   113C 47 72 75 20        4189 	.ascii "Gru "
   1140 00                 4190 	.db 0x00
   1141                    4191 _str_18:
   1141 45 72 72           4192 	.ascii "Err"
   1144 00                 4193 	.db 0x00
   1145                    4194 _str_19:
   1145 50 6F 6E 20        4195 	.ascii "Pon "
   1149 00                 4196 	.db 0x00
   114A                    4197 _str_20:
   114A 57 74 6F 20        4198 	.ascii "Wto "
   114E 00                 4199 	.db 0x00
   114F                    4200 _str_21:
   114F 53 72 6F 20        4201 	.ascii "Sro "
   1153 00                 4202 	.db 0x00
   1154                    4203 _str_22:
   1154 43 7A 77 20        4204 	.ascii "Czw "
   1158 00                 4205 	.db 0x00
   1159                    4206 _str_23:
   1159 50 69 61 20        4207 	.ascii "Pia "
   115D 00                 4208 	.db 0x00
   115E                    4209 _str_24:
   115E 53 6F 62 20        4210 	.ascii "Sob "
   1162 00                 4211 	.db 0x00
   1163                    4212 _str_25:
   1163 4E 69 65 20        4213 	.ascii "Nie "
   1167 00                 4214 	.db 0x00
   1168                    4215 _str_26:
   1168 45 72 72 6F 72 20  4216 	.ascii "Error       "
        20 20 20 20 20 20
   1174 00                 4217 	.db 0x00
   1175                    4218 _str_27:
   1175 50 6F 6E 69 65 64  4219 	.ascii "Poniedzialek "
        7A 69 61 6C 65 6B
        20
   1182 00                 4220 	.db 0x00
   1183                    4221 _str_28:
   1183 57 74 6F 72 65 6B  4222 	.ascii "Wtorek      "
        20 20 20 20 20 20
   118F 00                 4223 	.db 0x00
   1190                    4224 _str_29:
   1190 53 72 6F 64 61 20  4225 	.ascii "Sroda       "
        20 20 20 20 20 20
   119C 00                 4226 	.db 0x00
   119D                    4227 _str_30:
   119D 43 7A 77 61 72 74  4228 	.ascii "Czwartek    "
        65 6B 20 20 20 20
   11A9 00                 4229 	.db 0x00
   11AA                    4230 _str_31:
   11AA 50 69 61 74 65 6B  4231 	.ascii "Piatek      "
        20 20 20 20 20 20
   11B6 00                 4232 	.db 0x00
   11B7                    4233 _str_32:
   11B7 53 6F 62 6F 74 61  4234 	.ascii "Sobota      "
        20 20 20 20 20 20
   11C3 00                 4235 	.db 0x00
   11C4                    4236 _str_33:
   11C4 4E 69 65 64 7A 69  4237 	.ascii "Niedziela   "
        65 6C 61 20 20 20
   11D0 00                 4238 	.db 0x00
                           4239 	.area XINIT   (CODE)

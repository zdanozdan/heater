                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.4.0 Thu Feb 10 12:42:18 2011
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module src/_heater
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                    0080     16 _P0	=	0x0080
                    0081     17 _SP	=	0x0081
                    0082     18 _DPL	=	0x0082
                    0083     19 _DPH	=	0x0083
                    0087     20 _PCON	=	0x0087
                    0088     21 _TCON	=	0x0088
                    0089     22 _TMOD	=	0x0089
                    008A     23 _TL0	=	0x008a
                    008B     24 _TL1	=	0x008b
                    008C     25 _TH0	=	0x008c
                    008D     26 _TH1	=	0x008d
                    0090     27 _P1	=	0x0090
                    0098     28 _SCON	=	0x0098
                    0099     29 _SBUF	=	0x0099
                    00A0     30 _P2	=	0x00a0
                    00B0     31 _P3	=	0x00b0
                    00B8     32 _IP	=	0x00b8
                    00C8     33 _T2CON	=	0x00c8
                    00C9     34 _T2MOD	=	0x00c9
                    00CA     35 _RCAP2L	=	0x00ca
                    00CB     36 _RCAP2H	=	0x00cb
                    00CC     37 _TL2	=	0x00cc
                    00CD     38 _TH2	=	0x00cd
                    00D0     39 _PSW	=	0x00d0
                    00E0     40 _A	=	0x00e0
                    00A6     41 _WDTRST	=	0x00a6
                    00A7     42 _WDTPRG	=	0x00a7
                    00A2     43 _AUXR1	=	0x00a2
                    008E     44 _AUXR	=	0x008e
                    00B9     45 _SADEN	=	0x00b9
                    00BA     46 _SADEN_1	=	0x00ba
                    00B7     47 _IPH	=	0x00b7
                    00B7     48 _IPH0	=	0x00b7
                    00B8     49 _IPL	=	0x00b8
                    00B8     50 _IPL0	=	0x00b8
                    00A8     51 _IE	=	0x00a8
                    00A9     52 _SADDR	=	0x00a9
                    00AA     53 _SADDR_1	=	0x00aa
                    00D8     54 _CCON	=	0x00d8
                    00D9     55 _CMOD	=	0x00d9
                    00DA     56 _CCAPM0	=	0x00da
                    00DB     57 _CCAPM1	=	0x00db
                    00DC     58 _CCAPM2	=	0x00dc
                    00DD     59 _CCAPM3	=	0x00dd
                    00DE     60 _CCAPM4	=	0x00de
                    00E9     61 _CL	=	0x00e9
                    00EA     62 _CCAP0L	=	0x00ea
                    00EB     63 _CCAP1L	=	0x00eb
                    00EC     64 _CCAP2L	=	0x00ec
                    00ED     65 _CCAP3L	=	0x00ed
                    00EE     66 _CCAP4L	=	0x00ee
                    00E0     67 _ACC	=	0x00e0
                    00F0     68 _B	=	0x00f0
                    00F9     69 _CH	=	0x00f9
                    00FA     70 _CCAP0H	=	0x00fa
                    00FB     71 _CCAP1H	=	0x00fb
                    00FC     72 _CCAP2H	=	0x00fc
                    00FD     73 _CCAP3H	=	0x00fd
                    00FE     74 _CCAP4H	=	0x00fe
                    00FF     75 _ICON	=	0x00ff
                    0085     76 _CKSEL	=	0x0085
                    0086     77 _OSCCON	=	0x0086
                    00D1     78 _FCON	=	0x00d1
                    00D2     79 _EECON	=	0x00d2
                    00D3     80 _EETIM	=	0x00d3
                             81 ;--------------------------------------------------------
                             82 ; special function bits 
                             83 ;--------------------------------------------------------
                    0080     84 _P0_0	=	0x0080
                    0081     85 _P0_1	=	0x0081
                    0082     86 _P0_2	=	0x0082
                    0083     87 _P0_3	=	0x0083
                    0084     88 _P0_4	=	0x0084
                    0085     89 _P0_5	=	0x0085
                    0086     90 _P0_6	=	0x0086
                    0087     91 _P0_7	=	0x0087
                    00A7     92 _ENBOOT	=	0x00a7
                    0088     93 _IT0	=	0x0088
                    0089     94 _IE0	=	0x0089
                    008A     95 _IT1	=	0x008a
                    008B     96 _IE1	=	0x008b
                    008C     97 _TR0	=	0x008c
                    008D     98 _TF0	=	0x008d
                    008E     99 _TR1	=	0x008e
                    008F    100 _TF1	=	0x008f
                    0090    101 _P1_0	=	0x0090
                    0091    102 _P1_1	=	0x0091
                    0092    103 _P1_2	=	0x0092
                    0093    104 _P1_3	=	0x0093
                    0094    105 _P1_4	=	0x0094
                    0095    106 _P1_5	=	0x0095
                    0096    107 _P1_6	=	0x0096
                    0097    108 _P1_7	=	0x0097
                    0090    109 _T2	=	0x0090
                    0091    110 _T2EX	=	0x0091
                    0098    111 _RI	=	0x0098
                    0099    112 _TI	=	0x0099
                    009A    113 _RB8	=	0x009a
                    009B    114 _TB8	=	0x009b
                    009C    115 _REN	=	0x009c
                    009D    116 _SM2	=	0x009d
                    009E    117 _SM1	=	0x009e
                    009F    118 _SM0	=	0x009f
                    00A0    119 _P2_0	=	0x00a0
                    00A1    120 _P2_1	=	0x00a1
                    00A2    121 _P2_2	=	0x00a2
                    00A3    122 _P2_3	=	0x00a3
                    00A4    123 _P2_4	=	0x00a4
                    00A5    124 _P2_5	=	0x00a5
                    00A6    125 _P2_6	=	0x00a6
                    00A7    126 _P2_7	=	0x00a7
                    00B0    127 _P3_0	=	0x00b0
                    00B1    128 _P3_1	=	0x00b1
                    00B2    129 _P3_2	=	0x00b2
                    00B3    130 _P3_3	=	0x00b3
                    00B4    131 _P3_4	=	0x00b4
                    00B5    132 _P3_5	=	0x00b5
                    00B6    133 _P3_6	=	0x00b6
                    00B7    134 _P3_7	=	0x00b7
                    00B0    135 _RXD	=	0x00b0
                    00B1    136 _TXD	=	0x00b1
                    00B2    137 _INT0	=	0x00b2
                    00B3    138 _INT1	=	0x00b3
                    00B4    139 _T0	=	0x00b4
                    00B5    140 _T1	=	0x00b5
                    00B6    141 _WR	=	0x00b6
                    00B7    142 _RD	=	0x00b7
                    00B8    143 _PX0	=	0x00b8
                    00B9    144 _PT0	=	0x00b9
                    00BA    145 _PX1	=	0x00ba
                    00BB    146 _PT1	=	0x00bb
                    00BC    147 _PS	=	0x00bc
                    00BD    148 _PT2	=	0x00bd
                    00C8    149 _T2CON_0	=	0x00c8
                    00C9    150 _T2CON_1	=	0x00c9
                    00CA    151 _T2CON_2	=	0x00ca
                    00CB    152 _T2CON_3	=	0x00cb
                    00CC    153 _T2CON_4	=	0x00cc
                    00CD    154 _T2CON_5	=	0x00cd
                    00CE    155 _T2CON_6	=	0x00ce
                    00CF    156 _T2CON_7	=	0x00cf
                    00C8    157 _CP_RL2	=	0x00c8
                    00C9    158 _C_T2	=	0x00c9
                    00CA    159 _TR2	=	0x00ca
                    00CB    160 _EXEN2	=	0x00cb
                    00CC    161 _TCLK	=	0x00cc
                    00CD    162 _RCLK	=	0x00cd
                    00CE    163 _EXF2	=	0x00ce
                    00CF    164 _TF2	=	0x00cf
                    00D0    165 _P	=	0x00d0
                    00D1    166 _FL	=	0x00d1
                    00D2    167 _OV	=	0x00d2
                    00D3    168 _RS0	=	0x00d3
                    00D4    169 _RS1	=	0x00d4
                    00D5    170 _F0	=	0x00d5
                    00D6    171 _AC	=	0x00d6
                    00D7    172 _CY	=	0x00d7
                    00AF    173 _EA	=	0x00af
                    00AE    174 _EC	=	0x00ae
                    00AD    175 _ET2	=	0x00ad
                    00AC    176 _ES	=	0x00ac
                    00AB    177 _ET1	=	0x00ab
                    00AA    178 _EX1	=	0x00aa
                    00A9    179 _ET0	=	0x00a9
                    00A8    180 _EX0	=	0x00a8
                    00DF    181 _CF	=	0x00df
                    00DE    182 _CR	=	0x00de
                    00DC    183 _CCF4	=	0x00dc
                    00DB    184 _CCF3	=	0x00db
                    00DA    185 _CCF2	=	0x00da
                    00D9    186 _CCF1	=	0x00d9
                    00D8    187 _CCF0	=	0x00d8
                            188 ;--------------------------------------------------------
                            189 ; overlayable register banks 
                            190 ;--------------------------------------------------------
                            191 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     192 	.ds 8
                            193 ;--------------------------------------------------------
                            194 ; internal ram data
                            195 ;--------------------------------------------------------
                            196 	.area DSEG    (DATA)
   0000                     197 _EDRIVE_SOFTWARE_VERSION:
   0000                     198 	.ds 3
                            199 ;--------------------------------------------------------
                            200 ; overlayable items in internal ram 
                            201 ;--------------------------------------------------------
                            202 	.area OSEG    (OVR,DATA)
                            203 ;--------------------------------------------------------
                            204 ; Stack segment in internal ram 
                            205 ;--------------------------------------------------------
                            206 	.area	SSEG	(DATA)
   0000                     207 __start__stack:
   0000                     208 	.ds	1
                            209 
                            210 ;--------------------------------------------------------
                            211 ; indirectly addressable internal ram data
                            212 ;--------------------------------------------------------
                            213 	.area ISEG    (DATA)
                            214 ;--------------------------------------------------------
                            215 ; bit data
                            216 ;--------------------------------------------------------
                            217 	.area BSEG    (BIT)
                            218 ;--------------------------------------------------------
                            219 ; external ram data
                            220 ;--------------------------------------------------------
                            221 	.area XSEG    (XDATA)
                            222 ;--------------------------------------------------------
                            223 ; external initialized ram data
                            224 ;--------------------------------------------------------
                            225 	.area XISEG   (XDATA)
                            226 ;--------------------------------------------------------
                            227 ; interrupt vector 
                            228 ;--------------------------------------------------------
                            229 	.area CSEG    (CODE)
   0000                     230 __interrupt_vect:
   0000 02s00r00            231 	ljmp	__sdcc_gsinit_startup
   0003 32                  232 	reti
   0004                     233 	.ds	7
   000B 02s00r00            234 	ljmp	_timer0_interrupt
   000E                     235 	.ds	5
   0013 32                  236 	reti
   0014                     237 	.ds	7
   001B 32                  238 	reti
   001C                     239 	.ds	7
   0023 32                  240 	reti
   0024                     241 	.ds	7
   002B 32                  242 	reti
                            243 ;--------------------------------------------------------
                            244 ; global & static initialisations
                            245 ;--------------------------------------------------------
                            246 	.area GSINIT  (CODE)
                            247 	.area GSFINAL (CODE)
                            248 	.area GSINIT  (CODE)
   0000                     249 __sdcc_gsinit_startup:
   0000 75 81rFF            250 	mov	sp,#__start__stack - 1
   0003 12s00r00            251 	lcall	__sdcc_external_startup
   0006 E5 82               252 	mov	a,dpl
   0008 60 03               253 	jz	__sdcc_init_data
   000A 02s00r2C            254 	ljmp	__sdcc_program_startup
   000D                     255 __sdcc_init_data:
                            256 ;	_mcs51_genXINIT() start
   000D 79r00               257 	mov	r1,#l_XINIT
   000F E9                  258 	mov	a,r1
   0010 44s00               259 	orl	a,#(l_XINIT >> 8)
   0012 60 1B               260 	jz	00003$
   0014 7As00               261 	mov	r2,#((l_XINIT+255) >> 8)
   0016 90s00r00            262 	mov	dptr,#s_XINIT
   0019 78r00               263 	mov	r0,#s_XISEG
   001B 75 A0s00            264 	mov	p2,#(s_XISEG >> 8)
   001E E4                  265 00001$:	clr	a
   001F 93                  266 	movc	a,@a+dptr
   0020 F2                  267 	movx	@r0,a
   0021 A3                  268 	inc	dptr
   0022 08                  269 	inc	r0
   0023 B8 00 02            270 	cjne	r0,#0,00002$
   0026 05 A0               271 	inc	p2
   0028 D9 F4               272 00002$:	djnz	r1,00001$
   002A DA F2               273 	djnz	r2,00001$
   002C 75 A0 FF            274 	mov	p2,#0xFF
   002F                     275 00003$:
                            276 ;	_mcs51_genXINIT() end
                            277 ;	_mcs51_genRAMCLEAR() start
   002F 78r00               278 	mov	r0,#l_XSEG
   0031 E8                  279 	mov	a,r0
   0032 44s00               280 	orl	a,#(l_XSEG >> 8)
   0034 60 0C               281 	jz	00005$
   0036 79s00               282 	mov	r1,#((l_XSEG + 255) >> 8)
   0038 90s00r00            283 	mov	dptr,#s_XSEG
   003B E4                  284 	clr     a
   003C F0                  285 00004$:	movx	@dptr,a
   003D A3                  286 	inc	dptr
   003E D8 FC               287 	djnz	r0,00004$
   0040 D9 FA               288 	djnz	r1,00004$
   0042 F6                  289 00005$:	mov	@r0,a
   0043 D8 FD               290 	djnz	r0,00005$
                            291 ;	_mcs51_genRAMCLEAR() end
                            292 ;src/_heater.c:22: static char* EDRIVE_SOFTWARE_VERSION = "Sterownik ogrzewania ver 1.0 $Id$";
                            293 ;     genCast
   0045 75*00rA2            294 	mov	_EDRIVE_SOFTWARE_VERSION,#__str_1
   0048 75*01s00            295 	mov	(_EDRIVE_SOFTWARE_VERSION + 1),#(__str_1 >> 8)
   004B 75*02 02            296 	mov	(_EDRIVE_SOFTWARE_VERSION + 2),#0x2
                            297 	.area GSFINAL (CODE)
   0000 02s00r2C            298 	ljmp	__sdcc_program_startup
                            299 ;--------------------------------------------------------
                            300 ; Home
                            301 ;--------------------------------------------------------
                            302 	.area HOME    (CODE)
                            303 	.area CSEG    (CODE)
                            304 ;--------------------------------------------------------
                            305 ; code
                            306 ;--------------------------------------------------------
                            307 	.area CSEG    (CODE)
   002C                     308 __sdcc_program_startup:
   002C 12s00r31            309 	lcall	_main
                            310 ;	return from main will lock up
   002F 80 FE               311 	sjmp .
                            312 ;------------------------------------------------------------
                            313 ;Allocation info for local variables in function 'main'
                            314 ;------------------------------------------------------------
                            315 ;pcon_status               Allocated to registers 
                            316 ;------------------------------------------------------------
                            317 ;src/_heater.c:24: void main (void)  
                            318 ;	-----------------------------------------
                            319 ;	 function main
                            320 ;	-----------------------------------------
   0031                     321 _main:
                    0002    322 	ar2 = 0x02
                    0003    323 	ar3 = 0x03
                    0004    324 	ar4 = 0x04
                    0005    325 	ar5 = 0x05
                    0006    326 	ar6 = 0x06
                    0007    327 	ar7 = 0x07
                    0000    328 	ar0 = 0x00
                    0001    329 	ar1 = 0x01
   0031 C0*00               330 	push	_bp
   0033 85 81*00            331 	mov	_bp,sp
                            332 ;src/_heater.c:28: SET_MAX_WDT_DELAY;   // we would have 2s at 12MHz, so using 40MHz will give 0,5s delay which should be enough
                            333 ;     genAssign
   0036 75 A7 07            334 	mov	_WDTPRG,#0x07
                            335 ;src/_heater.c:30: SERVICE_WATCHDOG;
                            336 ;     genAssign
   0039 75 A6 1E            337 	mov	_WDTRST,#0x1E
                            338 ;     genAssign
   003C 75 A6 E1            339 	mov	_WDTRST,#0xE1
                            340 ;src/_heater.c:31: lcd_init();
                            341 ;     genCall
   003F 12s00r00            342 	lcall	_lcd_init
                            343 ;src/_heater.c:32: SERVICE_WATCHDOG;
                            344 ;     genAssign
   0042 75 A6 1E            345 	mov	_WDTRST,#0x1E
                            346 ;     genAssign
   0045 75 A6 E1            347 	mov	_WDTRST,#0xE1
                            348 ;src/_heater.c:34: ENABLE_XRAM_1024;
                            349 ;     genOr
   0048 43 8E 0C            350 	orl	_AUXR,#0x0C
                            351 ;src/_heater.c:37: TMOD = 0x51;
                            352 ;     genAssign
   004B 75 89 51            353 	mov	_TMOD,#0x51
                            354 ;src/_heater.c:40: IPL0 |= TIMER1_PRIORITY_BIT;
                            355 ;     genOr
   004E 43 B8 08            356 	orl	_IPL0,#0x08
                            357 ;src/_heater.c:41: IPH0 |= TIMER1_PRIORITY_BIT;
                            358 ;     genOr
   0051 43 B7 08            359 	orl	_IPH0,#0x08
                            360 ;src/_heater.c:44: IPH0 |= PCA_PRIORITY_BIT;
                            361 ;     genOr
   0054 43 B7 40            362 	orl	_IPH0,#0x40
                            363 ;src/_heater.c:46: IPL0 |= EXTERNAL1_PRIORITY_BIT;
                            364 ;     genOr
   0057 43 B8 04            365 	orl	_IPL0,#0x04
                            366 ;src/_heater.c:47: IPH0 |= EXTERNAL1_PRIORITY_BIT;
                            367 ;     genOr
   005A 43 B7 04            368 	orl	_IPH0,#0x04
                            369 ;src/_heater.c:50: IPH0 |= TIMER2_PRIORITY_BIT;
                            370 ;     genOr
   005D 43 B7 20            371 	orl	_IPH0,#0x20
                            372 ;src/_heater.c:53: IPL0 |= TIMER0_PRIORITY_BIT;
                            373 ;     genOr
   0060 43 B8 02            374 	orl	_IPL0,#0x02
                            375 ;src/_heater.c:56: lcd_put_string(EDRIVE_SOFTWARE_VERSION);
                            376 ;     genCall
   0063 85*00 82            377 	mov	dpl,_EDRIVE_SOFTWARE_VERSION
   0066 85*01 83            378 	mov	dph,(_EDRIVE_SOFTWARE_VERSION + 1)
   0069 85*02 F0            379 	mov	b,(_EDRIVE_SOFTWARE_VERSION + 2)
   006C 12s00r00            380 	lcall	_lcd_put_string
                            381 ;src/_heater.c:57: lcd_put_string("System gotowy ");
                            382 ;     genCall
                            383 ;       Peephole 182.a  used 16 bit load of DPTR
   006F 90s00r93            384 	mov     dptr,#__str_0
   0072 75 F0 02            385 	mov	b,#0x02
   0075 12s00r00            386 	lcall	_lcd_put_string
                            387 ;src/_heater.c:59: SET_MAX_WDT_DELAY;   // we would have 2s at 12MHz, so using 40MHz will give 0,5s delay which should be enough
                            388 ;     genAssign
   0078 75 A7 07            389 	mov	_WDTPRG,#0x07
                            390 ;src/_heater.c:60: SERVICE_WATCHDOG;
                            391 ;     genAssign
   007B 75 A6 1E            392 	mov	_WDTRST,#0x1E
                            393 ;     genAssign
   007E 75 A6 E1            394 	mov	_WDTRST,#0xE1
                            395 ;src/_heater.c:62: clear_zones();
                            396 ;     genCall
   0081 12s00r00            397 	lcall	_clear_zones
                            398 ;src/_heater.c:63: flash_init();
                            399 ;     genCall
   0084 12s00r00            400 	lcall	_flash_init
                            401 ;src/_heater.c:64: keypad_init();
                            402 ;     genCall
   0087 12s00r00            403 	lcall	_keypad_init
                            404 ;src/_heater.c:66: main_program_workloop();
                            405 ;     genCall
   008A 12s00r00            406 	lcall	_main_program_workloop
   008D                     407 00101$:
   008D 85*00 81            408 	mov	sp,_bp
   0090 D0*00               409 	pop	_bp
   0092 22                  410 	ret
                            411 	.area CSEG    (CODE)
   0093                     412 __str_0:
   0093 53 79 73 74 65 6D   413 	.ascii "System gotowy "
        20 67 6F 74 6F 77
        79 20
   00A1 00                  414 	.db 0x00
   00A2                     415 __str_1:
   00A2 53 74 65 72 6F 77   416 	.ascii "Sterownik ogrzewania ver 1.0 $Id$"
        6E 69 6B 20 6F 67
        72 7A 65 77 61 6E
        69 61 20 76 65 72
        20 31 2E 30 20 24
        49 64 24
   00C3 00                  417 	.db 0x00
                            418 	.area XINIT   (CODE)
